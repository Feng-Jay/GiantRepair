Repair : chart_9
Current failed test : org.jfree.data.time.junit.TimeSeriesTests::testBug1864222 | 2019.09.04 AD at 21:50:14 CDT
Location : org.jfree.data.time.TimeSeries.createCopy:[883, 879, 882]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 21:50:54 CDT - 2019.09.04 AD at 22:24:35 CDT , PNumber : 11388, CandNumber : 154 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(end<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:24:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(start<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<=0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<=start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start>0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end>start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(start);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7124/pattern-ver1-serial/src.server.repository.SDMSIndex.java-getUnique.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(end);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7124/pattern-ver1-serial/src.server.repository.SDMSIndex.java-getUnique.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
+throw new IllegalStateException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/6680/pattern-ver1-serial/src.rollup.RollupSeq.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
-for(int index=start;index<=end;index++){
+for(int index=start;index<=end;start++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
-for(int index=start;index<=end;index++){
+for(int index=start;index<=end;end++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
+throw new IllegalArgumentException("Requires start <= end.".trim());
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
+start++;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
+end++;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
+start++;
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
+end++;
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+start++;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+end++;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+start++;
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+end++;
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
+start++;
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
+end++;
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
+start--;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
+end--;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+start--;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+end--;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<=0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<=start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
+start--;
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
+end--;
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+start--;
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+end--;
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+copy.clear();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+synchronized(this){
 copy.data=new java.util.ArrayList();
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
+throw new UnsupportedOperationException();
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(start++);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2359/pattern-ver1-serial/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.ha.HAService.java-doWaitTransfer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(end++);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2359/pattern-ver1-serial/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.ha.HAService.java-doWaitTransfer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
+throw new IllegalArgumentException(("Requires start <= end.").toLowerCase());
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+start++;
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+end++;
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(start<end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
-for(int index=start;index<=end;index++){
+for(int index=start;end<=index;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+synchronized(this){
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
+synchronized(this){
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
+}
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+synchronized(this){
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(end<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1475/pattern-ver1-serial/src.butterseal.src.edu.smcm.gamedev.butterseal.BSInterface.java-isTouchingInside.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+synchronized(this){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+synchronized(this){
 throw new IllegalArgumentException("Requires start <= end.");
+}
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
+e.printStackTrace();
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(this.data!=null){
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+start=start;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+end=end;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.isEmpty()){
+return null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(true){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(true){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.data==null){
 copy.data=new java.util.ArrayList();
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+int a=0;
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+int a=0;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+int a=0;
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+String OUTSTRING="";
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+String OUTSTRING="";
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+String OUTSTRING="";
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(Double.isNaN(start)){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(Double.isNaN(end)){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.Collections;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+Collections.sort(copy.data);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/3800/pattern-ver1-serial/app.src.main.java.com.randomappsinc.studentpicker.Adapters.EditNameListAdapter.java-EditNameListAdapter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+int indexSelection=0;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+int a=1;
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+int a=1;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+int a=1;
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+copy.data.add(copy);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/2490/pattern-ver1-serial/src.CrawlerJobManager.java-CrawlerJobManager.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
+boolean b=true;
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
+boolean b=true;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+boolean b=true;
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy==null){
+return null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(copy==null){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(this.data==null){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if("&null".equals(copy)){
+return null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
+copy.add(clone);
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
+copy.add(clone);
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+copy.add(clone);
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
+copy.data=new java.util.ArrayList();
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
+copy.data=new java.util.ArrayList();
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
+copy.data=new java.util.ArrayList();
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
+copy.data=new java.util.ArrayList();
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+copy.data=new java.util.ArrayList();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
+copy.data=new java.util.ArrayList();
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+if(start<0){
+return null;
+}
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
+if(start<0){
+return null;
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
+if(end<0){
+return null;
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+copy.data.add(new int[3]);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/3814/pattern-ver1-serial/src.models.WordModel.java-WordModel.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.equals("-1")){
+return null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0||start==Long.MIN_VALUE){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start||end==Long.MIN_VALUE){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=null);
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+assert (!copy.isEmpty());
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=(TimeSeries)super.clone());
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0||start==3){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start||end==3){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(copy==null){
+throw new CloneNotSupportedException("Root not directory or IO error occurred");
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy==null){
+throw new CloneNotSupportedException("Root not directory or IO error occurred");
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
 }
 }
+if(copy==null){
+throw new CloneNotSupportedException("Root not directory or IO error occurred");
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+if(start>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
+if(start>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
+}
+if(end>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(start>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(end>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.isEmpty()){
+copy=null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0||start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<0||end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0||start==0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start||end==0){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0||start>9){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start||end>9){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0&&start<4000000){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start&&end<4000000){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(start<0&&start!=9999){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(end<start&&end!=9999){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(start>0&&end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(0>0&&start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
+assert (start>=0):"Receive a negative tratment";
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
+assert (end>=0):"Receive a negative tratment";
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+assert (start>=0):"Receive a negative tratment";
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+assert (end>=0):"Receive a negative tratment";
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
+if(data!=null&&(start<0)){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
-if(end<start){
+if(data!=null&&(end<start)){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=null):"Appointments day is not allowed to be null!";
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
+assert (start!=0):"Receive a size tratment";
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
+assert (end!=0):"Receive a size tratment";
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+assert (start!=0):"Receive a size tratment";
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+assert (end!=0):"Receive a size tratment";
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
 }
 }
+if(copy.isEmpty()){
+copy=null;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
-}
-if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
 }
+if(end<start){
+throw new IllegalArgumentException("Requires start <= end.");
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy!=null){
 copy.data=new java.util.ArrayList();
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.data!=null){
 copy.data=new java.util.ArrayList();
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+TimeSeries t=copy;
+copy=null;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
-return copy;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+boolean succeeded=false;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(!succeeded){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
+succeeded=true;
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+boolean succeeded=false;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(!succeeded){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
+succeeded=true;
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+boolean succeeded=false;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(!succeeded){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
+succeeded=true;
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+boolean succeeded=false;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(!succeeded){
+return null;
+}
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+succeeded=true;
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
+if(start==3){
+System.out.println("debug");
+}
 copy.add(clone);
+if(start==3){
+System.out.println("debug");
+}
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
+if(end==3){
+System.out.println("debug");
+}
 copy.add(clone);
+if(end==3){
+System.out.println("debug");
+}
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
+if(start==3){
+System.out.println("debug");
+}
 e.printStackTrace();
+if(start==3){
+System.out.println("debug");
+}
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
+if(end==3){
+System.out.println("debug");
+}
 e.printStackTrace();
+if(end==3){
+System.out.println("debug");
+}
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
+if(start==3){
+System.out.println("debug");
+}
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
+}
+if(start==3){
+System.out.println("debug");
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7464/pattern-ver1-serial/myExpenses.src.main.java.org.totschnig.myexpenses.activity.ExpenseEdit.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
+long startTime=System.currentTimeMillis();
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 copy.data=new java.util.ArrayList();
 if(this.data.size()>0){
 for(int index=start;index<=end;index++){
 TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
 TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
 try{
 copy.add(clone);
 }catch(SeriesException e){
 e.printStackTrace();
 }
 }
 }
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
 if(start<0){
 throw new IllegalArgumentException("Requires start >= 0.");
 }
 if(end<start){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
-if(this.data.size()>0){
-for(int index=start;index<=end;index++){
-TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
-TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
-try{
-copy.add(clone);
-}catch(SeriesException e){
-e.printStackTrace();
-}
-}
-}
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 0, INS : 0, DEL : 32
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[864,902]
------------Candidate---------------
 public TimeSeries createCopy(int start,int end) throws CloneNotSupportedException{
-if(start<0){
-throw new IllegalArgumentException("Requires start >= 0.");
-}
-if(end<start){
-throw new IllegalArgumentException("Requires start <= end.");
-}
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
-if(this.data.size()>0){
-for(int index=start;index<=end;index++){
-TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
-TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
-try{
-copy.add(clone);
-}catch(SeriesException e){
-e.printStackTrace();
-}
-}
-}
 return copy;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 45, UPD : 3, INS : 0, DEL : 42
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 22:34:00 CDT
--------------- END -----------------
Location : org.jfree.data.time.TimeSeries.createCopy:[921, 924, 927, 931, 932, 933, 934, 935, 939, 940, 941, 942, 944, 947, 953]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 22:34:25 CDT - 2019.09.04 AD at 23:16:30 CDT , PNumber : 11354, CandNumber : 448 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
-int startIndex=getIndex(start);
+ int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:16:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
-int endIndex=getIndex(end);
+ int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
-boolean emptyRange=false;
+ boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>1){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>=0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+return null;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+return null;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+return null;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+return null;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(start!=null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(end!=null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(startIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(startIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<=0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<=0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<=0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+startIndex=-(startIndex+1);
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
+startIndex=-(startIndex+1);
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+endIndex=-(endIndex+1);
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
+endIndex=-(endIndex+1);
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:19:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex>0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex>0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex>0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:19:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex<=this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(end.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/79/pattern-ver1-serial/src.main.java.com.brxt.service.impl.ReportManagerImpl.java-getFinanceCheckList.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-(startIndex-1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-(endIndex-1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(end==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(start==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-(startIndex+startIndex);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-(endIndex+startIndex);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex>=this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)!=0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex!=this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
-if(emptyRange){
+if(true){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=endIndex-2;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
+emptyRange=emptyRange;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/1892/pattern-ver1-serial/toolbelt.src.main.java.com.simplifyops.toolbelt.ToolBelt.java-ansiColorOutput.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
-emptyRange=true;
+emptyRange=emptyRange;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/1892/pattern-ver1-serial/toolbelt.src.main.java.com.simplifyops.toolbelt.ToolBelt.java-ansiColorOutput.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex>this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(startIndex);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/5031/pattern-ver1-serial/demos.src.main.java.com.datatorrent.demos.adsdimension.GenericApplication.java-populateDAG.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(endIndex);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/5031/pattern-ver1-serial/demos.src.main.java.com.datatorrent.demos.adsdimension.GenericApplication.java-populateDAG.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>3){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex==this.data.size()){
+emptyRange=true;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/1681/pattern-ver1-serial/src.edu.umn.cs.melt.copper.compiletime.srcbuilders.single.ParserFragmentEngineBuilder.java-writeRunProductionSemanticAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-(startIndex+3);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-(endIndex+3);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)<0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-(endIndex+endIndex);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
-int startIndex=getIndex(start);
+ int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
-int endIndex=getIndex(end);
+ int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
-int startIndex=getIndex(start);
+ int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
-TimeSeries copy=(TimeSeries)super.clone();
+ TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
-boolean emptyRange=false;
-int startIndex=getIndex(start);
+ boolean emptyRange=false;
+ int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
-boolean emptyRange=false;
+ boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
-int endIndex=getIndex(end);
+ int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
-int endIndex=getIndex(end);
+ int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
-TimeSeries copy=(TimeSeries)super.clone();
+ TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+startIndex++;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+startIndex++;
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+endIndex++;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+endIndex++;
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
+startIndex++;
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
-if(emptyRange){
+if(!emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+startIndex++;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+endIndex++;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+startIndex++;
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+startIndex++;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+startIndex++;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:24:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+startIndex--;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+startIndex--;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:25:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+startIndex--;
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+endIndex--;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:26:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
+startIndex--;
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:26:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+endIndex--;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+endIndex--;
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<=0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<=0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<=0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<=0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<=0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<=0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+copy.clear();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+synchronized(this){
 copy.data=new java.util.ArrayList();
+}
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+synchronized(this){
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(startIndex++);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2359/pattern-ver1-serial/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.ha.HAService.java-doWaitTransfer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
-copy.data=new java.util.ArrayList();
+copy.data=new java.util.ArrayList(endIndex++);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2359/pattern-ver1-serial/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.ha.HAService.java-doWaitTransfer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<1){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<1){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<1){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<1){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<1){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<1){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
+endIndex++;
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(startIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(startIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4567/pattern-ver1-serial/18-Map.LunchList.src.apt.tutorial.RestaurantHelper.java-onUpgrade.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-(startIndex+-1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-(endIndex+-1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:29:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
+while(true){
+
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+while(true){
+
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+while(true){
+
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+while(true){
+
+}
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+return null;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+return null;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4615/pattern-ver1-serial/src.at.jku.ssw.cmm.launcher.AddProfileListener.java-mouseClicked.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+synchronized(this){
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
+synchronized(this){
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
+synchronized(this){
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+synchronized(this){
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
+}
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+synchronized(this){
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+synchronized(this){
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+synchronized(this){
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
+synchronized(this){
 if(endIndex<0){
 emptyRange=true;
+}
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return this;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==0){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(start.equals(null)){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(end.equals(null)){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+synchronized(this){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+synchronized(this){
 throw new IllegalArgumentException("Requires start on or before end.");
+}
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+synchronized(this){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+synchronized(this){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+synchronized(this){
 emptyRange=true;
+}
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=0;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+if(-(startIndex+1)!=0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+if(-(endIndex+1)!=0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Solution---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+if(endIndex-1!=0){
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()-1){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/2375/pattern-ver1-serial/src.main.Game.java-endTurn.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-startIndex+1*100;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-endIndex+1*100;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=2;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=3;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+if(start!=null){
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
+}
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
+start=start;
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+startIndex=startIndex;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Iterator;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==-1){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex+startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+if(1!=0){
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/186/pattern-ver1-serial/src.ClassAdminBackEnd.Project.java-incHistogramcount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.isEmpty()){
+return null;
+}
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+startIndex=1000;
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(true){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(true){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(true){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(true){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(true){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.data==null){
 copy.data=new java.util.ArrayList();
+}
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return (TimeSeries)createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=10;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+int a=0;
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+int a=0;
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+int a=0;
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+int a=0;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+int a=0;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+int a=0;
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+int a=0;
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+int a=0;
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+int a=0;
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+int a=0;
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+emptyRange=true;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
+emptyRange=false;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:39:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+emptyRange=true;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
-emptyRange=true;
+emptyRange=false;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+emptyRange=false;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+emptyRange=true;
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
-emptyRange=true;
+emptyRange=false;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=endIndex;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6985/pattern-ver1-serial/src.org.broad.igv.track.DataTrack.java-getInViewScores.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:39:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(isEmpty()){
+throw new CloneNotSupportedException("Pop an empty stack.");
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+if(endIndex!=endIndex-1){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+String OUTSTRING="";
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+String OUTSTRING="";
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+String OUTSTRING="";
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+String OUTSTRING="";
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+String OUTSTRING="";
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+String OUTSTRING="";
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+String OUTSTRING="";
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+String OUTSTRING="";
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=100;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-2;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-2;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(Double.isNaN(startIndex)){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(Double.isNaN(endIndex)){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(Double.isNaN(endIndex)){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:41:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-startIndex;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-endIndex;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=startIndex;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/7874/pattern-ver1-serial/jmetal-algorithm.src.main.java.org.uma.jmetal.algorithm.singleobjective.particleswarmoptimization.StandardPSO2007.java-StandardPSO2007.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(equals(start)){
+return null;
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
+if(equals(end)){
+return null;
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(equals(start)){
+return null;
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(equals(end)){
+return null;
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(equals(start)){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(equals(end)){
+return null;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Collections;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+Collections.sort(copy.data);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V34/3800/pattern-ver1-serial/app.src.main.java.com.randomappsinc.studentpicker.Adapters.EditNameListAdapter.java-EditNameListAdapter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+int indexSelection=0;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+int indexSelection=0;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+int indexSelection=0;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+int indexSelection=0;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
+int indexSelection=0;
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return (TimeSeries)(createCopy(startIndex,endIndex));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return createCopy(Math.max(startIndex,endIndex),endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Solution---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
-return createCopy(startIndex,endIndex);
+return createCopy(startIndex,Math.max(startIndex,endIndex));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
+endIndex=endIndex+endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+int a=1;
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+int a=1;
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+int a=1;
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+int a=1;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+int a=1;
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+int a=1;
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+int a=1;
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+int a=1;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+int a=1;
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+int a=1;
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+copy.data.add(copy);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V18/2490/pattern-ver1-serial/src.CrawlerJobManager.java-CrawlerJobManager.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
+boolean b=true;
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
+boolean b=true;
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
+boolean b=true;
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+boolean b=true;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+boolean b=true;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+boolean b=true;
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+boolean b=true;
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+boolean b=true;
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+boolean b=true;
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+boolean b=true;
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(start==null){
+return null;
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(end==null){
+return null;
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy==null){
+return null;
+}
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(!emptyRange){
+throw new CloneNotSupportedException("マージ対象のファイルが一つも見つかりませんでした。");
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(start==null){
+return null;
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:45:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+if(this.data==null){
+return null;
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=1;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=1;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=-1;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=-1;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(end==null){
+return null;
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(start==null){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=0;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=0;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
+if("&null".equals(start)){
+return null;
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
+if("&null".equals(end)){
+return null;
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:47:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if("&null".equals(copy)){
+return null;
+}
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=2;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:47:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=2;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=3;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=3;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:48:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+emptyRange=true;
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
 }
+emptyRange=true;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+emptyRange=true;
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:49:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+emptyRange=true;
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
-emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+emptyRange=true;
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:49:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+emptyRange=true;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+emptyRange=true;
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.equals("-1")){
+return null;
+}
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0||startIndex==Long.MIN_VALUE){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0||endIndex==Long.MIN_VALUE){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0||endIndex==Long.MIN_VALUE){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
 emptyRange=true;
+if(startIndex==this.data.size()){
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=10;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=10;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+emptyRange=true;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+emptyRange=true;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
-emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+emptyRange=true;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
-emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=100;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=100;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex!=0){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
+}
+if(end==null){
+return null;
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(end==null){
+return null;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+try{
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+emptyRange=true;
+}
+}finally{
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+assert (start!=null);
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+assert (end!=null);
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=null);
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+assert (!copy.isEmpty());
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(start!=null){
+if(start==null){
+throw new IllegalArgumentException("Null 'start' argument.");
+}
+if(end==null){
+throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(start.compareTo(end)>0){
+throw new IllegalArgumentException("Requires start on or before end.");
+}
+boolean emptyRange=false;
+int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=-(startIndex+1);
+if(startIndex==this.data.size()){
+emptyRange=true;
+}
+}
+int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=-(endIndex+1);
+endIndex=endIndex-1;
+}
+if(endIndex<0){
+emptyRange=true;
+}
+if(emptyRange){
+TimeSeries copy=(TimeSeries)super.clone();
+copy.data=new java.util.ArrayList();
+return copy;
+}else {
+return createCopy(startIndex,endIndex);
+}
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+if(end!=null){
+if(start==null){
+throw new IllegalArgumentException("Null 'start' argument.");
+}
+if(end==null){
+throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(start.compareTo(end)>0){
+throw new IllegalArgumentException("Requires start on or before end.");
+}
+boolean emptyRange=false;
+int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=-(startIndex+1);
+if(startIndex==this.data.size()){
+emptyRange=true;
+}
+}
+int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=-(endIndex+1);
+endIndex=endIndex-1;
+}
+if(endIndex<0){
+emptyRange=true;
+}
+if(emptyRange){
+TimeSeries copy=(TimeSeries)super.clone();
+copy.data=new java.util.ArrayList();
+return copy;
+}else {
+return createCopy(startIndex,endIndex);
+}
+}
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+if(endIndex==0){
+return null;
+}
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+if(startIndex==0){
+return null;
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex==0){
+return null;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Solution---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+if(endIndex==0){
+return null;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex==0){
+return null;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<-1){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<-1){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<-1){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<-1){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<-1){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<-1){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex<0){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+assert (emptyRange!=false);
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+assert (startIndex!=getIndex(start));
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+assert (endIndex!=getIndex(end));
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=(TimeSeries)super.clone());
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=startIndex+-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=endIndex+-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex>0){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
+assert (start!=null);
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
+assert (end!=null);
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(start==null||"查看红包".equals(start)){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(end==null||"查看红包".equals(end)){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0||start.compareTo(end)==3){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0||startIndex==3){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()||startIndex==3){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0||endIndex==3){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0||endIndex==3){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+if(this.data==null){
+throw new CloneNotSupportedException("player is not initialised, game might not be started");
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(startIndex>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(endIndex>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+if(startIndex>7){
+throw new CloneNotSupportedException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start!=null&&start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+if(copy.isEmpty()){
+copy=null;
+}
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex<0||startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0||startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0||endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0||endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)<0||start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(true){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(true){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
+startIndex=(-(startIndex+1)+startIndex)%startIndex;
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
-endIndex=-(endIndex+1);
+endIndex=(-(endIndex+1)+endIndex)%endIndex;
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0==false){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()==false){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()||startIndex==Long.MIN_VALUE){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0||start.compareTo(end)==Long.MIN_VALUE){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0&&false){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+if(this.data==null){
+throw new CloneNotSupportedException("connection offline");
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7367/pattern-ver1-serial/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ServerJms.java-open.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+TimeSeries copy=(TimeSeries)super.clone();
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
-TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0||start.compareTo(end)==0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0||startIndex==0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()||startIndex==0){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0||endIndex==0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:57:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0||endIndex==0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0||endIndex>9){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0||startIndex>9){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0||endIndex>9){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0||start.compareTo(end)>9){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()||startIndex>9){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0&&start.compareTo(end)<4000000){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0&&startIndex<4000000){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0&&endIndex<4000000){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0&&endIndex<4000000){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()&&startIndex<4000000){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(start==null||start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(end==null||end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:58:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(Double.isNaN(start.compareTo(end))){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(Double.isNaN(startIndex)){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0==true){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()==true){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0&&start.compareTo(end)!=9999){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(startIndex<0&&startIndex!=9999){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(startIndex==this.data.size()&&startIndex!=9999){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(endIndex<0&&endIndex!=9999){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(endIndex<0&&endIndex!=9999){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(0>0&&start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(this.data.size()>0&&startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(0>0&&startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(0>0&&endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(0>0&&endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+assert (startIndex>=0):"Receive a negative tratment";
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.04 AD at 23:59:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+assert (startIndex>=0):"Receive a negative tratment";
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+assert (startIndex>=0):"Receive a negative tratment";
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+assert (endIndex>=0):"Receive a negative tratment";
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+assert (endIndex>=0):"Receive a negative tratment";
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+assert (endIndex>=0):"Receive a negative tratment";
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(data!=null&&(start==null)){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(data!=null&&(end==null)){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
-if(emptyRange){
+if(data!=null&&(emptyRange)){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(data!=null&&(start.compareTo(end)>0)){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
+if(data!=null&&(startIndex==this.data.size())){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
+if(data!=null&&(startIndex<0)){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
+if(data!=null&&(endIndex<0)){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
-if(endIndex<0){
+if(data!=null&&(endIndex<0)){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
+TimeSeries copy=(TimeSeries)super.clone();
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
-TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start==null||start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+assert (start!=null):"Appointments day is not allowed to be null!";
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+assert (end!=null):"Appointments day is not allowed to be null!";
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+assert (copy!=null):"Appointments day is not allowed to be null!";
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+assert (startIndex!=0):"Receive a size tratment";
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+assert (startIndex!=0):"Receive a size tratment";
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+assert (startIndex!=0):"Receive a size tratment";
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+assert (endIndex!=0):"Receive a size tratment";
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+assert (endIndex!=0):"Receive a size tratment";
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+assert (endIndex!=0):"Receive a size tratment";
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+endIndex=endIndex-1;
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+if(startIndex<0){
+startIndex=0;
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex=0;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
+if(endIndex<0){
+endIndex=0;
+}
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex<0){
+endIndex=0;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+if(endIndex<0){
+endIndex=0;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+if(emptyRange!=true){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(startIndex<=0){
+startIndex=1;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(endIndex<=0){
+endIndex=1;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<=0){
+startIndex=1;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+if(endIndex<=0){
+endIndex=1;
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(endIndex>startIndex){
+endIndex=startIndex;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Solution---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+}
+if(startIndex>endIndex){
+startIndex=endIndex;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+endIndex=endIndex-1;
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+endIndex=endIndex-1;
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+endIndex=endIndex-1;
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
-if(start==null){
+if(start==null&&!start.equals("")){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
-if(end==null){
+if(end==null&&!end.equals("")){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex<=0){
+endIndex=endIndex;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1816/pattern-ver1-serial/dkpro-tc-ml.src.main.java.org.dkpro.tc.ml.FoldClassificationUnitCasMultiplier.java-process.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+if(endIndex<=0){
+endIndex=endIndex;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1816/pattern-ver1-serial/dkpro-tc-ml.src.main.java.org.dkpro.tc.ml.FoldClassificationUnitCasMultiplier.java-process.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
-endIndex=endIndex-1;
 }
+endIndex=endIndex-1;
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/810/pattern-ver1-serial/src.main.java.org.gooru.nucleus.handlers.courses.processors.repositories.activejdbc.dbhandlers.MoveCollectionToLessonHandler.java-validateRequest.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+startIndex=-(startIndex+1);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
-if(endIndex<0){
 endIndex=-(endIndex+1);
+if(endIndex<0){
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+startIndex=-(startIndex+1);
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
 startIndex=-(startIndex+1);
+if(startIndex<0){
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5076/pattern-ver1-serial/src.main.java.org.jsweet.transpiler.StaticInitilializerAnalyzer.java-visitClassDef.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+startIndex=-(startIndex+1);
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
+endIndex=-(endIndex+1);
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
+TimeSeries t=copy;
+copy=null;
 copy.data=new java.util.ArrayList();
-return copy;
+return t;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
+synchronized(this){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
+}
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=getIndex(start);
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex=-(startIndex+1);
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=getIndex(start);
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex<0){
+endIndex=-(endIndex+1);
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex=-(startIndex+1);
 }
 int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=getIndex(end);
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(start==null||end==null){
+throw new CloneNotSupportedException();
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
+}
+if(end==null||start==null){
+throw new CloneNotSupportedException();
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
+}
 if(startIndex==this.data.size()){
 emptyRange=true;
-}
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
-emptyRange=true;
-}
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+emptyRange=true;
+}
+if(startIndex==this.data.size()){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+boolean succeeded=false;
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(!succeeded){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+succeeded=true;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+boolean succeeded=false;
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(!succeeded){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+succeeded=true;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+boolean succeeded=false;
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(!succeeded){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+succeeded=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
+boolean succeeded=false;
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
+if(!succeeded){
+return null;
+}
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
+succeeded=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex--;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex--;
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:05:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex--;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex--;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex--;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex<0){
+endIndex--;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+synchronized(this){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<3){
+startIndex=3;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+if(endIndex<3){
+endIndex=3;
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<3){
+startIndex=3;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<3){
+startIndex=3;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<3){
+startIndex=3;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+}
+if(endIndex<3){
+endIndex=3;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=0;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=0;
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+if(startIndex<0){
+startIndex=0;
+}
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex=0;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
+if(startIndex<0){
+startIndex=0;
 }
 int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=0;
+}
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+long startTime=System.currentTimeMillis();
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
+long startTime=System.currentTimeMillis();
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
+long startTime=System.currentTimeMillis();
 emptyRange=true;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
+long startTime=System.currentTimeMillis();
 emptyRange=true;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
+long startTime=System.currentTimeMillis();
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
+synchronized(this){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
+}
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 8, INS : 0, DEL : 6
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
+}else {
+emptyRange=true;
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
-startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
 emptyRange=true;
-}
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
-if(start.compareTo(end)>0){
+if(start.compareTo(end)>0||start.compareTo(Long.valueOf(3170))==0||start.compareTo(Long.valueOf(3780))==0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3757/pattern-ver1-serial/webchick-local.src.main.java.com.agrologic.app.gui.rxtx.MainScreenPanel.java-run.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
-if(startIndex<0){
-startIndex=-(startIndex+1);
-if(startIndex==this.data.size()){
-emptyRange=true;
-}
-}
 int endIndex=getIndex(end);
 if(endIndex<0){
 endIndex=-(endIndex+1);
 endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
+if(startIndex<0){
+startIndex=-(startIndex+1);
+if(startIndex==this.data.size()){
+emptyRange=true;
+}
+}
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[904,956]
------------Candidate---------------
 public TimeSeries createCopy(RegularTimePeriod start,RegularTimePeriod end) throws CloneNotSupportedException{
 if(start==null){
 throw new IllegalArgumentException("Null 'start' argument.");
 }
 if(end==null){
 throw new IllegalArgumentException("Null 'end' argument.");
 }
 if(start.compareTo(end)>0){
 throw new IllegalArgumentException("Requires start on or before end.");
 }
 boolean emptyRange=false;
 int startIndex=getIndex(start);
+int endIndex=getIndex(end);
+if(endIndex<0){
+endIndex=-(endIndex+1);
+endIndex=endIndex-1;
 if(startIndex<0){
 startIndex=-(startIndex+1);
 if(startIndex==this.data.size()){
 emptyRange=true;
 }
 }
-int endIndex=getIndex(end);
-if(endIndex<0){
-endIndex=-(endIndex+1);
-endIndex=endIndex-1;
 }
 if(endIndex<0){
 emptyRange=true;
 }
 if(emptyRange){
 TimeSeries copy=(TimeSeries)super.clone();
 copy.data=new java.util.ArrayList();
 return copy;
 }else {
 return createCopy(startIndex,endIndex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:08:24 CDT
--------------- END -----------------
Location : org.jfree.data.time.Day.Day:[122, 123, 124, 125]#0.3779644730092272
Compute Candidate : 2019.09.05 AD at 00:08:45 CDT - 2019.09.05 AD at 00:13:53 CDT , PNumber : 11263, CandNumber : 61 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import java.util.Locale;
+
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
-peg(Calendar.getInstance());
+peg(Calendar.getInstance(Locale.ENGLISH));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3320/pattern-ver1-serial/src.main.java.com.sk89q.craftbook.circuits.ic.ICMechanicFactory.java-hasSafePermissions.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:13:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import java.nio.charset.StandardCharsets;
+
+import java.util.Locale;
+
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
-peg(Calendar.getInstance());
+peg(Calendar.getInstance(Locale.UK));
 }

PATTERN : /home/jiajun/GithubData/2016/V15/4612/pattern-ver1-serial/plugins.org.csstudio.saverestore.git.src.org.csstudio.saverestore.git.GitManager.java-findSnapshotsByTag.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:13:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
-peg(Calendar.getInstance());
+peg(Calendar.getInstance().getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+day++;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+month++;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+year++;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+day++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+month++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+year++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+day--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+month--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+year--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+day--;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+month--;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+year--;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+synchronized(this){
 this.serialDate=SerialDate.createInstance(day,month,year);
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+synchronized(this){
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:14:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+day=day;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+month=month;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+year=year;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(this.serialDate==null){
 this.serialDate=SerialDate.createInstance(day,month,year);
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+int a=0;
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+String OUTSTRING="";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:16:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+int SerialDate=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+int Calendar=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+int a=1;
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+boolean Calendar=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+boolean SerialDate=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+boolean b=true;
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(day<0){
+return ;
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(month<0){
+return ;
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(year<0){
+return ;
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+try{
 this.serialDate=SerialDate.createInstance(day,month,year);
+}finally{
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
-this.serialDate=SerialDate.createInstance(day,month,year);
+this.serialDate=null;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+assert (day>=0):"Receive a negative tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+assert (month>=0):"Receive a negative tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+assert (year>=0):"Receive a negative tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Day(int day,int month,int year){
+assert (day!=0):"Receive a size tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Day(int day,int month,int year){
+assert (month!=0):"Receive a size tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Day(int day,int month,int year){
+assert (year!=0):"Receive a size tratment";
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(day>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(month>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(year>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(this.serialDate==null){
 this.serialDate=SerialDate.createInstance(day,month,year);
-peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(this.serialDate!=null){
 this.serialDate=SerialDate.createInstance(day,month,year);
-peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
-this.serialDate=SerialDate.createInstance(day,month,year);
+try{
 peg(Calendar.getInstance());
+}finally{
+this.serialDate=SerialDate.createInstance(day,month,year);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(day==3){
+System.out.println("debug");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+if(day==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(month==3){
+System.out.println("debug");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+if(month==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+if(year==3){
+System.out.println("debug");
+}
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+if(year==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
 this.serialDate=SerialDate.createInstance(day,month,year);
+for(int i=0;i<24;i++){
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+for(int i=0;i<24;i++){
 this.serialDate=SerialDate.createInstance(day,month,year);
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
-this.serialDate=SerialDate.createInstance(day,month,year);
+if(this.serialDate!=SerialDate.createInstance(day,month,year)){
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 3, INS : 0, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[115,125]
------------Candidate---------------
 public Day(int day,int month,int year){
+long startTime=System.currentTimeMillis();
 this.serialDate=SerialDate.createInstance(day,month,year);
 peg(Calendar.getInstance());
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:18:43 CDT
--------------- END -----------------
Location : org.jfree.data.time.SpreadsheetDate.calcSerial:[452, 449, 450, 451, 456, 457]#0.35355339059327373
Compute Candidate : 2019.09.05 AD at 00:19:03 CDT - 2019.09.05 AD at 00:38:44 CDT , PNumber : 11426, CandNumber : 291 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+ int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
- final int dd=d;
+ int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>=MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+return 0;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+return 0;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((d-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((m-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount(d-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount(m-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)-SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy-mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm-dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd-1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+yy+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:40:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+yy+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+mm+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:41:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+dd+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+d+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+y+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[0];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4175/pattern-ver1-serial/common-gui.src.main.java.org.drugis.common.gui.FileDialog.java-wrapExtensions.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m<MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m!=MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
+if(SerialDate.isLeapYear(y)){
+mm=mm+1;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-2);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*2)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-2)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[2];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-d)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-m)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>3){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[yy];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[d];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[y];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+m+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/6298/pattern-ver1-serial/src.net.fibulwinter.gtd.presentation.NextActionListActivity.java-fillData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+3;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+3+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+3+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+return mm;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+return mm;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+return y;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+d+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/1685/pattern-ver1-serial/src.simulation.Simulation.java-calculateServerUseTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/1685/pattern-ver1-serial/src.simulation.Simulation.java-calculateServerUseTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
- final int dd=d;
+ int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+ int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+ int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
- final int dd=d;
+ int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+mm++;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+mm++;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+mm++;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+y++;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+d++;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+m++;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+y++;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+d++;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+m++;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+y++;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+d++;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+m++;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+y++;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+mm--;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+mm--;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+mm--;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+y--;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+d--;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+m--;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+y--;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+d--;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+m--;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+y--;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m++];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+return 0;
 }
+return 0;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear((int)(y))){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+(int)(mm)+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+(int)(dd)+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+(int)(1);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+d++;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+m++;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+y++;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+-1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+-1+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:47:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+-1+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+while(true){
+
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+while(true){
+
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+synchronized(this){
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount((y)+1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(((y)+1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(!SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(mm+1!=0){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(y-1900*100*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m-1];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+mm=d;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+mm=m;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+1+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+1+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+y=y;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(1!=0){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/186/pattern-ver1-serial/src.ClassAdminBackEnd.Project.java-incHistogramcount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+mm=1000;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(true){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(true){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(y)==false){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+1*yy;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+1*mm;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+1*d;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+1*m;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+1*y;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=yy;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=d;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=m;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=y;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY/2){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+int a=0;
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+int a=0;
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+int a=0;
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:51:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(y-1900*5*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+String OUTSTRING="";
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+String OUTSTRING="";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+String OUTSTRING="";
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount((int)(y-1));
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+int SerialDate=5;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(Double.isNaN(m)){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(y)==true){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(y*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(Math.abs(y))){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount(Math.abs(y-1));
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+int AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH=8;
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+int indexSelection=0;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+int indexSelection=0;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+int indexSelection=0;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
+mm=mm+mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+int a=1;
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+int a=1;
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+int a=1;
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+boolean b=true;
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+boolean b=true;
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+boolean b=true;
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
-int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m&0xff];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V23/7731/pattern-ver1-serial/src.jassemble.CPU.java-setMem.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(dd==d){
+return yy;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(yy==((y-1900)*365)+SerialDate.leapYearCount(y-1)){
+return mm;
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(mm==SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m]){
+return yy;
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(yy==((y-1900)*365)+SerialDate.leapYearCount(y-1)){
+return dd;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(dd==d){
+return mm;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 00:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(mm==SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m]){
+return dd;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+if(y<0){
+return 0;
+}
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(y<0){
+return 0;
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(y<0){
+return 0;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY||m==Long.MIN_VALUE){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+if(mm==0){
+return 0;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if(mm==0){
+return 0;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
+if(mm==0){
+return 0;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:04:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(((int)y-(int)1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount((int)y-(int)1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return (int)yy+(int)mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+assert (yy!=((y-1900)*365)+SerialDate.leapYearCount(y-1));
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+assert (mm!=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m]);
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+assert (dd!=d);
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(Math.max(y,0))){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+SerialDate.leapYearCount(Math.max(y-1,0));
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+int endIndex2=y;
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(endIndex2)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1730/pattern-ver1-serial/Nanogramme.src.models.Block.java-setGone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(((y-1900))+365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+if((Thread.currentThread().interrupted())){
+return 0;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if((Thread.currentThread().interrupted())){
+return 0;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if((Thread.currentThread().interrupted())){
+return 0;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY||m==3){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+synchronized(this){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(y-1900)*365*100+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m<0||m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+1+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+2;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY||m==0){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(y-1900)*365*5+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY||m>9){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=y+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/2928/pattern-ver1-serial/src.offensive.Communicator.JsonMessage.java-toString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY&&m<4000000){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+(int)(SerialDate.leapYearCount(y-1));
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+(SerialDate.leapYearCount(y-1)+1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+-1;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY&&m!=9999){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(MonthConstants.FEBRUARY>0&&m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+assert (mm>=0):"Receive a negative tratment";
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+assert (y>=0):"Receive a negative tratment";
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+assert (d>=0):"Receive a negative tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+assert (m>=0):"Receive a negative tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+assert (y>=0):"Receive a negative tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+assert (yy>=0):"Receive a negative tratment";
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+assert (mm>=0):"Receive a negative tratment";
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+assert (mm>=0):"Receive a negative tratment";
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+assert (dd>=0):"Receive a negative tratment";
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((int)(y-1900)*(int)365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return (int)yy+mm+(int)dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+y;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+3;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:07:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+d;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=((y-1900)*365)+m;
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+assert (mm!=0):"Receive a size tratment";
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+assert (y!=0):"Receive a size tratment";
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
+assert (d!=0):"Receive a size tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
+assert (m!=0):"Receive a size tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
+assert (y!=0):"Receive a size tratment";
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+assert (yy!=0):"Receive a size tratment";
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+assert (mm!=0):"Receive a size tratment";
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+assert (mm!=0):"Receive a size tratment";
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+assert (dd!=0):"Receive a size tratment";
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+if(m>MonthConstants.FEBRUARY||m=='"'){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(y>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+if(y>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(y>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
 }
+mm=mm+1;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:08:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm*dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/1691/pattern-ver1-serial/src.lib.AutotileGenerator.java-Autotile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+if(SerialDate.isLeapYear(y)){
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+mm=mm+1;
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+if(mm<0){
+mm=0;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if(mm<0){
+mm=0;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
+if(mm<0){
+mm=0;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+mm=mm+1;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+mm=mm+1;
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(mm<=0){
+mm=1;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(mm<=0){
+mm=1;
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+if(mm>yy){
+mm=yy;
+}
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+boolean haveBreadCrumbs=false;
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(y)&&haveBreadCrumbs){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+boolean haveBreadCrumbs=false;
+if(m>MonthConstants.FEBRUARY&&haveBreadCrumbs){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
-mm=mm+1;
 }
 }
  final int dd=d;
+mm=mm+1;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
+mm=mm+1;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(((y-1900)*365))+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/3256/pattern-ver1-serial/src.main.java.com.rizomm.misys.model.PictureLink.java-getLink.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return 1+yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:09:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:10:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return mm;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return dd;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/6424/pattern-ver1-serial/mail.src.main.java.com.sun.mail.imap.ModifiedSinceTerm.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return d;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return m;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return y;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return (int)(yy+mm+dd+1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return (int)yy+mm+dd+(int)1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+mm=mm+1;
 mm=mm+1;
 }
+mm=mm+1;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return 100;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+yy;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+d;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+m;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+y;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+mm;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
-return yy+mm+dd+1;
+return yy+mm+dd+1+dd;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+synchronized(this){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+}else {
+mm=mm+1;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
 mm=mm+1;
-}
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+boolean haveBreadCrumbs=false;
 if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
+if(SerialDate.isLeapYear(y)&&haveBreadCrumbs){
 mm=mm+1;
 }
+haveBreadCrumbs=true;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
+boolean haveBreadCrumbs=false;
+if(m>MonthConstants.FEBRUARY&&haveBreadCrumbs){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+haveBreadCrumbs=true;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+if(m>MonthConstants.FEBRUARY){
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(yy<0){
+return 0;
+}
+if(yy>=m){
+return m-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(d<0){
+return 0;
+}
+if(d>=m){
+return m-1;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(y<0){
+return 0;
+}
+if(y>=m){
+return m-1;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(mm<0){
+return 0;
+}
+if(mm>=m){
+return m-1;
+}
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(d<0){
+return 0;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(d>=yy){
+return yy-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(m<0){
+return 0;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(m>=yy){
+return yy-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:12:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(y<0){
+return 0;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(y>=yy){
+return yy-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(yy<0){
+return 0;
+}
+if(yy>=d){
+return d-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+if(yy<0){
+return 0;
+}
+if(yy>=y){
+return y-1;
+}
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:13:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(m<0){
+return 0;
+}
+if(m>=d){
+return d-1;
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(d==3){
+System.out.println("debug");
+}
 mm=mm+1;
+if(d==3){
+System.out.println("debug");
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(m==3){
+System.out.println("debug");
+}
 mm=mm+1;
+if(m==3){
+System.out.println("debug");
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(y==3){
+System.out.println("debug");
+}
 mm=mm+1;
+if(y==3){
+System.out.println("debug");
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+if(d==3){
+System.out.println("debug");
+}
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if(d==3){
+System.out.println("debug");
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+if(m==3){
+System.out.println("debug");
+}
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if(m==3){
+System.out.println("debug");
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+if(y==3){
+System.out.println("debug");
+}
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
+if(y==3){
+System.out.println("debug");
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:23:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(yy==3){
+System.out.println("debug");
+}
 mm=mm+1;
+if(yy==3){
+System.out.println("debug");
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+if(mm==3){
+System.out.println("debug");
+}
 mm=mm+1;
+if(mm==3){
+System.out.println("debug");
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+if(d==3){
+System.out.println("debug");
+}
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
+if(d==3){
+System.out.println("debug");
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
- final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
+ final int yy=(int)((y-1900)*365)+(int)SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
-if(m>MonthConstants.FEBRUARY){
-if(SerialDate.isLeapYear(y)){
-mm=mm+1;
-}
-}
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 0, DEL : 11
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
+long startTime=System.currentTimeMillis();
 mm=mm+1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
+long startTime=System.currentTimeMillis();
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
+long startTime=System.currentTimeMillis();
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
 if(m>MonthConstants.FEBRUARY){
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[437,458]
------------Candidate---------------
 private int calcSerial(int d,int m,int y){
  final int yy=((y-1900)*365)+SerialDate.leapYearCount(y-1);
 int mm=SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];
+if(m==','||m==']'||m=='}'){
 if(m>MonthConstants.FEBRUARY){
+}else {
 if(SerialDate.isLeapYear(y)){
 mm=mm+1;
+}
 }
 }
  final int dd=d;
 return yy+mm+dd+1;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:24:23 CDT
--------------- END -----------------
Location : org.jfree.data.time.Day.getSerialIndex:[302]#0.3333333333333333
Compute Candidate : 2019.09.05 AD at 01:24:45 CDT - 2019.09.05 AD at 01:27:57 CDT , PNumber : 11280, CandNumber : 16 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+this.getSerialIndex();
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return this.getSerialIndex();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return this.serialDate.toSerial()&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return (long)this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+int a=0;
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return -this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+String OUTSTRING="";
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
-return this.serialDate.toSerial();
+return (long)(this.serialDate.toSerial());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+int a=1;
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+boolean b=true;
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+if(this.serialDate==null){
+return 0l;
+}
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+if(this.serialDate==null){
+return 0;
+}else {
 return this.serialDate.toSerial();
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2390/pattern-ver1-serial/AlphaTeam.src.BufferContext.java-undo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+if(this.serialDate==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return this.serialDate.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[296,303]
------------Candidate---------------
 public long getSerialIndex(){
+if(this.serialDate!=null){
 return this.serialDate.toSerial();
+}
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4285/pattern-ver1-serial/Apps.Retrofit.app.src.main.java.inso.activity.adapter.PowerPlantAdapter.java-getItemCount.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:28:38 CDT
--------------- END -----------------
Location : org.jfree.data.time.TimeSeries.getIndex:[430, 433, 435]#0.3333333333333333
Compute Candidate : 2019.09.05 AD at 01:28:57 CDT - 2019.09.05 AD at 01:36:03 CDT , PNumber : 11308, CandNumber : 51 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
-TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+ TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(period!=null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+getIndex(period);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+synchronized(this){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
+}
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(period.equals(null)){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+synchronized(this){
 throw new IllegalArgumentException("Null 'period' argument.");
+}
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+dummy=dummy;
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(true){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+int a=0;
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+int a=0;
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+String OUTSTRING="";
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+int MIN_VALUE=8;
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+if(equals(period)){
+return 0;
+}
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
+}
+if(equals(period)){
+return 0;
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(equals(dummy)){
+return 0;
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+int a=1;
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+int a=1;
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+String MIN_VALUE="%#.&f";
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+boolean b=true;
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+boolean b=true;
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(dummy==null){
+return 0;
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+if(period==null){
+return 0;
+}
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
+}
+if(period==null){
+return 0;
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+if("index".equals(period)){
+return 0;
+}
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if("index".equals(dummy)){
+return 0;
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(dummy.equals("-1")){
+return 0;
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+assert (period!=null);
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+assert (dummy!=null);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+if(period!=null){
+if(period==null){
+throw new IllegalArgumentException("Null 'period' argument.");
+}
+TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+return Collections.binarySearch(this.data,dummy);
+}
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+assert (dummy!=new TimeSeriesDataItem(period,Integer.MIN_VALUE));
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
+assert (period!=null);
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(dummy.equals("655")){
+System.out.println();
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(period==null||"查看红包".equals(period)){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:37:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return Collections.binarySearch(this.data,dummy)&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return (int)Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5579/pattern-ver1-serial/src.utils.Controls.java-getCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return -Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(period==null||period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
-return Collections.binarySearch(this.data,dummy);
+return (int)(Collections.binarySearch(this.data,dummy));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(data!=null&&(period==null)){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
+assert (period!=null):"Appointments day is not allowed to be null!";
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+assert (dummy!=null):"Appointments day is not allowed to be null!";
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
-if(period==null){
+if(period==null&&!period.equals("")){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(dummy==null){
+throw new IllegalStateException("User isn't registered! "+period);
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/TimeSeries.java[421,436]
------------Candidate---------------
 public int getIndex(RegularTimePeriod period){
 if(period==null){
 throw new IllegalArgumentException("Null 'period' argument.");
 }
 TimeSeriesDataItem dummy=new TimeSeriesDataItem(period,Integer.MIN_VALUE);
+if(dummy==null){
+Collections.binarySearch(this.data,"onLoadFinished: end because bookSearchData is null.");
+return 0;
+}
 return Collections.binarySearch(this.data,dummy);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/204/pattern-ver1-serial/app.src.main.java.com.daipresents.tsundoku.com.daipresents.tsundoku.booksapi.BookSearchResultActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:38:58 CDT
--------------- END -----------------
Location : org.jfree.data.time.Day.getSerialDate:[183]#0.31622776601683794
Compute Candidate : 2019.09.05 AD at 01:39:17 CDT - 2019.09.05 AD at 01:42:13 CDT , PNumber : 11280, CandNumber : 8 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
-return this.serialDate;
+return this.getSerialDate();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
-return this.serialDate;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
+this.getSerialDate();
 return this.serialDate;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
-return this.serialDate;
+return (SerialDate)(this.serialDate);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
+int a=0;
 return this.serialDate;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
+String OUTSTRING="";
 return this.serialDate;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
+int a=1;
 return this.serialDate;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[173,184]
------------Candidate---------------
 public SerialDate getSerialDate(){
+boolean b=true;
 return this.serialDate;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:42:35 CDT
--------------- END -----------------
Location : org.jfree.data.time.Day.compareTo:[404, 405, 406, 407, 423]#0.31622776601683794
Compute Candidate : 2019.09.05 AD at 01:42:55 CDT - 2019.09.05 AD at 01:54:26 CDT , PNumber : 11350, CandNumber : 172 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
+ Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+return 0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+return 0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return Integer.MAX_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:54:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return 100;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
-int result;
+ final int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
+ final Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
-int result;
+ int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
+ Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result++;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result++;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
-if(o1 instanceof Day){
+if(true){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result--;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result--;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+return 0;
 }
+return 0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+return 0;
 }else {
 result=1;
 }
+return 0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+synchronized(this){
 result=-d.getSerialDate().compare(this.serialDate);
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+compareTo(o1);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+compareTo(o1);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+compareTo(d);
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+compareTo(o1);
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+compareTo(o1);
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+compareTo(o1);
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+d.next();
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/6227/pattern-ver1-serial/Alumni.Alumni-2.src.dao.DataAccess.java-updateProfile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return (int)(result);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+return 0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+return 0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+return 0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+return 0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+while(true){
+
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
+while(true){
+
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+synchronized(this){
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+synchronized(this){
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+o1=this;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+d=this;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+o1=this;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+o1=this;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+o1=o1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+o1=o1;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return result&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+int a=0;
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+int a=0;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+int a=0;
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+String OUTSTRING="";
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+String OUTSTRING="";
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+String OUTSTRING="";
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+if(equals(o1)){
+return 0;
+}
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+if(equals(o1)){
+return 0;
+}
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+if(equals(o1)){
+return 0;
+}
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(equals(d)){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+int indexSelection=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+int indexSelection=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+int a=1;
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+int a=1;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+int a=1;
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+boolean b=true;
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+boolean b=true;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+boolean b=true;
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
-return result;
+return result+result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d==null){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d.getSerialDate()==null){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+if(o1==null){
+return 0;
+}
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+if(o1==null){
+return 0;
+}
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 01:59:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+if(o1==null){
+return 0;
+}
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+if("index".equals(o1)){
+return 0;
+}
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+if("index".equals(o1)){
+return 0;
+}
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if("index".equals(d)){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+if("index".equals(o1)){
+return 0;
+}
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
 }else {
 result=1;
 }
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
 }
+result=1;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+result=0;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+result=1;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+result=0;
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+result=1;
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
+result=0;
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
+result=1;
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
+result=0;
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
+result=1;
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
-if(o1 instanceof RegularTimePeriod){
 result=0;
+if(o1 instanceof RegularTimePeriod){
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+result=1;
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+result=0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+result=1;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=1;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+result=0;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+result=1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+result=0;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+result=1;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
 }else {
 result=1;
 }
 }
+result=0;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
 }
 }
+result=1;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d.equals("-1")){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+result=0;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+result=1;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+result=0;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+result=1;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+assert (o1!=null);
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+assert (o1!=null);
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+assert (d!=null);
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+assert (o1!=null);
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+if(o1!=null){
+Day d=(Day)o1;
+result=-d.getSerialDate().compare(this.serialDate);
+}
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+}else {
+if(o1!=null){
+if(o1 instanceof RegularTimePeriod){
+result=0;
 }else {
+result=1;
+}
+}
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+if(o1!=null){
+int result;
+if(o1 instanceof Day){
+Day d=(Day)o1;
+result=-d.getSerialDate().compare(this.serialDate);
+}else {
+if(o1 instanceof RegularTimePeriod){
+result=0;
+}else {
+result=1;
+}
+}
+return result;
+}
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+if(result==0){
+return 0;
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
+if(result==0){
+return 0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
 }
+if(result==0){
+return 0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:01:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+assert (d!=(Day)o1);
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
+result=-1;
 }else {
 result=1;
 }
+result++;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
+result=-1;
 }
+result++;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
+result=-1;
 }else {
 result=1;
 }
 }
+result++;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
+result=-1;
 }
 }
+result++;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+assert (o1!=null);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+assert (o1!=null);
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+assert (o1!=null);
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d.equals("655")){
+System.out.println();
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if((Thread.currentThread().interrupted())){
+return 0;
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
+if((Thread.currentThread().interrupted())){
+return 0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
+if((Thread.currentThread().interrupted())){
+return 0;
+}
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+Day d=(Day)o1;
 int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:02:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-2;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=1;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+result=0;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+result=1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result=1;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
+result=0;
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+result=1;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+result=0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
+result=1;
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
+result=0;
 result=0;
 }else {
 result=1;
 }
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+assert (o1!=null):"Appointments day is not allowed to be null!";
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+assert (o1!=null):"Appointments day is not allowed to be null!";
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+assert (d!=null):"Appointments day is not allowed to be null!";
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
+assert (o1!=null):"Appointments day is not allowed to be null!";
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
-if(o1 instanceof Day){
+if(o1!=null&&o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d.getSerialDate()==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(this.serialDate==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=2;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=3;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Solution---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+if(result<0){
+result=0;
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
+if(result<0){
+result=0;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Solution---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
+}
 }
+if(result<0){
+result=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=10;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=100;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-d.getSerialDate().compare(this.serialDate)+1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=4;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=5;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+if(d==null){
+throw new IllegalStateException("User isn't registered! "+o1);
+}
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
-}else {
-if(o1 instanceof RegularTimePeriod){
-result=0;
 }else {
 result=1;
-}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
-if(o1 instanceof RegularTimePeriod){
 result=0;
-}else {
-result=1;
-}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-1;
+result++;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 6, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+result++;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 6, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
+result++;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 6, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=-1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
+result++;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 6, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
+result=-d.getSerialDate().compare(this.serialDate);
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
-if(o1 instanceof Day){
-Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
-}else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+if(o1 instanceof Day){
+Day d=(Day)o1;
+result=-d.getSerialDate().compare(this.serialDate);
+}else {
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+if(o1 instanceof RegularTimePeriod){
+result=0;
+}else {
+result=1;
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
+result=0+1;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=1;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
-result=1;
+result=1+1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+synchronized(this){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
+long startTime=System.currentTimeMillis();
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
 Day d=(Day)o1;
 result=-d.getSerialDate().compare(this.serialDate);
 }else {
+long startTime=System.currentTimeMillis();
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+result=0;
 }else {
 if(o1 instanceof RegularTimePeriod){
-result=0;
+Day d=(Day)o1;
+result=-d.getSerialDate().compare(this.serialDate);
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/Day.java[388,425]
------------Candidate---------------
 public int compareTo(Object o1){
 int result;
 if(o1 instanceof Day){
-Day d=(Day)o1;
-result=-d.getSerialDate().compare(this.serialDate);
+if(o1 instanceof RegularTimePeriod){
+result=0;
+}else {
+result=1;
+}
 }else {
 if(o1 instanceof RegularTimePeriod){
 result=0;
 }else {
 result=1;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:06:59 CDT
--------------- END -----------------
Location : org.jfree.data.time.SpreadsheetDate.toSerial:[211]#0.31622776601683794
Compute Candidate : 2019.09.05 AD at 02:07:19 CDT - 2019.09.05 AD at 02:10:25 CDT , PNumber : 11259, CandNumber : 10 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
-return this.serial;
+return this.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
+this.toSerial();
 return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:10:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
-return this.serial;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:10:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
-return this.serial;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
-return this.serial;
+return (int)(this.serial);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
-return this.serial;
+return this.serial&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:11:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
+int a=0;
 return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:11:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
+String OUTSTRING="";
 return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:11:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
+int a=1;
 return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:11:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[203,212]
------------Candidate---------------
 public int toSerial(){
+boolean b=true;
 return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:11:29 CDT
--------------- END -----------------
Location : org.jfree.data.time.SpreadsheetDate.compare:[308]#0.31622776601683794
Compute Candidate : 2019.09.05 AD at 02:11:49 CDT - 2019.09.05 AD at 02:15:27 CDT , PNumber : 11282, CandNumber : 30 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate valueAnimator){
+return this.serial-valueAnimator.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate edge){
+return this.serial-edge.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate methodOpeningBrace){
+return this.serial-methodOpeningBrace.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate mpR){
+return this.serial-mpR.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate methodAST){
+return this.serial-methodAST.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate managerFactory){
+return this.serial-managerFactory.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
-public int compare(SerialDate other){
-return this.serial-other.toSerial();
+public int compare(SerialDate methodOpeningBraceToken){
+return this.serial-methodOpeningBraceToken.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+int a=0;
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+String OUTSTRING="";
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if(equals(other)){
+return 0;
+}
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+int a=1;
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+boolean b=true;
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:15:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return (this.serial)+other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if(other==null){
+return 0;
+}
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if("index".equals(other)){
+return 0;
+}
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+assert (other!=null);
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if(other!=null){
+return this.serial-other.toSerial();
+}
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return (int)this.serial-(int)other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/3256/pattern-ver1-serial/src.main.java.com.rizomm.misys.model.PictureLink.java-getLink.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return 1+this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:16:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return this.serial-other.toSerial()&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return (int)this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return -this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return this.serial;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/6424/pattern-ver1-serial/mail.src.main.java.com.sun.mail.imap.ModifiedSinceTerm.java-hashCode.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if(this.serial<0){
+return 5;
+}else {
 return this.serial-other.toSerial();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V10/6358/pattern-ver1-serial/AntGameProject.src.antgameproject.DirectionalInstruction.java-turn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
-return this.serial-other.toSerial();
+return (int)(this.serial-other.toSerial());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+assert (other!=null):"Appointments day is not allowed to be null!";
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_9_buggy/source/org/jfree/data/time/SpreadsheetDate.java[298,309]
------------Candidate---------------
 public int compare(SerialDate other){
+if(other==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return this.serial-other.toSerial();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimeSeriesTests::testBug1864222]
---------START : 2019.09.04 AD at 21:50:14 CDT
---------TIME : 2019.09.05 AD at 02:18:36 CDT
--------------- END -----------------
Finish : chart-9 > patch : 6 | Start : Wed Sep 04 21:50:14 CDT 2019 | End : 2019.09.05 AD at 02:18:36 CDT
