Repair : chart_15
Current failed test : org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset | 2019.09.05 AD at 08:26:10 CDT
Location : org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal:[153, 152]#1.0
Compute Candidate : 2019.09.05 AD at 08:27:32 CDT - 2019.09.05 AD at 08:59:03 CDT , PNumber : 11366, CandNumber : 117 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(dataset!=null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
+throw new IllegalStateException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/6680/pattern-ver1-serial/src.rollup.RollupSeq.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
-if(current!=null){
+if(dataset!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
-if(value!=null){
+if(dataset!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
+throw new IllegalArgumentException("Null 'dataset' argument.".trim());
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+totalValue++;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+totalValue--;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.clear();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
+calculatePieDatasetTotal(dataset);
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+calculatePieDatasetTotal(dataset);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
+throw new UnsupportedOperationException();
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
+throw new IllegalArgumentException(("Null 'dataset' argument.").toLowerCase());
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+iterator.next();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/6227/pattern-ver1-serial/Alumni.Alumni-2.src.dao.DataAccess.java-updateProfile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.add("bookmark");
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3527/pattern-ver1-serial/src.commandHelp.CommandList.java-cmds.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(dataset.equals(null)){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.add("webconsole");
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1536/pattern-ver1-serial/management.server.core.identity-manager.identity-manager-impl.src.main.java.io.subutai.core.identity.impl.model.PermissionEntity.java-asString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 08:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+dataset=dataset;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.remove(null);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.remove(0);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.util.Arrays;
+
+import java.util.Collections;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+Collections.sort(keys);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2616/pattern-ver1-serial/app.app.src.main.java.adapters.versions.VersionViewModel.java-createModels.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(true){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.add(dataset);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/6056/pattern-ver1-serial/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.loaders.ConfDataLoader.java-getTypes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+keys.add(dataset);
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4847/pattern-ver1-serial/capsule-generation.src.main.java.org.paninij.runtime.check.Panini.java-findUnsafe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+keys.add(dataset);
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4847/pattern-ver1-serial/capsule-generation.src.main.java.org.paninij.runtime.check.Panini.java-findUnsafe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
+int a=0;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+int a=0;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+String OUTSTRING="";
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if(keys.isEmpty()){
+return 0d;
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
+int current=5;
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+int indexSelection=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
+int a=1;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+int a=1;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
+boolean b=true;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+boolean b=true;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+if(dataset==null){
+continue;
+}
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if(dataset==null){
+continue;
+}
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator==null){
+return 0d;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if(keys==null){
+return 0d;
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys==null){
+return 0d;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+if(dataset==null){
+return 0d;
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(dataset==null){
+return 0d;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+if(dataset==null){
+return 0d;
+}
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+if("index".equals(dataset)){
+return 0;
+}
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if("index".equals(dataset)){
+return 0;
+}
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+if("index".equals(dataset)){
+return 0;
+}
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if("index".equals(keys)){
+return 0;
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if("index".equals(iterator)){
+return 0;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(0>=keys.size()){
+return Integer.MIN_VALUE;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/5077/pattern-ver1-serial/src.Utils.Helper.java-getModeInt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator.equals("-1")){
+return 0d;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if(keys.equals("-1")){
+return 0d;
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+double v=0.0;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
-double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:01:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+assert (dataset!=null);
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+assert (dataset!=null);
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+assert (dataset!=null);
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+assert (keys!=null);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+assert (iterator!=null);
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+assert (!keys.isEmpty());
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys.contains(keys)){
+return 0d;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(dataset.equals(InputStream.class)){
+return totalValue;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+if(dataset!=null){
+Number value=dataset.getValue(current);
+double v=0.0;
+if(value!=null){
+v=value.doubleValue();
+}
+if(v>0){
+totalValue=totalValue+v;
+}
+}
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if(dataset!=null){
+Comparable current=(Comparable)iterator.next();
+if(current!=null){
+Number value=dataset.getValue(current);
+double v=0.0;
+if(value!=null){
+v=value.doubleValue();
+}
+if(v>0){
+totalValue=totalValue+v;
+}
+}
+}
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+if(dataset!=null){
+if(dataset==null){
+throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+List keys=dataset.getKeys();
+double totalValue=0;
+Iterator iterator=keys.iterator();
+while(iterator.hasNext()){
+Comparable current=(Comparable)iterator.next();
+if(current!=null){
+Number value=dataset.getValue(current);
+double v=0.0;
+if(value!=null){
+v=value.doubleValue();
+}
+if(v>0){
+totalValue=totalValue+v;
+}
+}
+}
+return totalValue;
+}
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
+}
 }
 }
+if(totalValue==0){
+return 0d;
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+assert (totalValue!=0);
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+assert (iterator!=keys.iterator());
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+assert (keys!=dataset.getKeys());
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
+assert (dataset!=null);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
+assert (dataset!=null);
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
+assert (dataset!=null);
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator.equals("655")){
+System.out.println();
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys.equals("655")){
+System.out.println();
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(dataset==null||"查看红包".equals(dataset)){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
+v=value.doubleValue();
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
+v=value.doubleValue();
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
+v=value.doubleValue();
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
+v=value.doubleValue();
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if(keys.isEmpty()){
+keys=null;
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.remove(keys.get(0));
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/5778/pattern-ver1-serial/src.LinkedList.java-main.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
+v=value.doubleValue();
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
+v=value.doubleValue();
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(dataset==null||dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+assert (totalValue>=0):"Receive a negative tratment";
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
-totalValue=totalValue+v;
+totalValue=-1;
 }
 }
 }
+totalValue++;
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+assert (keys!=null):"Appointments day is not allowed to be null!";
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+assert (iterator!=null):"Appointments day is not allowed to be null!";
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+assert (totalValue!=0):"Receive a size tratment";
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(keys.isEmpty()){
+keys=null;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+if(dataset==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(dataset==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
+totalValue=totalValue+v;
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
+}
 }
 }
+if(totalValue<0){
+totalValue=0;
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
+totalValue=totalValue+v;
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.add("intervalBetweenShocks");
+keys.add("fisherEpsilon");
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V46/2153/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.simulation.LeeHastieSimulation.java-getParameters.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+keys.add("facebook:1006907856026402");
+keys.add("facebook:723263297817907");
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/1183/pattern-ver1-serial/app.src.main.java.fjd.com.untitledmvp.helper.GeoQueryWrapper.java-Query.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
+if(dataset==null&&!dataset.equals("")){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+if(keys==null){
+throw new IllegalStateException("User isn't registered! "+dataset);
+}
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
+if(value==null){
+throw new IllegalStateException("User isn't registered! "+dataset);
+}
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator==null){
+throw new IllegalStateException("User isn't registered! "+keys);
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
-}
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys!=null){
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
+}
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+boolean haveBreadCrumbs=false;
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
+haveBreadCrumbs=true;
 }
-if(v>0){
+if(v>0&&haveBreadCrumbs){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
+boolean haveBreadCrumbs=false;
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
+haveBreadCrumbs=true;
 if(value!=null){
 v=value.doubleValue();
 }
-if(v>0){
+if(v>0&&haveBreadCrumbs){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:04:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
+if(dataset==null||current==null){
+throw new NullPointerException();
+}
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
+if(dataset==null||current==null){
+throw new NullPointerException();
+}
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
+if(iterator==null||keys==null||dataset==null){
+return 0d;
+}
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
+long startTime=System.currentTimeMillis();
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
-if(dataset==null){
-throw new IllegalArgumentException("Null 'dataset' argument.");
-}
 List keys=dataset.getKeys();
 double totalValue=0;
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 4, INS : 0, DEL : 20
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/data/general/DatasetUtilities.java[142,172]
------------Candidate---------------
 public static double calculatePieDatasetTotal(PieDataset dataset){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 List keys=dataset.getKeys();
 double totalValue=0;
+if(keys!=null){
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable current=(Comparable)iterator.next();
 if(current!=null){
 Number value=dataset.getValue(current);
 double v=0.0;
 if(value!=null){
 v=value.doubleValue();
 }
 if(v>0){
 totalValue=totalValue+v;
+}
 }
 }
 }
 return totalValue;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 3, INS : 0, DEL : 26
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 09:05:15 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot.getLegendItems:[2613, 2611, 2612]#1.0
Compute Candidate : 2019.09.05 AD at 09:05:34 CDT - 2019.09.05 AD at 10:39:30 CDT , PNumber : 11321, CandNumber : 148 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+return null;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
-return result;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
-if(n==null){
+if(result==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
-result.add(item);
+keys.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V22/2812/pattern-ver1-serial/src.com.undeadscythes.udsplugin.eventhandlers.PlayerDeath.java-pvp.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
-if(label!=null){
+if(result!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/4918/pattern-ver1-serial/src.org.traccar.protocol.Gl200ProtocolDecoder.java-decode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+return this.getLegendItems();
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
-String description=label;
+ final String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
-Comparable key=(Comparable)iterator.next();
+ final Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
-LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+ final LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
-List keys=this.dataset.getKeys();
+ List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
-Number n=this.dataset.getValue(key);
+ Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
-double v=n.doubleValue();
+ double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
-Paint outlinePaint=lookupSectionOutlinePaint(key);
+ Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
-Stroke outlineStroke=lookupSectionOutlineStroke(key);
+ Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
-String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+ String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+this.getLegendItems();
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+this.getLegendItems();
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(result==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+section++;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+section--;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+keys.clear();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5684/pattern-ver1-serial/src.main.java.act.handler.builtin.controller.RequestHandlerProxy.java-_releaseResourceCollections.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+return (LegendItemCollection)(result);
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
-if(this.legendLabelToolTipGenerator!=null){
+if(result!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+synchronized(this){
 if(this.dataset==null){
 return result;
+}
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+keys.add("bookmark");
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3527/pattern-ver1-serial/src.commandHelp.CommandList.java-cmds.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+synchronized(this){
 return result;
+}
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
+if(item==null){
+continue;
+}
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/816/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.client.renderer.RendererRelocator.java-renderTileEntityAt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Shape shape=getLegendItemShape();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
-double v=n.doubleValue();
+ final double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
-Paint outlinePaint=lookupSectionOutlinePaint(key);
+ final Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
-Stroke outlineStroke=lookupSectionOutlineStroke(key);
+ final Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
-Paint outlinePaint=lookupSectionOutlinePaint(key);
+ final Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
-Stroke outlineStroke=lookupSectionOutlineStroke(key);
+ final Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
-List keys=this.dataset.getKeys();
+ final List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
-Shape shape=getLegendItemShape();
+ final Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
-Number n=this.dataset.getValue(key);
+ final Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
-double v=n.doubleValue();
+ final double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
-Number n=this.dataset.getValue(key);
+ final Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
-List keys=this.dataset.getKeys();
+ final List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
+result=result;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
-List keys=this.dataset.getKeys();
+ final List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
-Number n=this.dataset.getValue(key);
+ final Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
-List keys=this.dataset.getKeys();
+ final List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
-Iterator iterator=keys.iterator();
+ final Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+keys.remove(null);
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+result.add(item);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5858/pattern-ver1-serial/Compile.app.src.main.java.compile_inc.compile.ContactDatabaseHandler.java-dbGetAllContacts.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
-Stroke outlineStroke=lookupSectionOutlineStroke(key);
-LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+ final Stroke outlineStroke=lookupSectionOutlineStroke(key);
+ final LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
-Comparable key=(Comparable)iterator.next();
+ final Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
-Stroke outlineStroke=lookupSectionOutlineStroke(key);
+ final Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
-Comparable key=(Comparable)iterator.next();
+ final Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
-Paint paint=lookupSectionPaint(key,true);
+ final Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
-LegendItemCollection result=new LegendItemCollection();
+ final LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
-String description=label;
+ final String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
-LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+ final LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+int a=0;
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+int a=0;
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+String OUTSTRING="";
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+String OUTSTRING="";
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
+if(description.isEmpty()){
+return result;
+}
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
+if(urlText.isEmpty()){
+return result;
+}
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
+if(toolTipText.isEmpty()){
+return result;
+}
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+int indexSelection=0;
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
+if(result.equals("sounds")){
+continue;
+}
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+int a=1;
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+int a=1;
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+boolean b=true;
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+boolean b=true;
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+if(result==null){
+continue;
+}
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
+if(result==null){
+continue;
+}
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if(result==null){
+continue;
+}
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+if(result==null){
+return null;
+}
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+if(result==null){
+return null;
+}
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
+if(result==null){
+return null;
+}
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if(result==null){
+return null;
+}
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+if(result==null){
+return null;
+}
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+if(keys==null){
+return null;
+}
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if(shape==null){
+return null;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if(keys==null){
+return null;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
+if(iterator==null){
+return null;
+}
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+if(section==0){
+return result;
+}
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
+if(iterator==keys.iterator()){
+return result;
+}
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if(shape==getLegendItemShape()){
+return result;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+if(keys==this.dataset.getKeys()){
+return result;
+}
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(this.dataset.equals(null)){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+if(result==null){
+return null;
+}
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+if("&null".equals(result)){
+return null;
+}
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
+if("&null".equals(result)){
+return null;
+}
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+if("&null".equals(keys)){
+return null;
+}
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if("&null".equals(shape)){
+return null;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(true){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+item.setDataset(getDataset());
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
-int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+int section=0;
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+assert (result!=null);
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
+assert (result!=null);
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+assert (result!=null);
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if(keys.contains(keys)){
+return null;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+assert (result!=null);
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
+assert (result!=null);
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+assert (result!=null);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
+assert (result!=null);
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(this.dataset==null||"查看红包".equals(this.dataset)){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+return result!=null?result:new LegendItemCollection();
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(this.dataset==null||this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+return result==null?new LegendItemCollection():result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
-return result;
+return result==null?new LegendItemCollection():result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5872/pattern-ver1-serial/FirebaseNotes.src.main.java.de.iks.hotischeck.firebase.notes.controller.NotesDAO.java-fetchNotes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+assert (section>=0):"Receive a negative tratment";
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
+if(keys.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
+assert (result!=null):"Appointments day is not allowed to be null!";
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+assert (result!=null):"Appointments day is not allowed to be null!";
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
+assert (result!=null):"Appointments day is not allowed to be null!";
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+assert (result!=null):"Appointments day is not allowed to be null!";
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+assert (result!=null):"Appointments day is not allowed to be null!";
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+assert (keys!=null):"Appointments day is not allowed to be null!";
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
+assert (section!=0):"Receive a size tratment";
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
+if(keys.isEmpty()){
+keys=null;
+}
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
-return result;
-}
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+if(this.dataset==null){
+return result;
+}
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
-return result;
-}
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
+if(this.dataset==null){
+return result;
+}
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
-return result;
-}
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
+if(this.dataset==null){
+return result;
+}
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
-if(this.dataset==null){
+if(this.dataset==null&&!this.dataset.equals("")){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
-return result;
+LegendItemCollection t=result;
+result=null;
+return t;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+LegendItemCollection t=result;
+result=null;
 if(this.dataset==null){
-return result;
+return t;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
+LegendItemCollection t=result;
+result=null;
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
-return result;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
+if(result==null||item==null){
+throw new NullPointerException();
+}
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+if(shape==null||result==null||key==null){
+return null;
+}
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+if(item==null||result==null||key==null){
+return null;
+}
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+if(shape==null||result==null||item==null){
+return null;
+}
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+if(key==null||result==null||item==null){
+return null;
+}
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
+if(label==null||result==null||key==null){
+return null;
+}
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
+if(description==null||result==null||key==null){
+return null;
+}
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
+if(toolTipText==null||result==null||key==null){
+return null;
+}
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
+if(urlText==null||result==null||key==null){
+return null;
+}
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
+if(paint==null||result==null||key==null){
+return null;
+}
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
+if(outlinePaint==null||result==null||key==null){
+return null;
+}
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
+long startTime=System.currentTimeMillis();
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
+}
+if(include){
+String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+if(label!=null){
+String description=label;
+String toolTipText=null;
+if(this.legendLabelToolTipGenerator!=null){
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
+}
+String urlText=null;
+if(this.legendLabelURLGenerator!=null){
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
+}
+Paint paint=lookupSectionPaint(key,true);
+Paint outlinePaint=lookupSectionOutlinePaint(key);
+Stroke outlineStroke=lookupSectionOutlineStroke(key);
+LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+item.setDataset(getDataset());
+result.add(item);
+}
+section++;
+}else {
+section++;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 89, UPD : 0, INS : 1, DEL : 88
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
+if(include){
+String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+if(label!=null){
+String description=label;
+String toolTipText=null;
+if(this.legendLabelToolTipGenerator!=null){
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
+}
+String urlText=null;
+if(this.legendLabelURLGenerator!=null){
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
+}
+Paint paint=lookupSectionPaint(key,true);
+Paint outlinePaint=lookupSectionOutlinePaint(key);
+Stroke outlineStroke=lookupSectionOutlineStroke(key);
+LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+item.setDataset(getDataset());
+result.add(item);
+}
+section++;
+}else {
+section++;
+}
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 89, UPD : 0, INS : 1, DEL : 88
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[2604,2668]
------------Candidate---------------
 public LegendItemCollection getLegendItems(){
 LegendItemCollection result=new LegendItemCollection();
 if(this.dataset==null){
 return result;
 }
 List keys=this.dataset.getKeys();
 int section=0;
 Shape shape=getLegendItemShape();
 Iterator iterator=keys.iterator();
 while(iterator.hasNext()){
 Comparable key=(Comparable)iterator.next();
 Number n=this.dataset.getValue(key);
 boolean include=true;
 if(n==null){
 include=!this.ignoreNullValues;
 }else {
 double v=n.doubleValue();
 if(v==0.0){
 include=!this.ignoreZeroValues;
+if(include){
+String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
+if(label!=null){
+String description=label;
+String toolTipText=null;
+if(this.legendLabelToolTipGenerator!=null){
+toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
+}
+String urlText=null;
+if(this.legendLabelURLGenerator!=null){
+urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
+}
+Paint paint=lookupSectionPaint(key,true);
+Paint outlinePaint=lookupSectionOutlinePaint(key);
+Stroke outlineStroke=lookupSectionOutlineStroke(key);
+LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
+item.setDataset(getDataset());
+result.add(item);
+}
+section++;
+}else {
+section++;
+}
 }else {
 include=v>0.0;
 }
 }
 if(include){
 String label=this.legendLabelGenerator.generateSectionLabel(this.dataset,key);
 if(label!=null){
 String description=label;
 String toolTipText=null;
 if(this.legendLabelToolTipGenerator!=null){
 toolTipText=this.legendLabelToolTipGenerator.generateSectionLabel(this.dataset,key);
 }
 String urlText=null;
 if(this.legendLabelURLGenerator!=null){
 urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
 }
 Paint paint=lookupSectionPaint(key,true);
 Paint outlinePaint=lookupSectionOutlinePaint(key);
 Stroke outlineStroke=lookupSectionOutlineStroke(key);
 LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
 item.setDataset(getDataset());
 result.add(item);
 }
 section++;
 }else {
 section++;
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 89, UPD : 0, INS : 1, DEL : 88
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:47:41 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot.getInteriorGap:[670]#0.7071067811865475
Compute Candidate : 2019.09.05 AD at 10:48:00 CDT - 2019.09.05 AD at 10:51:46 CDT , PNumber : 11294, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return this.getInteriorGap();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
+this.getInteriorGap();
 return this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/2193/pattern-ver1-serial/Poker.src.fr.poker.model.Carte.java-compareValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:51:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return (double)(this.interiorGap);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return 1+this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
-return this.interiorGap;
+return this.interiorGap+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
+int a=0;
 return this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
+String OUTSTRING="";
 return this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
+int a=1;
 return this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[661,671]
------------Candidate---------------
 public double getInteriorGap(){
+boolean b=true;
 return this.interiorGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:52:21 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot.getLabelGenerator:[1398]#0.7071067811865475
Compute Candidate : 2019.09.05 AD at 10:52:40 CDT - 2019.09.05 AD at 10:56:16 CDT , PNumber : 11280, CandNumber : 8 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
-return this.labelGenerator;
+return this.getLabelGenerator();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
-return this.labelGenerator;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
+this.getLabelGenerator();
 return this.labelGenerator;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
-return this.labelGenerator;
+return (PieSectionLabelGenerator)(this.labelGenerator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
+int a=0;
 return this.labelGenerator;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
+String OUTSTRING="";
 return this.labelGenerator;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
+int a=1;
 return this.labelGenerator;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1390,1399]
------------Candidate---------------
 public PieSectionLabelGenerator getLabelGenerator(){
+boolean b=true;
 return this.labelGenerator;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 10:56:42 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot.getLabelGap:[1423]#0.7071067811865475
Compute Candidate : 2019.09.05 AD at 10:57:01 CDT - 2019.09.05 AD at 11:00:44 CDT , PNumber : 11294, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return this.getLabelGap();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:00:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
+this.getLabelGap();
 return this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/2193/pattern-ver1-serial/Poker.src.fr.poker.model.Carte.java-compareValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:00:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return (double)(this.labelGap);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return 1+this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
-return this.labelGap;
+return this.labelGap+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
+int a=0;
 return this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
+String OUTSTRING="";
 return this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
+int a=1;
 return this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1414,1424]
------------Candidate---------------
 public double getLabelGap(){
+boolean b=true;
 return this.labelGap;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:01:19 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot.getMaximumLabelWidth:[1448]#0.7071067811865475
Compute Candidate : 2019.09.05 AD at 11:01:40 CDT - 2019.09.05 AD at 11:04:59 CDT , PNumber : 11294, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return this.getMaximumLabelWidth();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
+this.getMaximumLabelWidth();
 return this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/2193/pattern-ver1-serial/Poker.src.fr.poker.model.Carte.java-compareValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return (double)(this.maximumLabelWidth);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return 1+this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
-return this.maximumLabelWidth;
+return this.maximumLabelWidth+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
+int a=0;
 return this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
+String OUTSTRING="";
 return this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
+int a=1;
 return this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_15_buggy/source/org/jfree/chart/plot/PiePlot.java[1440,1449]
------------Candidate---------------
 public double getMaximumLabelWidth(){
+boolean b=true;
 return this.maximumLabelWidth;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.plot.junit.PiePlot3DTests::testDrawWithNullDataset]
---------START : 2019.09.05 AD at 08:26:10 CDT
---------TIME : 2019.09.05 AD at 11:05:35 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.PiePlot3D.draw:[230, 231, 233, 234, 239, 241, 242, 245, 246, 247, 248, 250, 252, 266, 267, 268, 269, 272, 280]#0.7071067811865475
Compute Candidate : 2019.09.05 AD at 11:05:53 CDT - 2019.09.05 AD at 13:26:26 CDT , PNumber : 2451, CandNumber : 0 
Finish : chart-15 > patch : 0 | Start : Thu Sep 05 08:26:10 CDT 2019 | End : 2019.09.05 AD at 13:26:26 CDT
