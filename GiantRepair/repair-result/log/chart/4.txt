Repair : chart_4
Current failed test : org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1 | 2019.09.04 AD at 10:22:57 CDT
Location : org.jfree.data.general.DatasetUtilities.findDomainBounds:[647]#1.0
Compute Candidate : 2019.09.04 AD at 10:25:03 CDT - 2019.09.04 AD at 10:28:41 CDT , PNumber : 11413, CandNumber : 12 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
-return findDomainBounds(dataset,true);
+return findDomainBounds(dataset,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V13/6998/pattern-ver1-serial/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java-createCollectionItem.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:28:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
-return findDomainBounds(dataset,true);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
-return findDomainBounds(dataset,true);
+return (Range)findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+int a=0;
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+String OUTSTRING="";
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:28:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
-return findDomainBounds(dataset,true);
+return (Range)(findDomainBounds(dataset,true));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+int a=1;
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+boolean b=true;
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+if(dataset==null){
+return null;
+}
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+assert (dataset!=null);
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+if(dataset!=null){
+return findDomainBounds(dataset,true);
+}
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[639,648]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 return findDomainBounds(dataset,true);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 10:29:18 CDT
--------------- END -----------------
Location : org.jfree.chart.plot.XYPlot.getDataRange:[4479, 4473, 4474, 4475, 4493, 4435, 4436, 4438, 4440, 4441, 4427, 4428, 4429, 4430, 4433, 4434, 4451, 4452, 4469, 4470, 4471, 4472, 4484, 4485, 4476, 4494, 4495, 4453, 4454, 4456, 4457, 4458, 4502, 4504, 4505, 4517]#1.0
Compute Candidate : 2019.09.04 AD at 10:29:42 CDT - 2019.09.04 AD at 12:29:26 CDT , PNumber : 11406, CandNumber : 676 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+continue;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+continue;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+continue;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+continue;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+continue;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+continue;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+continue;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
+continue;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+continue;
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+continue;
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7285/pattern-ver1-serial/src.game.Board.java-advanceGame.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+continue;
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7695/pattern-ver1-serial/docroot.WEB-INF.src.com.jorgediaz.missingrefchecker.MissingReferences.java-execute.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
-XYDataset d=(XYDataset)iterator.next();
+ final XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4583/pattern-ver1-serial/api.src.main.java.org.ednovo.gooru.domain.service.userManagement.UserManagementServiceImpl.java-deleteGrade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
+ Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-int rangeIndex=getRangeAxisIndex(axis);
+ int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-Iterator iterator=mappedDatasets.iterator();
+ Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
-Iterator iterator=this.annotations.iterator();
+ Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ final Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/5492/pattern-ver1-serial/errai-navigation.src.main.java.org.jboss.errai.ui.nav.client.local.URLPatternMatcher.java-setAsDefaultPage.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+ List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/6248/pattern-ver1-serial/src.main.java.com.github.games647.scoreboardstats.pvpstats.StatsListener.java-onQuit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d,false));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2675/pattern-ver1-serial/core.org.eclipse.cdt.core.parser.org.eclipse.cdt.internal.core.dom.parser.cpp.CPPASTConditionalExpression.java-convertToMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(r==null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(r==null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(d==null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+return null;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+return null;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+return null;
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+return null;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+return null;
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+return null;
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+return null;
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+return null;
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/1695/pattern-ver1-serial/src.fr.project.bluechat.layout.activity.MainActivity.java-newName.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/1695/pattern-ver1-serial/src.fr.project.bluechat.layout.activity.MainActivity.java-newName.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
-return result;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+List mappedDatasets=new ArrayList(null);
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+List includedAnnotations=new ArrayList(null);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4108/pattern-ver1-serial/src.main.java.org.roaringbitmap.buffer.MappeableArrayContainer.java-inot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4108/pattern-ver1-serial/src.main.java.org.roaringbitmap.buffer.MappeableArrayContainer.java-inot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+break;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+break;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+break;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+break;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+break;
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex<=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex<=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+break;
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/5737/pattern-ver1-serial/Android.EasyBudget.app.src.main.java.com.benoitletondor.easybudgetapp.view.main.ExpensesRecyclerViewAdapter.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2900/pattern-ver1-serial/BlueMesh.src.blue.mesh.ServerThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+break;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2900/pattern-ver1-serial/BlueMesh.src.blue.mesh.ServerThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+List mappedDatasets=new ArrayList(1);
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+List includedAnnotations=new ArrayList(1);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex>=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex>=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
+return null;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/2889/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.github.extension.GHEventsSubscriber.java-apply.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex!=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex!=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
+if(true){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+mappedDatasets.addAll(1,getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
-mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+mappedDatasets.addAll(1,getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
+}
 }
+if(isDomainAxis){
+result=Range.combine(result,xyabi.getXRange());
+}else {
+result=Range.combine(result,xyabi.getYRange());
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.io.IOException;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
+return null;
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/3389/pattern-ver1-serial/NewMessageTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.io.IOException;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+return null;
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/3389/pattern-ver1-serial/NewMessageTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
-isDomainAxis=false;
+isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6486/pattern-ver1-serial/src.noughtsandcrosses.VictoryConditions.java-gameWon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex>0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex>0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+mappedDatasets.addAll(domainIndex,getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2403/pattern-ver1-serial/app.src.main.java.com.door43.translationstudio.core.Indexer.java-getFrame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
-mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+mappedDatasets.addAll(rangeIndex,getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2403/pattern-ver1-serial/app.src.main.java.com.door43.translationstudio.core.Indexer.java-getFrame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1308/pattern-ver1-serial/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.dialog.db.UserDBGroupDialog.java-UserDBGroupDialog.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0.0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0.0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex<=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex<=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=result.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3712/pattern-ver1-serial/src.com.wrathOfLoD.Models.Entity.Character.Character.java-Character.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
+result=result.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3712/pattern-ver1-serial/src.com.wrathOfLoD.Models.Entity.Character.Character.java-Character.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+List mappedDatasets=new ArrayList(2);
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+List includedAnnotations=new ArrayList(2);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
-includedAnnotations.add(annotation);
+mappedDatasets.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3629/pattern-ver1-serial/Mage.Sets.src.mage.sets.theros.PolisCrusher.java-adjustTargets.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(result!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(result!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(result!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
+if(false){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4923/pattern-ver1-serial/src.ClueBoard.ComputerPlayer.java-takeTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
-if(isDomainAxis){
+if(false){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4923/pattern-ver1-serial/src.ClueBoard.ComputerPlayer.java-takeTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ final List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+ final List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
-XYDataset d=(XYDataset)iterator.next();
+ final XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
-XYAnnotation a=(XYAnnotation)i.next();
+ final XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
-XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
+ final XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ final Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-int rangeIndex=getRangeAxisIndex(axis);
+ int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-Iterator iterator=mappedDatasets.iterator();
+ Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
+ Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
-Iterator iterator=this.annotations.iterator();
+ Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c.isEmpty()){
+continue;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6775/pattern-ver1-serial/Salvum.src.br.ufpe.cin.analyses.Main.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
+if(!isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d,true));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d,true));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1113/pattern-ver1-serial/clasrec-dc.src.main.java.org.jlab.rec.dc.cluster.ClusterCleanerUtilities.java-LRAmbiguityResolver.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+c.clear();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+return null;
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+return null;
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+return null;
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
+return null;
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
+return null;
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+return null;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+return null;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
-while(iterator.hasNext()){
+while(true){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/1657/pattern-ver1-serial/reversi.src.main.java.org.kratos.reversi.application.View.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
-while(i.hasNext()){
+while(true){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/1657/pattern-ver1-serial/reversi.src.main.java.org.kratos.reversi.application.View.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
-while(iterator.hasNext()){
+while(true){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/1657/pattern-ver1-serial/reversi.src.main.java.org.kratos.reversi.application.View.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+synchronized(this){
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+synchronized(this){
 isDomainAxis=true;
+}
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+synchronized(this){
 isDomainAxis=false;
+}
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+synchronized(mappedDatasets){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+getDataRange(axis);
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+getDataRange(axis);
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+includedAnnotations.clear();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+includedAnnotations.clear();
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5684/pattern-ver1-serial/src.main.java.act.handler.builtin.controller.RequestHandlerProxy.java-_releaseResourceCollections.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+includedAnnotations.clear();
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5684/pattern-ver1-serial/src.main.java.act.handler.builtin.controller.RequestHandlerProxy.java-_releaseResourceCollections.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+List mappedDatasets=new ArrayList(null);
+List includedAnnotations=new ArrayList(null);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2160/pattern-ver1-serial/src.android.com.microsoftopentechnologies.intellij.wizards.createvm.CloudServiceStep.java-prepare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+includedAnnotations.clear();
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/5250/pattern-ver1-serial/src.it.rate.view.WidgetUpdate.java-updateTopUrlsList.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+includedAnnotations.clear();
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/5250/pattern-ver1-serial/src.it.rate.view.WidgetUpdate.java-updateTopUrlsList.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+mappedDatasets.clear();
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2907/pattern-ver1-serial/DomineUPServer.src.LogicaNegocioServidor.GameState.java-DrawHand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+includedAnnotations.clear();
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2907/pattern-ver1-serial/DomineUPServer.src.LogicaNegocioServidor.GameState.java-DrawHand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+return null;
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+return null;
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:37:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+return null;
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Solution---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
+return null;
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
+return null;
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+return null;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
+return null;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+return null;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+synchronized(this){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+break;
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+break;
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+break;
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
+break;
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
+break;
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+break;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+break;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+break;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+break;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+break;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+iterator.next();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/6227/pattern-ver1-serial/Alumni.Alumni-2.src.dao.DataAccess.java-updateProfile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
-return result;
+return (Range)(result);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex<0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex<0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+return null;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+return null;
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+return null;
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+while(true){
+
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+while(true){
+
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+while(true){
+
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:44:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+while(true){
+
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
+while(true){
+
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
+while(true){
+
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
+while(true){
+
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:48:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
 }
+while(true){
+
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
+while(true){
+
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
+while(true){
+
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+break;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
+break;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+break;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
+break;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/3456/pattern-ver1-serial/src.main.java.org.opentripplanner.routing.impl.CandidateEdge.java-calcScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+synchronized(this){
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+synchronized(this){
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(mappedDatasets!=getDatasetsMappedToDomainAxis(new Integer(domainIndex))){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7075/pattern-ver1-serial/app.src.main.java.com.gustavoparreira.realtimetile.Player.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(getDatasetsMappedToDomainAxis(new Integer(domainIndex))!=null){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
+if(getDatasetsMappedToRangeAxis(new Integer(rangeIndex))!=null){
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+}
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(mappedDatasets!=null){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
+mappedDatasets.add("bookmark");
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3527/pattern-ver1-serial/src.commandHelp.CommandList.java-cmds.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
+includedAnnotations.add("bookmark");
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3527/pattern-ver1-serial/src.commandHelp.CommandList.java-cmds.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(r.equals(null)){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(r.equals(null)){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(d.equals(null)){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+includedAnnotations.add("webconsole");
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1536/pattern-ver1-serial/management.server.core.identity-manager.identity-manager-impl.src.main.java.io.subutai.core.identity.impl.model.PermissionEntity.java-asString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+includedAnnotations.add("webconsole");
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1536/pattern-ver1-serial/management.server.core.identity-manager.identity-manager-impl.src.main.java.io.subutai.core.identity.impl.model.PermissionEntity.java-asString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:49:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d==null){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/816/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.client.renderer.RendererRelocator.java-renderTileEntityAt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+ final List mappedDatasets=new ArrayList();
+ final List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
+ final Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
-Iterator iterator=this.annotations.iterator();
+ final Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
-List includedAnnotations=new ArrayList();
+ final List mappedDatasets=new ArrayList();
+ final List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(d==null){
+continue;
+}
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Solution---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
+if(r==null){
+continue;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-int rangeIndex=getRangeAxisIndex(axis);
+ final int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-int rangeIndex=getRangeAxisIndex(axis);
+ final int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ final Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-Iterator iterator=mappedDatasets.iterator();
+ final Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ final Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
-XYDataset d=(XYDataset)iterator.next();
+ final XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
-XYAnnotation annotation=(XYAnnotation)iterator.next();
+ final XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ final List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ final List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ final Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ final List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-Iterator iterator=mappedDatasets.iterator();
+ final Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
-List mappedDatasets=new ArrayList();
+ final List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ final Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+result=result;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+d=d;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex+domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
-int domainIndex=getDomainAxisIndex(axis);
+ final int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
+ final Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
-Iterator i=c.iterator();
+ final Collection c=r.getAnnotations();
+ final Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
-Iterator iterator=mappedDatasets.iterator();
+ final Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
-Iterator it=includedAnnotations.iterator();
+ final Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
+ final Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
+ final XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
-Collection c=r.getAnnotations();
+ final Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
+mappedDatasets.remove(null);
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
+includedAnnotations.remove(null);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+c.remove(null);
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c.isEmpty()){
+return null;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(true){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(true){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(true){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(true){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(true){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(true){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(true){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
+if(isDomainAxis&&isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+c.add(axis);
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/6056/pattern-ver1-serial/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.loaders.ConfDataLoader.java-getTypes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+mappedDatasets.add(iterator);
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5858/pattern-ver1-serial/Compile.app.src.main.java.compile_inc.compile.ContactDatabaseHandler.java-dbGetAllContacts.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+includedAnnotations.add(iterator);
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5858/pattern-ver1-serial/Compile.app.src.main.java.compile_inc.compile.ContactDatabaseHandler.java-dbGetAllContacts.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(result==null){
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+if(result==null){
 result=Range.combine(result,r.findDomainBounds(d));
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
+Collections.sort(mappedDatasets,String.CASE_INSENSITIVE_ORDER);
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/3332/pattern-ver1-serial/src.main.java.com.jpaulmorrison.graphics.MyFileChooser.java-showList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
+Collections.sort(includedAnnotations,String.CASE_INSENSITIVE_ORDER);
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/3332/pattern-ver1-serial/src.main.java.com.jpaulmorrison.graphics.MyFileChooser.java-showList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+int a=0;
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+int a=0;
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+int a=0;
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+int a=0;
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+int a=0;
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+int a=0;
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+int a=0;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+int a=0;
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+int a=0;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+isDomainAxis=false;
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+isDomainAxis=false;
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+isDomainAxis=false;
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+isDomainAxis=false;
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+isDomainAxis=false;
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
+isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+isDomainAxis=true;
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
+isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+isDomainAxis=true;
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+isDomainAxis=false;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+isDomainAxis=false;
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+isDomainAxis=false;
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+String OUTSTRING="";
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+String OUTSTRING="";
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+String OUTSTRING="";
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+String OUTSTRING="";
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
+String OUTSTRING="";
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+String OUTSTRING="";
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
+String OUTSTRING="";
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+String OUTSTRING="";
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+String OUTSTRING="";
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+String OUTSTRING="";
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+mappedDatasets.add(r);
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3832/pattern-ver1-serial/src.miningChanges.ObtainVSMScore.java-updateCorpusNL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+includedAnnotations.add(r);
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3832/pattern-ver1-serial/src.miningChanges.ObtainVSMScore.java-updateCorpusNL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+int Range=5;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+int DatasetUtilities=5;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
+axis.setVisible(false);
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/3940/pattern-ver1-serial/client.src.main.java.cr.fr.saucisseroyale.miko.UiWindow.java-hideUi.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(Double.isNaN(domainIndex)){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(Double.isNaN(domainIndex)){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(Double.isNaN(rangeIndex)){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:55:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(Double.isNaN(rangeIndex)){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
+if(mappedDatasets!=null){
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+}
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/759/pattern-ver1-serial/src.com.herasymc.cmput301counter.CounterList.java-reset.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c.contains("MapDisarm")){
+continue;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/811/pattern-ver1-serial/app.src.main.java.com.disarm.sanna.pdm.SocialShareActivity.java-addSentFilesToSenderNodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(equals(d)){
+return null;
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(equals(d)){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(equals(d)){
+return null;
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(equals(d)){
+return null;
+}
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:56:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(equals(result)){
+return null;
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(equals(result)){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+int indexSelection=0;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+int indexSelection=0;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+int indexSelection=0;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+int indexSelection=0;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+int indexSelection=0;
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+int indexSelection=0;
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+int indexSelection=0;
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+int indexSelection=0;
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+int indexSelection=0;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+int indexSelection=0;
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d.equals("sounds")){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(result.equals("sounds")){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(r.equals("sounds")){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+int a=1;
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+int a=1;
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+int a=1;
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+int a=1;
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+int a=1;
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+int a=1;
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+int a=1;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+int a=1;
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+int a=1;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+boolean Range=true;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+boolean DatasetUtilities=true;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+boolean Range=true;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+boolean b=true;
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+boolean b=true;
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+boolean b=true;
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+boolean b=true;
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+boolean b=true;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+boolean b=true;
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+boolean b=true;
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
+boolean b=true;
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+boolean b=true;
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+boolean b=true;
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(r==null){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+if(r==null){
+continue;
+}
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+if(r==null){
+continue;
+}
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+if(r==null){
+continue;
+}
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 12:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Solution---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(r==null){
+continue;
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c==null){
+continue;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(Math.abs(domainIndex))));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
-mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
+mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(Math.abs(rangeIndex))));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(r==null){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+if(r==null){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+if(r==null){
+return null;
+}
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+if(r==null){
+return null;
+}
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Solution---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(r==null){
+return null;
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
+if(i==null){
+return null;
+}
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+if(i==null){
+return null;
+}
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c==null){
+return null;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+if(iterator==null){
+return null;
+}
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation==null){
+return null;
+}
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(d==null){
+return null;
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d==null){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(result==null){
+return null;
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(result==null){
+return null;
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(d==null){
+return null;
+}
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:02:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+if("&null".equals(r)){
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+if("&null".equals(r)){
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+if("&null".equals(r)){
+return null;
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+if("&null".equals(d)){
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+if("&null".equals(d)){
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+if("&null".equals(result)){
+return null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+if("&null".equals(result)){
+return null;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+if("&null".equals(d)){
+return null;
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+if("&null".equals(d)){
+return null;
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(mappedDatasets.size()>0){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(!getDatasetsMappedToDomainAxis(new Integer(domainIndex)).equals("")){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
-if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+if(annotation instanceof XYAnnotationBoundsInfo){
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5594/pattern-ver1-serial/app.src.main.java.com.dirkgassen.wator.simulator.SimulatorRunnable.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(getDatasetsMappedToDomainAxis(new Integer(domainIndex)).size()>0){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2897/pattern-ver1-serial/src.main.java.org.restonfire.FirebaseRestQueryImpl.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(r.equals("-1")){
+return null;
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c.equals("-1")){
+return null;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+if(i.equals("-1")){
+return null;
+}
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+if(iterator.equals("-1")){
+return null;
+}
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation.equals("-1")){
+return null;
+}
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0||domainIndex==Long.MIN_VALUE){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0||rangeIndex==Long.MIN_VALUE){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0||domainIndex==Long.MIN_VALUE){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0||rangeIndex==Long.MIN_VALUE){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+includedAnnotations.add(annotation);
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(d==null){
+return null;
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+assert (r!=null);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+assert (r!=null);
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+assert (r!=null);
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+assert (r!=null);
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+assert (r!=null);
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
+assert (axis!=null);
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+assert (c!=null);
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
+try{
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}finally{
+isDomainAxis=true;
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(d!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:04:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d!=null){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(d!=null){
 if(d!=null){
+XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
+Collection c=r.getAnnotations();
+Iterator i=c.iterator();
+while(i.hasNext()){
+XYAnnotation a=(XYAnnotation)i.next();
+if(a instanceof XYAnnotationBoundsInfo){
+includedAnnotations.add(a);
+}
+}
+}
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(result!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(result!=null){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+assert (r!=getRendererForDataset(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+assert (c!=r.getAnnotations());
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+assert (iterator!=this.annotations.iterator());
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+assert (d!=(XYDataset)iterator.next());
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+assert (annotation!=(XYAnnotation)iterator.next());
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+assert (d!=null);
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+assert (d!=null);
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+assert (d!=null);
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+assert (d!=null);
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+assert (result!=null);
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+assert (result!=null);
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+assert (r!=null);
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+assert (r!=null);
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+assert (r!=null);
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+assert (r!=null);
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
+assert (axis!=null);
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+assert (includedAnnotations!=null);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+assert (includedAnnotations!=null);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+if(iterator.equals("655")){
+System.out.println();
+}
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
+if(iterator.equals("655")){
+System.out.println();
+}
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation.equals("655")){
+System.out.println();
+}
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(r!=null||"查看红包".equals(r)){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(r!=null||"查看红包".equals(r)){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(d!=null||"查看红包".equals(d)){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0||domainIndex==3){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0||domainIndex==3){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0||rangeIndex==3){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0||rangeIndex==3){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c.isEmpty()){
+c=null;
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex<0||domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex<0||domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex<0||rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:06:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex<0||rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
-result=Range.combine(result,xyabi.getXRange());
+result=result;
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
-result=Range.combine(result,xyabi.getYRange());
+result=result;
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0||domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0||rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0||domainIndex==0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0||rangeIndex==0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+if(!isDomainAxis){
 isDomainAxis=true;
+}
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/918/pattern-ver1-serial/src.com.isrtk.nihtfti.MainService.java-onStartCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 2, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0||domainIndex>9){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0||domainIndex>9){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0||rangeIndex>9){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0||rangeIndex>9){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0&&domainIndex<4000000){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0&&domainIndex<4000000){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0&&rangeIndex<4000000){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0&&rangeIndex<4000000){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(r!=null||r==null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(r!=null||r==null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(d!=null||d==null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0&&domainIndex!=9999){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0&&domainIndex!=9999){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0&&rangeIndex!=9999){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0&&rangeIndex!=9999){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(0>0&&domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(0>0&&domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(0>0&&rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(0>0&&rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+isDomainAxis=true;
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+isDomainAxis=true;
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
+isDomainAxis=true;
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+isDomainAxis=true;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+assert (r!=null):"Appointments day is not allowed to be null!";
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+assert (r!=null):"Appointments day is not allowed to be null!";
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+assert (r!=null):"Appointments day is not allowed to be null!";
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+assert (r!=null):"Appointments day is not allowed to be null!";
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+assert (r!=null):"Appointments day is not allowed to be null!";
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:09:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
+assert (axis!=null):"Appointments day is not allowed to be null!";
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
+assert (includedAnnotations!=null):"Appointments day is not allowed to be null!";
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
+assert (includedAnnotations!=null):"Appointments day is not allowed to be null!";
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.Collections;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
+Collections.sort(includedAnnotations,Collections.reverseOrder());
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.Collections;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
+Collections.sort(includedAnnotations,Collections.reverseOrder());
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==0||domainIndex=='"'){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex>=0||domainIndex=='"'){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex>=0||rangeIndex=='"'){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex==0||rangeIndex=='"'){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(r==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+if(r==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+if(d==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=result;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=result;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
+result=result;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+result=result;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+if(includedAnnotations!=null){
 isDomainAxis=true;
+}
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation instanceof XYAnnotationBoundsInfo){
+includedAnnotations.add(annotation);
+}
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+boolean haveBreadCrumbs=false;
+if(domainIndex==0&&haveBreadCrumbs){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
+if(mappedDatasets!=null){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+if(includedAnnotations!=null){
 isDomainAxis=false;
+}
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+Iterator iterator=this.annotations.iterator();
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
-Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+Iterator iterator=this.annotations.iterator();
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
-Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=null;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=null;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
+result=null;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex==0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex>=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5972/pattern-ver1-serial/core.src.com.ru.tgra.assignment2.CannonGame.java-touchUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
-if(rangeIndex>=0){
+if(rangeIndex==0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
+if(rangeIndex>=0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5972/pattern-ver1-serial/core.src.com.ru.tgra.assignment2.CannonGame.java-touchUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+includedAnnotations.add("facebook:1006907856026402");
+includedAnnotations.add("facebook:723263297817907");
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/1183/pattern-ver1-serial/app.src.main.java.fjd.com.untitledmvp.helper.GeoQueryWrapper.java-Query.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+includedAnnotations.add("facebook:1006907856026402");
+includedAnnotations.add("facebook:723263297817907");
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/1183/pattern-ver1-serial/app.src.main.java.fjd.com.untitledmvp.helper.GeoQueryWrapper.java-Query.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
+if(r!=null&&!r.equals("")){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
+if(d!=null&&!d.equals("")){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
+if(r!=null&&!r.equals("")){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+try{
 isDomainAxis=true;
+}finally{
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+if(includedAnnotations!=null){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=DatasetUtilities.findDomainBounds(d);
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/5917/pattern-ver1-serial/kse.src.net.sf.keystore_explorer.gui.crypto.generalsubtree.JGeneralSubtrees.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+if(!isDomainAxis){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/918/pattern-ver1-serial/src.com.isrtk.nihtfti.MainService.java-onStartCommand.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 2, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
+Range t=result;
+result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
-return result;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
+if(c==null){
+throw new IllegalStateException("User isn't registered! "+r);
+}
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(r==null){
+throw new IllegalStateException("User isn't registered! "+d);
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+if(i==null){
+throw new IllegalStateException("User isn't registered! "+c);
+}
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation==null){
+throw new IllegalStateException("User isn't registered! "+iterator);
+}
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:13:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+synchronized(this){
 result=Range.combine(result,r.findDomainBounds(d));
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:13:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+synchronized(this){
 result=Range.combine(result,r.findRangeBounds(d));
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:13:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+if(this.annotations!=null){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Solution---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
+if(r!=null){
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+if(mappedDatasets!=null){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
+result=Range.combine(result,xyabi.getXRange());
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+result=Range.combine(result,r.findDomainBounds(d));
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+result=Range.combine(result,r.findRangeBounds(d));
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:14:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+result=Range.combine(result,r.findDomainBounds(d));
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:15:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,r.findRangeBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+if(r!=null){
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,r.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:16:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+result=Range.combine(result,r.findRangeBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+result=Range.combine(result,r.findDomainBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+if(r!=null){
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,r.findRangeBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/4610/pattern-ver1-serial/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashOverviewActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,r.findRangeBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+boolean haveBreadCrumbs=false;
+if(domainIndex==0&&haveBreadCrumbs){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+haveBreadCrumbs=true;
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+boolean haveBreadCrumbs=false;
+if(domainIndex==0&&haveBreadCrumbs){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+haveBreadCrumbs=true;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
+result=Range.combine(result,r.findRangeBounds(d));
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+result=Range.combine(result,r.findRangeBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,r.findDomainBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
+result=Range.combine(result,r.findDomainBounds(d));
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
+result=Range.combine(result,r.findRangeBounds(d));
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(d==null||result==null){
+throw new NullPointerException();
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+if(result==null||d==null){
+throw new NullPointerException();
+}
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(d==null||result==null){
+throw new NullPointerException();
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(result==null||d==null){
+throw new NullPointerException();
+}
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(d==null||result==null){
+throw new NullPointerException();
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(result==null||d==null){
+throw new NullPointerException();
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(d==null||result==null){
+throw new NullPointerException();
+}
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
+if(result==null||d==null){
+throw new NullPointerException();
+}
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/198/pattern-ver1-serial/src.com.bekvon.bukkit.residence.listeners.ResidencePlayerListener.java-onPlayerMove.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+result=Range.combine(result,r.findDomainBounds(d));
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/2211/pattern-ver1-serial/src.Model.PlayerModel.java-isAttacking.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+boolean succeeded=false;
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
+succeeded=true;
 }
+if(!succeeded){
+return null;
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 2, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/2148/pattern-ver1-serial/src.main.java.com.fasterxml.sort.Merger.java-close.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 7, INS : 0, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
+if(domainIndex==','||domainIndex==']'||domainIndex=='}'){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
-if(domainIndex>=0){
+if(domainIndex==','||domainIndex==']'||domainIndex=='}'){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
+long startTime=System.currentTimeMillis();
 result=Range.combine(result,r.findDomainBounds(d));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
+long startTime=System.currentTimeMillis();
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+long startTime=System.currentTimeMillis();
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
+long startTime=System.currentTimeMillis();
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+long startTime=System.currentTimeMillis();
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+long startTime=System.currentTimeMillis();
 result=Range.combine(result,r.findRangeBounds(d));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:19:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+long startTime=System.currentTimeMillis();
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
+long startTime=System.currentTimeMillis();
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
+long startTime=System.currentTimeMillis();
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
+long startTime=System.currentTimeMillis();
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4559/pattern-ver1-serial/src.application.rmi.Serveur.java-getCasePlayed.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 6, INS : 0, DEL : 8
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
+if(getDatasetsMappedToDomainAxis(new Integer(domainIndex)).size()<20){
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
+}else {
+mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)).subList(getDatasetsMappedToDomainAxis(new Integer(domainIndex)).size()-20,getDatasetsMappedToDomainAxis(new Integer(domainIndex)).size()));
+}
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/670/pattern-ver1-serial/FrontEnd.src.main.java.client.instrument.list.charts.DynamicHistoryChart.java-setData.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
-if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
-}else {
-result=Range.combine(result,xyabi.getYRange());
-}
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/5941/pattern-ver1-serial/app.src.main.java.com.juztoss.rhythmo.services.PlaybackService.java-gotoNext.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 11, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
-mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 11, INS : 0, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}else {
+result=Range.combine(result,r.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
+synchronized(this){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
+synchronized(this){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,r.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+synchronized(this){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
-if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1080/pattern-ver1-serial/src.main.java.net.aufdemrand.denizen.scripts.commands.core.IfCommand.java-parseArgs.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:21:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+if(isDomainAxis){
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 1, DEL : 19
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+if(r!=null){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 27, UPD : 27, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 27, UPD : 27, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
+synchronized(this){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
+synchronized(this){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
+}
 }
+}else {
+Iterator iterator=this.annotations.iterator();
+while(iterator.hasNext()){
+XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation instanceof XYAnnotationBoundsInfo){
+includedAnnotations.add(annotation);
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
-isDomainAxis=true;
-mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
-if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
-}
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
-isDomainAxis=false;
-mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
-if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
-}
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
+}
+}
 }
+}else {
+Iterator iterator=this.annotations.iterator();
+while(iterator.hasNext()){
+XYAnnotation annotation=(XYAnnotation)iterator.next();
+if(annotation instanceof XYAnnotationBoundsInfo){
+includedAnnotations.add(annotation);
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/3950/pattern-ver1-serial/predictiveclustering.src.main.java.predictiveclustering.utils.Split.java-splitGroup.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 28, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/1889/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.PartitionReplicaStateChecker.java-isReplicaInSyncState.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 0, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
 if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
 if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 }else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+if(isDomainAxis){
+if(r!=null){
+result=Range.combine(result,r.findDomainBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
+}
+}else {
+if(r!=null){
+result=Range.combine(result,r.findRangeBounds(d));
+}else {
+result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
+}
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 1, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
 if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 3, INS : 0, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
 XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
 Collection c=r.getAnnotations();
+if(c!=null){
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 3, INS : 0, DEL : 39
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
+synchronized(this){
 XYItemRenderer r=getRendererForDataset(d);
 if(isDomainAxis){
 if(r!=null){
 result=Range.combine(result,r.findDomainBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
 }
 }else {
 if(r!=null){
 result=Range.combine(result,r.findRangeBounds(d));
 }else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
 }
 }
 Collection c=r.getAnnotations();
 Iterator i=c.iterator();
 while(i.hasNext()){
 XYAnnotation a=(XYAnnotation)i.next();
 if(a instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(a);
+}
 }
 }
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 63, UPD : 63, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
 result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
-Collection c=r.getAnnotations();
-Iterator i=c.iterator();
-while(i.hasNext()){
-XYAnnotation a=(XYAnnotation)i.next();
-if(a instanceof XYAnnotationBoundsInfo){
-includedAnnotations.add(a);
-}
-}
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 63, UPD : 63, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
 if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
 result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
-Collection c=r.getAnnotations();
-Iterator i=c.iterator();
-while(i.hasNext()){
-XYAnnotation a=(XYAnnotation)i.next();
-if(a instanceof XYAnnotationBoundsInfo){
-includedAnnotations.add(a);
-}
-}
 }
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 63, UPD : 63, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:24:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/chart/plot/XYPlot.java[4418,4519]
------------Candidate---------------
 public Range getDataRange(ValueAxis axis){
 Range result=null;
 List mappedDatasets=new ArrayList();
 List includedAnnotations=new ArrayList();
 boolean isDomainAxis=true;
 int domainIndex=getDomainAxisIndex(axis);
 if(domainIndex>=0){
 isDomainAxis=true;
 mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
 if(domainIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 int rangeIndex=getRangeAxisIndex(axis);
 if(rangeIndex>=0){
 isDomainAxis=false;
 mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
 if(rangeIndex==0){
 Iterator iterator=this.annotations.iterator();
 while(iterator.hasNext()){
 XYAnnotation annotation=(XYAnnotation)iterator.next();
 if(annotation instanceof XYAnnotationBoundsInfo){
 includedAnnotations.add(annotation);
 }
 }
 }
 }
 Iterator iterator=mappedDatasets.iterator();
 while(iterator.hasNext()){
 XYDataset d=(XYDataset)iterator.next();
-if(d!=null){
-XYItemRenderer r=getRendererForDataset(d);
-if(isDomainAxis){
-if(r!=null){
-result=Range.combine(result,r.findDomainBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findDomainBounds(d));
-}
-}else {
-if(r!=null){
-result=Range.combine(result,r.findRangeBounds(d));
-}else {
-result=Range.combine(result,DatasetUtilities.findRangeBounds(d));
-}
-}
-Collection c=r.getAnnotations();
-Iterator i=c.iterator();
-while(i.hasNext()){
-XYAnnotation a=(XYAnnotation)i.next();
-if(a instanceof XYAnnotationBoundsInfo){
-includedAnnotations.add(a);
-}
-}
-}
 }
 Iterator it=includedAnnotations.iterator();
 while(it.hasNext()){
 XYAnnotationBoundsInfo xyabi=(XYAnnotationBoundsInfo)it.next();
 if(xyabi.getIncludeInDataBounds()){
 if(isDomainAxis){
 result=Range.combine(result,xyabi.getXRange());
 }else {
 result=Range.combine(result,xyabi.getYRange());
 }
 }
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/1889/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.PartitionReplicaStateChecker.java-isReplicaInSyncState.pattern
MATCHLEVEL : ALL
ALL : 66, UPD : 0, INS : 0, DEL : 66
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:24:14 CDT
--------------- END -----------------
Location : org.jfree.data.xy.XYSeries.getMinX:[192]#0.9090909090909091
Compute Candidate : 2019.09.04 AD at 13:24:36 CDT - 2019.09.04 AD at 13:28:29 CDT , PNumber : 11294, CandNumber : 12 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return this.getMinX();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+this.getMinX();
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/2193/pattern-ver1-serial/Poker.src.fr.poker.model.Carte.java-compareValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return (double)(this.minX);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return 1+this.minX;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
-return this.minX;
+return this.minX+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+int a=0;
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+String OUTSTRING="";
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+int a=1;
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+boolean b=true;
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:29:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[180,193]
------------Candidate---------------
 public double getMinX(){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 return this.minX;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:29:05 CDT
--------------- END -----------------
Location : org.jfree.data.xy.XYSeries.getMaxX:[207]#0.9090909090909091
Compute Candidate : 2019.09.04 AD at 13:29:28 CDT - 2019.09.04 AD at 13:33:05 CDT , PNumber : 11294, CandNumber : 12 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return this.getMaxX();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+this.getMaxX();
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/2193/pattern-ver1-serial/Poker.src.fr.poker.model.Carte.java-compareValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return (double)(this.maxX);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return 1+this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
-return this.maxX;
+return this.maxX+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+int a=0;
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+String OUTSTRING="";
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+int a=1;
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+boolean b=true;
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeries.java[195,208]
------------Candidate---------------
 public double getMaxX(){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 return this.maxX;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 13:33:44 CDT
--------------- END -----------------
Location : org.jfree.data.xy.XYSeriesCollection.getDomainBounds:[577, 578, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 595, 599]#0.9090909090909091
Compute Candidate : 2019.09.04 AD at 13:34:09 CDT - 2019.09.04 AD at 14:28:00 CDT , PNumber : 11422, CandNumber : 360 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+continue;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+continue;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+ XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
-double minX=series.getMinX();
+ double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
-double maxX=series.getMaxX();
+ double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
-double lower=Double.POSITIVE_INFINITY;
+ double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
-double upper=Double.NEGATIVE_INFINITY;
+ double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>1){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>=upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+return null;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+return null;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;lower<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;upper<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+long seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<=seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Collection;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,myUid;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,DEFAULT_TIMEOUT2;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s>seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,MAX_SERVICE_NODES;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,MAX_ZK_WAIT_RETRY_TIMES;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+break;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+break;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
+break;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1233/pattern-ver1-serial/crm.src.main.java.com.ogg.crm.ui.activity.CustomerPublicListActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+float seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;s--){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower<upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower!=upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
-if(includeInterval){
+if(true){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,localLevel;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.io.IOException;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/3389/pattern-ver1-serial/NewMessageTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.max(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4024/pattern-ver1-serial/MPChartLib.src.main.java.com.github.mikephil.charting.charts.BarLineChartBase.java-getLowestVisibleX.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.min(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/5136/pattern-ver1-serial/src.main.java.com.massivecraft.factions.zcore.persist.MemoryFaction.java-getMaxLand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;seriesCount++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;lower++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;upper++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,_afterComposeMethodCache;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+s++;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.List;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,mActions;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,mRelationId;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
-if(includeInterval){
+if(false){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4923/pattern-ver1-serial/src.ClueBoard.ComputerPlayer.java-takeTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<lower;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<upper;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<s;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+lower=Double.POSITIVE_INFINITY;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V15/1685/pattern-ver1-serial/src.simulation.Simulation.java-calculateServerUseTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+lower=Double.POSITIVE_INFINITY;
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V15/1685/pattern-ver1-serial/src.simulation.Simulation.java-calculateServerUseTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+upper=Double.NEGATIVE_INFINITY;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V15/1685/pattern-ver1-serial/src.simulation.Simulation.java-calculateServerUseTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+ XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
-double minX=series.getMinX();
+ double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
-double maxX=series.getMaxX();
+ double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
-double minX=series.getMinX();
+ XYSeries series=getSeries(s);
+ double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+ XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
-double maxX=series.getMaxX();
+ double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
-double lower=Double.POSITIVE_INFINITY;
+ double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+ XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
-double lower=Double.POSITIVE_INFINITY;
+ double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+if(series.isEmpty()){
+continue;
+}
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6775/pattern-ver1-serial/Salvum.src.br.ufpe.cin.analyses.Main.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+seriesCount++;
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+lower++;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:35:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+upper++;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+lower++;
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+lower++;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
-if(includeInterval){
+if(!includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+s++;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+s++;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+s++;
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+seriesCount--;
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+lower--;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+upper--;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+lower--;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+s--;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+s--;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+s--;
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:42:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+series.clear();
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+getDomainBounds(includeInterval);
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN((int)(minX))){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN((int)(maxX))){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+XYSeries series=getSeries((int)(s));
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:43:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0,continentName,countryCode;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
+while(true){
+
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+while(true){
+
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+while(true){
+
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+synchronized(this){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+synchronized(this){
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+synchronized(this){
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+synchronized(this){
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+s++;
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+s++;
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+s++;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;s++,Charset.forName("UTF-8")){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return getDomainBounds(false);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/4268/pattern-ver1-serial/library.src.main.java.com.mbientlab.metawear.impl.DefaultMetaWearBoard.java-fromSensor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return null;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
+synchronized(this){
 return null;
+}
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+if(Math.min(lower,minX)!=0){
 lower=Math.min(lower,minX);
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+if(Math.max(upper,maxX)!=0){
 upper=Math.max(upper,maxX);
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+if(series==null){
+continue;
+}
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+}
+if(series==null){
+continue;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(30-(lower),minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,30-(minX));
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(30-(upper),maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,30-(maxX));
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(30-(lower),upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:49:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,30-(upper));
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ final int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+ final XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
-double maxX=series.getMaxX();
+ final double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
+ final int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
-double minX=series.getMinX();
+ final double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
-double maxX=series.getMaxX();
+ final double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+seriesCount=seriesCount;
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+lower=lower;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+series.remove(null);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+if(s==4){
+continue;
+}
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+if(series.isEmpty()){
+return null;
+}
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+series.remove(0);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(true){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
-if(includeInterval){
+if(includeInterval&&includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper/2){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+int a=0;
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+int a=0;
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+int a=0;
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+int a=0;
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+int a=0;
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+int a=0;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
+int a=0;
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+int a=0;
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(2.0*(lower),minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,2.0*(minX));
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(2.0*(upper),maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,2.0*(maxX));
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(2.0*(lower),upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,2.0*(upper));
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+if(minX==0.0){
+continue;
+}
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+if(maxX==0.0){
+continue;
+}
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+String OUTSTRING="";
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+String OUTSTRING="";
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+String OUTSTRING="";
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+String OUTSTRING="";
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+String OUTSTRING="";
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+String OUTSTRING="";
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+String OUTSTRING="";
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
+String OUTSTRING="";
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;){
+s++;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(Math.round(lower),minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,Math.round(minX));
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(Math.round(upper),maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,Math.round(maxX));
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(Math.round(lower),upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,Math.round(upper));
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(Double.isNaN(lower)){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(Math.abs(minX))){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(Math.abs(maxX))){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;Math.abs(s++)){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+XYSeries series=getSeries(Math.abs(s));
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+int indexSelection=0;
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+int indexSelection=0;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+int indexSelection=0;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+int indexSelection=0;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return (Range)(new Range(lower,upper));
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(Math.max(lower,minX),minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,Math.max(lower,minX));
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(Math.max(upper,maxX),maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,Math.max(upper,maxX));
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(Math.max(lower,upper),upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,Math.max(lower,upper));
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+int a=1;
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+int a=1;
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+int a=1;
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+int a=1;
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+int a=1;
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
+int a=1;
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+int a=1;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+int a=1;
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+String POSITIVE_INFINITY="%#.&f";
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+String NEGATIVE_INFINITY="%#.&f";
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+boolean b=true;
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+boolean b=true;
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+boolean b=true;
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+boolean b=true;
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+boolean b=true;
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+boolean b=true;
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
+boolean b=true;
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+boolean b=true;
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+if(series==null){
+return null;
+}
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return getDomainBounds(false);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/4268/pattern-ver1-serial/library.src.main.java.com.mbientlab.metawear.impl.DefaultMetaWearBoard.java-fromSensor.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=-1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=-1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return null;
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+synchronized(this){
 return this.intervalDelegate.getDomainBounds(includeInterval);
+}
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=0;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=0;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=lower;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=upper;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=minX;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=maxX;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(true){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(true){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(minX)==false){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(maxX)==false){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)*lower;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)*lower;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)*upper;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)*upper;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)*seriesCount;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)*seriesCount;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)*s;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)*s;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+if(lower<0){
+return null;
+}
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+if(lower<0){
+return null;
+}
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
+if(series.equals("-1")){
+return null;
+}
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return (Range)this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=lower;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=upper;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=seriesCount;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=seriesCount;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=s;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=s;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper||lower==Long.MIN_VALUE){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+int seriesCount=getSeriesCount();
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
-int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+double lower=Double.POSITIVE_INFINITY;
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
-double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+double upper=Double.NEGATIVE_INFINITY;
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
-double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=2;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=2;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=0.0;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:55:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=0.0;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(minX)==true){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(maxX)==true){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(lower==0){
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(upper==0){
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+}
+if(lower==0){
+return null;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
+if(upper==0){
+return null;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+if(lower==0){
+return null;
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+if(upper==0){
+return null;
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return (Range)(this.intervalDelegate.getDomainBounds(includeInterval));
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+assert (seriesCount!=getSeriesCount());
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+assert (lower!=Double.POSITIVE_INFINITY);
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+assert (upper!=Double.NEGATIVE_INFINITY);
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=lower+Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=upper+Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)+1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)+1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=10;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=10;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(Math.max(minX,0))){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(Math.max(maxX,0))){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:56:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
-for(int s=0;s<seriesCount;s++){
+for(int s=0;s<seriesCount;Math.max(s++,0)){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
-XYSeries series=getSeries(s);
+XYSeries series=getSeries(Math.max(s,0));
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper||lower==3){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower<0||lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=(Math.min(lower,minX)+lower)%lower;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=(Math.max(upper,maxX)+upper)%upper;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=(Math.min(lower,minX)+minX)%minX;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=(Math.max(upper,maxX)+maxX)%maxX;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper||lower==0){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper||lower>9){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return this.intervalDelegate==null?null:this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper&&lower<4000000){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper&&lower!=9999){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(upper>0&&lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+assert (lower>=0):"Receive a negative tratment";
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+assert (upper>=0):"Receive a negative tratment";
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:57:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+assert (seriesCount>=0):"Receive a negative tratment";
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+assert (lower>=0):"Receive a negative tratment";
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+assert (lower>=0):"Receive a negative tratment";
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+assert (upper>=0):"Receive a negative tratment";
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+if(this.intervalDelegate!=null){
 return this.intervalDelegate.getDomainBounds(includeInterval);
+}else {
+return null;
+}
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
-if(includeInterval){
+if(data!=null&&(includeInterval)){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(data!=null&&(!Double.isNaN(minX))){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(data!=null&&(!Double.isNaN(maxX))){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(data!=null&&(lower>upper)){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+return this.intervalDelegate!=null?this.intervalDelegate.getDomainBounds(includeInterval):null;
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+assert (lower!=0):"Receive a size tratment";
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+assert (upper!=0):"Receive a size tratment";
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+assert (seriesCount!=0):"Receive a size tratment";
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+assert (lower!=0):"Receive a size tratment";
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+assert (lower!=0):"Receive a size tratment";
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
+assert (upper!=0):"Receive a size tratment";
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
-if(lower>upper){
+if(lower>upper||lower=='"'){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:58:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+synchronized(this){
 lower=Math.min(lower,minX);
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+synchronized(this){
 upper=Math.max(upper,maxX);
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+if(lower>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+if(upper>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(lower<0){
+lower=0;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(upper<0){
+upper=0;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+}
+if(lower<0){
+lower=0;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
+if(upper<0){
+upper=0;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+if(lower<0){
+lower=0;
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+if(upper<0){
+upper=0;
+}
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+if(seriesCount<=0){
+seriesCount=1;
+}
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(upper>lower){
+upper=lower;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(lower>upper){
+lower=upper;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX-1);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower-1,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX-1);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,upper-1);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX-1);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper-1,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX-1);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX-1);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower-1,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX-1);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX-1);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower-1,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX-1);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,upper-1);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 14:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower-1,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower-1,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower-1,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
-return new Range(lower,upper);
+return new Range(lower,upper-1);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=-1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+lower++;
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=-1;
 }
 }
+upper++;
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=-1;
 }
+lower++;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=-1;
 }
+upper++;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=-1;
+lower++;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+upper++;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=-1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=-1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+lower++;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+lower=Math.min(lower,minX);
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+upper=Math.max(upper,maxX);
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+lower=Math.min(lower,minX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
+lower=Math.min(lower,minX);
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
+upper=Math.max(upper,maxX);
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+if(!Double.isNaN(minX)){
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+lower=Math.min(lower,minX);
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+if(!Double.isNaN(maxX)){
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+lower=Math.min(lower,minX);
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
-return this.intervalDelegate.getDomainBounds(includeInterval);
+double lower=Double.POSITIVE_INFINITY;
+double upper=Double.NEGATIVE_INFINITY;
+int seriesCount=getSeriesCount();
+for(int s=0;s<seriesCount;s++){
+XYSeries series=getSeries(s);
+double minX=series.getMinX();
+if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
+}
+double maxX=series.getMaxX();
+if(!Double.isNaN(maxX)){
+upper=Math.max(upper,maxX);
+}
+}
+if(lower>upper){
+return null;
+}else {
+return new Range(lower,upper);
+}
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1432/pattern-ver1-serial/src.pt.ulisboa.tecnico.amorphous.requestrouter.internal.lvs.LVSImplementation.java-addServer.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+if(includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
+}else {
+double lower=Double.POSITIVE_INFINITY;
+double upper=Double.NEGATIVE_INFINITY;
+int seriesCount=getSeriesCount();
+for(int s=0;s<seriesCount;s++){
+XYSeries series=getSeries(s);
+double minX=series.getMinX();
+if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
+}
+double maxX=series.getMaxX();
+if(!Double.isNaN(maxX)){
+upper=Math.max(upper,maxX);
+}
+}
+if(lower>upper){
+return null;
+}else {
+return new Range(lower,upper);
+}
+}
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4540/pattern-ver1-serial/core-cube.src.main.java.org.apache.kylin.gridtable.GTScanRangePlanner.java-compare.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+if(lower>upper){
+return null;
+}else {
+return new Range(lower,upper);
+}
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)*2;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)*2;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+lower=Math.min(lower,minX);
 if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+lower=Math.min(lower,minX);
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+lower=Math.min(lower,minX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
+if(this.intervalDelegate!=null){
 return this.intervalDelegate.getDomainBounds(includeInterval);
+}
+return null;
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4738/pattern-ver1-serial/src.tonegod.gui.controls.lists.ComboBox.java-getListItems.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 4, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
+if(this.intervalDelegate!=null){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
+}else {
+double lower=Double.POSITIVE_INFINITY;
+double upper=Double.NEGATIVE_INFINITY;
+int seriesCount=getSeriesCount();
+for(int s=0;s<seriesCount;s++){
+XYSeries series=getSeries(s);
+double minX=series.getMinX();
+if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
+}
+double maxX=series.getMaxX();
+if(!Double.isNaN(maxX)){
+upper=Math.max(upper,maxX);
+}
+}
+if(lower>upper){
+return null;
+}else {
+return new Range(lower,upper);
+}
+}
+}
+if(includeInterval){
+return null;
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4738/pattern-ver1-serial/src.tonegod.gui.controls.lists.ComboBox.java-getListItems.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 4, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=Math.max(upper,maxX)+1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
-lower=Math.min(lower,minX);
+lower=Math.min(lower,minX)+1;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
-upper=Math.max(upper,maxX);
+upper=1;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean succeeded=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+succeeded=true;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(!succeeded){
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean succeeded=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+succeeded=true;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+}
 }
+if(!succeeded){
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean succeeded=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+succeeded=true;
+}
 }
+if(!succeeded){
+return null;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+boolean succeeded=false;
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+succeeded=true;
 }
 double maxX=series.getMaxX();
+if(!succeeded){
+return null;
+}
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+boolean succeeded=false;
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+if(!succeeded){
+return null;
+}
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+succeeded=true;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+if(lower==3){
+System.out.println("debug");
+}
+if(lower==3){
+System.out.println("debug");
+}
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+if(upper==3){
+System.out.println("debug");
+}
+if(upper==3){
+System.out.println("debug");
+}
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(minX)&&haveBreadCrumbs){
 lower=Math.min(lower,minX);
+haveBreadCrumbs=true;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+if(!Double.isNaN(minX)&&haveBreadCrumbs){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
+haveBreadCrumbs=true;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
+haveBreadCrumbs=true;
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(maxX)&&haveBreadCrumbs){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(maxX)&&haveBreadCrumbs){
 upper=Math.max(upper,maxX);
+haveBreadCrumbs=true;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
-if(!Double.isNaN(minX)){
+haveBreadCrumbs=true;
+if(!Double.isNaN(minX)&&haveBreadCrumbs){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
+boolean haveBreadCrumbs=false;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+haveBreadCrumbs=true;
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
-if(!Double.isNaN(maxX)){
+if(!Double.isNaN(maxX)&&haveBreadCrumbs){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
+if(!Double.isNaN(minX)){
+lower=Math.min(lower,minX);
+}
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
+if(!Double.isNaN(maxX)){
+upper=Math.max(upper,maxX);
+}
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
+if(lower<3){
+lower=3;
+}
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+if(seriesCount<3){
+seriesCount=3;
+}
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
+long startTime=System.currentTimeMillis();
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
+long startTime=System.currentTimeMillis();
 lower=Math.min(lower,minX);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
+long startTime=System.currentTimeMillis();
 upper=Math.max(upper,maxX);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
+long startTime=System.currentTimeMillis();
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+lower=Math.round(lower*100.0)/100.0;
+upper=Math.round(upper*100.0)/100.0;
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
 }
+upper=Math.round(upper*100.0)/100.0;
+lower=Math.round(lower*100.0)/100.0;
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/xy/XYSeriesCollection.java[567,602]
------------Candidate---------------
 public Range getDomainBounds(boolean includeInterval){
 if(includeInterval){
 return this.intervalDelegate.getDomainBounds(includeInterval);
 }else {
 double lower=Double.POSITIVE_INFINITY;
 double upper=Double.NEGATIVE_INFINITY;
 int seriesCount=getSeriesCount();
 for(int s=0;s<seriesCount;s++){
 XYSeries series=getSeries(s);
 double minX=series.getMinX();
 if(!Double.isNaN(minX)){
 lower=Math.min(lower,minX);
 }
+lower=Math.round(lower*100.0)/100.0;
 double maxX=series.getMaxX();
 if(!Double.isNaN(maxX)){
 upper=Math.max(upper,maxX);
 }
+upper=Math.round(upper*100.0)/100.0;
 }
 if(lower>upper){
 return null;
 }else {
 return new Range(lower,upper);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:02:32 CDT
--------------- END -----------------
Location : org.jfree.data.general.DatasetUtilities.findDomainBounds:[670, 671, 672, 663, 667, 669, 676, 674]#0.8780541105074453
Compute Candidate : 2019.09.04 AD at 15:02:56 CDT - 2019.09.04 AD at 15:18:46 CDT , PNumber : 11329, CandNumber : 112 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
-DomainInfo info=(DomainInfo)dataset;
+ DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:18:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
-Range result=null;
+ Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+return null;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:18:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+return null;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(dataset!=null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
-return result;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(includeInterval){
 result=info.getDomainBounds(includeInterval);
+}
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3119/pattern-ver1-serial/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java-setHighlighted.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+if(includeInterval){
 result=iterateDomainBounds(dataset,includeInterval);
+}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3119/pattern-ver1-serial/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java-setHighlighted.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
-Range result=null;
+ Range result=null;
 if(dataset instanceof DomainInfo){
-DomainInfo info=(DomainInfo)dataset;
+ DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
-if(dataset instanceof DomainInfo){
+if(true){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+findDomainBounds(dataset);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+findDomainBounds(dataset);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
-return result;
+return (Range)(result);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+while(true){
+
+}
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+while(true){
+
+}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(dataset.equals(null)){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+dataset=dataset;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+info=info;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
+dataset=dataset;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(true){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
-if(dataset instanceof DomainInfo){
+if(dataset instanceof DomainInfo&&includeInterval){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(result==null){
 result=info.getDomainBounds(includeInterval);
+}
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+if(result==null){
 result=iterateDomainBounds(dataset,includeInterval);
+}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
-result=info.getDomainBounds(includeInterval);
+result=result;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
-result=iterateDomainBounds(dataset,includeInterval);
+result=result;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
+int a=0;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+int a=0;
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+int a=0;
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+int a=0;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+String OUTSTRING="";
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+String OUTSTRING="";
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+String OUTSTRING="";
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
-result=info.getDomainBounds(includeInterval);
+result=null;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
-result=iterateDomainBounds(dataset,includeInterval);
+result=null;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+int indexSelection=0;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
+int indexSelection=0;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+int indexSelection=0;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
+int a=1;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+int a=1;
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+int a=1;
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+int a=1;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+boolean b=true;
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
+boolean b=true;
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+boolean b=true;
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+boolean b=true;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(info==null){
+return null;
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+if(dataset==null){
+return null;
+}
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+if(dataset==null){
+return null;
+}
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+if(dataset==null){
+return null;
+}
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+if(result==null){
+return null;
+}
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+if(dataset==null){
+return null;
+}
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+}
+if(result==null){
+return null;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if("&null".equals(info)){
+return null;
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if("&null".equals(dataset)){
+return null;
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+if("&null".equals(dataset)){
+return null;
+}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+if("&null".equals(dataset)){
+return null;
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+if("&null".equals(result)){
+return null;
+}
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(info.equals("-1")){
+return null;
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+if(result.equals("-1")){
+return null;
+}
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+assert (info!=null);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+assert (dataset!=null);
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+assert (dataset!=null);
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+assert (dataset!=null);
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+assert (result!=null);
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+if(dataset!=null){
+DomainInfo info=(DomainInfo)dataset;
+result=info.getDomainBounds(includeInterval);
+}
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+if(dataset!=null){
+if(dataset==null){
+throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+Range result=null;
+if(dataset instanceof DomainInfo){
+DomainInfo info=(DomainInfo)dataset;
+result=info.getDomainBounds(includeInterval);
+}else {
+result=iterateDomainBounds(dataset,includeInterval);
+}
+return result;
+}
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+assert (info!=(DomainInfo)dataset);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+assert (dataset!=null);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+assert (dataset!=null);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
+assert (dataset!=null);
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(info.equals("655")){
+System.out.println();
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+}
+if(result.equals("655")){
+System.out.println();
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if((Thread.currentThread().interrupted())){
+return null;
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
+}
+if((Thread.currentThread().interrupted())){
+return null;
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+if((Thread.currentThread().interrupted())){
+return null;
+}
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(dataset==null||"查看红包".equals(dataset)){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+DomainInfo info=(DomainInfo)dataset;
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
-DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(dataset==null||dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+assert (info!=null):"Appointments day is not allowed to be null!";
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+assert (dataset!=null):"Appointments day is not allowed to be null!";
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+assert (result!=null):"Appointments day is not allowed to be null!";
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
-if(dataset instanceof DomainInfo){
+if(dataset!=null&&dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(info==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+result=iterateDomainBounds(dataset,includeInterval);
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+result=iterateDomainBounds(dataset,includeInterval);
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+result=info.getDomainBounds(includeInterval);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+result=iterateDomainBounds(dataset,includeInterval);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+result=iterateDomainBounds(dataset,includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+result=iterateDomainBounds(dataset,includeInterval);
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
-result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
-if(dataset instanceof DomainInfo){
+boolean haveBreadCrumbs=false;
+if(dataset instanceof DomainInfo&&haveBreadCrumbs){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
-result=iterateDomainBounds(dataset,includeInterval);
 }
+result=iterateDomainBounds(dataset,includeInterval);
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
-}else {
 result=iterateDomainBounds(dataset,includeInterval);
+}else {
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+result=iterateDomainBounds(dataset,includeInterval);
 result=info.getDomainBounds(includeInterval);
 }else {
-result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
-if(dataset==null){
+if(dataset==null&&!dataset.equals("")){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
+Range t=result;
+result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
-return result;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+if(info==null){
+throw new IllegalStateException("User isn't registered! "+dataset);
+}
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
-if(dataset instanceof DomainInfo){
+boolean haveBreadCrumbs=false;
+if(dataset instanceof DomainInfo&&haveBreadCrumbs){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
+haveBreadCrumbs=true;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+result=info.getDomainBounds(includeInterval);
+result=iterateDomainBounds(dataset,includeInterval);
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
+result=info.getDomainBounds(includeInterval);
 result=info.getDomainBounds(includeInterval);
+result=iterateDomainBounds(dataset,includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
+long startTime=System.currentTimeMillis();
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
+long startTime=System.currentTimeMillis();
 result=iterateDomainBounds(dataset,includeInterval);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_4_buggy/source/org/jfree/data/general/DatasetUtilities.java[650,678]
------------Candidate---------------
 public static Range findDomainBounds(XYDataset dataset,boolean includeInterval){
+long startTime=System.currentTimeMillis();
 if(dataset==null){
 throw new IllegalArgumentException("Null 'dataset' argument.");
 }
 Range result=null;
 if(dataset instanceof DomainInfo){
 DomainInfo info=(DomainInfo)dataset;
 result=info.getDomainBounds(includeInterval);
 }else {
 result=iterateDomainBounds(dataset,includeInterval);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 return result;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testReplaceDataset, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2, org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset, org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.JFreeChartTests::testSerialization4, org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset, org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines, org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins, org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset, org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1, org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2, org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator, org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo, org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo]
---------START : 2019.09.04 AD at 10:22:57 CDT
---------TIME : 2019.09.04 AD at 15:23:00 CDT
--------------- END -----------------
Current failed test : org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2 | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2
Current failed test : org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1 | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1
Current failed test : org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2 | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2
Current failed test : org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins
Current failed test : org.jfree.chart.junit.JFreeChartTests::testSerialization4 | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.JFreeChartTests::testSerialization4
Current failed test : org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo
Current failed test : org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator
Current failed test : org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset
Current failed test : org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo
Current failed test : org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator
Current failed test : org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset
Current failed test : org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo
Current failed test : org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator
Current failed test : org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset
Current failed test : org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo
Current failed test : org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator
Current failed test : org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset
Current failed test : org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo
Current failed test : org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator
Current failed test : org.jfree.chart.junit.XYStepChartTests::testReplaceDataset | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.junit.XYStepChartTests::testReplaceDataset
Current failed test : org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines | 2019.09.04 AD at 15:23:00 CDT
Already fixed : org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines
Finish : chart-4 > patch : 5 | Start : Wed Sep 04 10:22:57 CDT 2019 | End : 2019.09.04 AD at 15:23:00 CDT
