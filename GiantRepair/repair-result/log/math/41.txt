Repair : math_41
Current failed test : org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted | 2019.09.06 AD at 00:38:20 CDT
Location : org.apache.commons.math.stat.descriptive.moment.Variance.evaluate:[370]#0.7071067811865475
Compute Candidate : 2019.09.06 AD at 00:39:45 CDT - 2019.09.06 AD at 00:45:18 CDT , PNumber : 11270, CandNumber : 38 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return evaluate(values,weights,0,values.length,1);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7488/pattern-ver1-serial/src.stratos.game.common.Element.java-setAsDestroyed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return evaluate(values,weights,0,weights.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/4812/pattern-ver1-serial/src.org.rascalmpl.library.experiments.Compiler.RVM.Interpreter.Thrown.java-printStackTrace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+this.evaluate();
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return evaluate(values,weights,0+1,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return evaluate(values,weights,0,values.length+1);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+int a=0;
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+String OUTSTRING="";
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+double length=8;
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(equals(values)){
+return 0d;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(equals(weights)){
+return 0d;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+int a=1;
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+String length="%#.&f";
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+boolean b=true;
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(values==null){
+return 0d;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(weights==null){
+return 0d;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if("index".equals(values)){
+return 0;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if("index".equals(weights)){
+return 0;
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+assert (values!=null);
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+assert (weights!=null);
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(values!=null){
+return evaluate(values,weights,0,values.length);
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(weights!=null){
+return evaluate(values,weights,0,values.length);
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return this.evaluate();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return 1+evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return 2;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5386/pattern-ver1-serial/game.furguardians.org.pandcorps.furguardians.Level.java-getMinFlat.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return evaluate(values,weights,0,values.length)+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return (double)evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return Integer.MAX_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return -evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return (double)(evaluate(values,weights,0,values.length));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return 4;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/1673/pattern-ver1-serial/src.stratos.game.actors.Power.java-costFor.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+assert (values!=null):"Appointments day is not allowed to be null!";
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
-return evaluate(values,weights,0,values.length);
+return 0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/2249/pattern-ver1-serial/app.src.main.java.rd.vehicle.MyGLSurfaceView.java-touchCenterY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:47:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(weights==null||values==null){
+throw new NullPointerException();
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[331,371]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights){
+if(values==null||weights==null){
+throw new NullPointerException();
+}
 return evaluate(values,weights,0,values.length);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 00:48:06 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.summary.Sum.evaluate:[159, 160, 161, 162, 163, 166]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 00:48:59 CDT - 2019.09.06 AD at 01:02:56 CDT , PNumber : 11431, CandNumber : 244 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+continue;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(test(values,weights,begin,length,false)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V13/6998/pattern-ver1-serial/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java-createCollectionItem.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-double sum=Double.NaN;
+ double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+return 0d;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+return 0d;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;sum<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;begin<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;length<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<=begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Collection;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,myUid;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,DEFAULT_TIMEOUT2;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i>begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_SERVICE_NODES;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_ZK_WAIT_RETRY_TIMES;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+break;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin-length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i--){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+sum;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+i;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+begin;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+return 0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+return 0;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,localLevel;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=sum;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=begin;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=length;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return value;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3251/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,new ArrayList<KeyBinding>()){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=1;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return begin;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return length;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;sum++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;begin++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;length++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,_afterComposeMethodCache;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mActions;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mRelationId;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return this.evaluate();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+this.evaluate();
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+this.evaluate();
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+this.evaluate();
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+sum++;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+begin++;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+length++;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+begin++;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+length++;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum++;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+sum++;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+i++;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+sum++;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+sum--;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+begin--;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+length--;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum--;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+sum--;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:09:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+i--;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+sum--;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+synchronized(this){
 sum+=values[i]*weights[i];
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+evaluate(values);
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+evaluate(weights);
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+evaluate(values);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+evaluate(weights);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=sum*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+(int)(length);i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,continentName,countryCode;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return (double)(sum);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:12:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+return 0d;
 }
+return 0d;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+while(true){
+
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+while(true){
+
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,userEmail;i<begin+length;i++,i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+synchronized(this){
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+i++;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=2;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6026/pattern-ver1-serial/advanced.mathfx.src.main.java.org.arakhne.afc.math.geometry.d2.dfx.Path2dfx.java-toDoubleArray.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,Charset.forName("UTF-8")){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:16:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(0.0!=0){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(values[i]*weights[i]!=0){
 sum+=values[i]*weights[i];
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return 1+sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+sum=sum;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+1+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+begin=begin;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+length=length;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+sum=1000;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=0.0*sum;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=0.0*begin;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return sum+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6999/pattern-ver1-serial/src.mop.MopData.java-str2Mop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+int a=0;
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+int a=0;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=0;
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+String OUTSTRING="";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+String OUTSTRING="";
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+String OUTSTRING="";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
+i++;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+int i=5;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;Math.abs(i++)){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(equals(values)){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(equals(weights)){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(equals(begin)){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(equals(length)){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(equals(begin)){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(equals(length)){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+int indexSelection=0;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+int indexSelection=0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Arrays;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i-1]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Arrays;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i-1];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:19:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=sum+0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=(0.0/1000);
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+int a=1;
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+int a=1;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=1;
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+boolean i=true;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+boolean b=true;
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+boolean b=true;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+boolean b=true;
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(values==null){
+continue;
+}
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(weights==null){
+continue;
+}
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return sum+sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return sum+begin;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
-return sum;
+return sum+length;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(values==null){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(weights==null){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if("index".equals(sum)){
+return 0;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if("index".equals(values)){
+return 0;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if("index".equals(weights)){
+return 0;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if("index".equals(begin)){
+return 0;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if("index".equals(length)){
+return 0;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if("index".equals(values)){
+return 0;
+}
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if("index".equals(weights)){
+return 0;
+}
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if("index".equals(values)){
+return 0;
+}
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if("index".equals(weights)){
+return 0;
+}
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+sum=0.0;
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
 for(int i=begin;i<begin+length;i++){
+sum=0.0;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+sum=0.0;
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum=0.0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum=0.0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
+sum=0.0;
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(begin<0){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(length<0){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(begin<0){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(length<0){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(test(values,weights,begin,length,true)){
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(values==null){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(weights==null){
+return 0d;
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (values!=null);
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (weights!=null);
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+assert (values!=null);
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+assert (weights!=null);
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (values!=null);
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (weights!=null);
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(values.equals(InputStream.class)){
+return begin;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(values.equals(InputStream.class)){
+return length;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(weights.equals(InputStream.class)){
+return begin;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(weights.equals(InputStream.class)){
+return length;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(values!=null){
+double sum=Double.NaN;
+if(test(values,weights,begin,length,true)){
+sum=0.0;
+for(int i=begin;i<begin+length;i++){
+sum+=values[i]*weights[i];
+}
+}
+return sum;
+}
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(weights!=null){
+double sum=Double.NaN;
+if(test(values,weights,begin,length,true)){
+sum=0.0;
+for(int i=begin;i<begin+length;i++){
+sum+=values[i]*weights[i];
+}
+}
+return sum;
+}
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(sum==0){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
+if(sum==0){
+return 0d;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+if(sum==0){
+return 0d;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+if(sum==0){
+return 0d;
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<(double)begin+(double)length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=(double)values[i]*(double)weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+assert (sum!=Double.NaN);
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+assert (values!=null);
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+assert (weights!=null);
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+assert (values!=null);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+assert (weights!=null);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+assert (values!=null);
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+assert (weights!=null);
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;Math.max(i++,0)){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]*sum;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]*begin;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]*length;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]*i;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=sum;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=begin;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=1;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (begin>=0):"Receive a negative tratment";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (length>=0):"Receive a negative tratment";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:23:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+assert (sum>=0):"Receive a negative tratment";
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (begin>=0):"Receive a negative tratment";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (length>=0):"Receive a negative tratment";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=sum+values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum=0.0;
 }
+sum=0.0;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+sum=0.0;
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+sum=0.0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=(values[i]*weights[i]/1000);
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (values!=null):"Appointments day is not allowed to be null!";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+assert (values!=null):"Appointments day is not allowed to be null!";
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (values!=null):"Appointments day is not allowed to be null!";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (begin!=0):"Receive a size tratment";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+assert (length!=0):"Receive a size tratment";
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+assert (sum!=0):"Receive a size tratment";
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (begin!=0):"Receive a size tratment";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (length!=0):"Receive a size tratment";
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]+values[2];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2324/pattern-ver1-serial/Java_Game.main.java-isGridFull.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(!test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(begin>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+if(sum<0){
+sum=0;
+}
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
+if(sum<0){
+sum=0;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+if(sum<0){
+sum=0;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:26:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+if(sum<0){
+sum=0;
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:26:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(true){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:26:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(test(values,weights,begin,length,true)==false){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
+if(sum<=0){
+sum=1;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(test(values,weights,begin,length,true)==true){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
-if(test(values,weights,begin,length,true)){
+if(test(values,weights,begin,length,true)&&value>=0.0){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/126/pattern-ver1-serial/src.main.java.org.la4j.matrix.sparse.CCSMatrix.java-set.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+sum+=values[i]*weights[i];
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
+sum=0.0*2;
 for(int i=begin;i<begin+length;i++){
-sum+=values[i]*weights[i];
+sum+=values[i]*weights[i]*2;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(values==null||weights==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(weights==null||values==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(begin<0){
+return 0;
+}
+if(begin>=length){
+return length-1;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(length<0){
+return 0;
+}
+if(length>=begin){
+return begin-1;
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(begin==3){
+System.out.println("debug");
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+if(begin==3){
+System.out.println("debug");
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(length==3){
+System.out.println("debug");
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+if(length==3){
+System.out.println("debug");
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
+if(sum==3){
+System.out.println("debug");
+}
+if(sum==3){
+System.out.println("debug");
+}
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+if(sum==3){
+System.out.println("debug");
+}
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
+if(sum==3){
+System.out.println("debug");
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(begin==3){
+System.out.println("debug");
+}
 sum+=values[i]*weights[i];
+if(begin==3){
+System.out.println("debug");
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(length==3){
+System.out.println("debug");
+}
 sum+=values[i]*weights[i];
+if(length==3){
+System.out.println("debug");
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+if(sum==3){
+System.out.println("debug");
+}
 sum+=values[i]*weights[i];
+if(sum==3){
+System.out.println("debug");
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
-sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+long startTime=System.currentTimeMillis();
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
+long startTime=System.currentTimeMillis();
 sum+=values[i]*weights[i];
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+values[28]=(byte)0x88;
+values[29]=0x58;
+values[30]=0x01;
+values[31]=0x00;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+values[28]=(byte)0x88;
+values[29]=0x58;
+values[30]=0x01;
+values[31]=0x00;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
+sum=Math.round(sum*100.0)/100.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
+sum=Math.round(sum*100.0)/100.0;
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
 }
 }
+sum=Math.round(sum*100.0)/100.0;
+sum=Math.round(sum*100.0)/100.0;
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java[130,167]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double sum=Double.NaN;
 if(test(values,weights,begin,length,true)){
+synchronized(this){
 sum=0.0;
 for(int i=begin;i<begin+length;i++){
 sum+=values[i]*weights[i];
+}
 }
 }
 return sum;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:29:08 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test:[222]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 01:29:57 CDT - 2019.09.06 AD at 01:34:27 CDT , PNumber : 11380, CandNumber : 38 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+return test(values,weights,begin,length,true);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V3/4718/pattern-ver1-serial/src.com.sleepfuriously.hpgworkout.GraphActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+int a=0;
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+String OUTSTRING="";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(equals(values)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(equals(weights)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(equals(begin)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(equals(length)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+int a=1;
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+boolean b=true;
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights==values){
+return true;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values==weights){
+return true;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(begin<0){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(length<0){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values.equals(weights)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values.equals(begin)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values.equals(length)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights.equals(values)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights.equals(begin)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights.equals(length)){
+return false;
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (values!=null);
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (weights!=null);
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values!=null){
+return test(values,weights,begin,length,false);
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights!=null){
+return test(values,weights,begin,length,false);
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (begin>=0):"Receive a negative tratment";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (length>=0):"Receive a negative tratment";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (values!=null):"Appointments day is not allowed to be null!";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (begin!=0):"Receive a size tratment";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected boolean test(double[] values,double[] weights,int begin,int length){
+assert (length!=0):"Receive a size tratment";
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
+import java.util.Collections;
+
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(begin>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+return (boolean)test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+return (boolean)(test(values,weights,begin,length,false));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(values==null||weights==null){
+throw new NullPointerException();
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
+if(weights==null||values==null){
+throw new NullPointerException();
+}
 return test(values,weights,begin,length,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[188,223]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length){
-return test(values,weights,begin,length,false);
+boolean taskList=test(values,weights,begin,length,false);
+return taskList;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/3828/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.AbstractBlockServiceApiImpl.java-changeVolumeVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 6, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 01:37:18 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test:[258, 262, 266, 267, 268, 271, 274, 277, 278, 282, 286]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 01:38:00 CDT - 2019.09.06 AD at 02:24:39 CDT , PNumber : 11433, CandNumber : 348 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+continue;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:24:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+continue;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7285/pattern-ver1-serial/src.game.Board.java-advanceGame.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:24:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
-boolean containsPositiveWeight=false;
+ boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>1){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>=0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+return false;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+return false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(weights!=null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;begin<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;length<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<=begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<=0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Collection;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,myUid;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,DEFAULT_TIMEOUT2;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]>0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i>begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_SERVICE_NODES;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_ZK_WAIT_RETRY_TIMES;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+break;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+return true;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+return true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length==values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:26:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+break;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1233/pattern-ver1-serial/crm.src.main.java.com.ogg.crm.ui.activity.CustomerPublicListActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin-length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i--){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+i;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+begin;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(values==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,values);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,weights);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,begin);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,length);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,allowEmpty);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],values);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],weights);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],begin);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],length);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],allowEmpty);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/6638/pattern-ver1-serial/src.main.java.edu.cmu.ml.rtw.generic.data.store.StorageMongo.java-createCollection.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]!=0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[1])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[1])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[1]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[1]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],values,i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],weights,i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],begin,i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],length,i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],allowEmpty,i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,values,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,begin,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,length,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,allowEmpty,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5132/pattern-ver1-serial/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,containsPositiveWeight,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1335/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-storageViewRemoveInitiators.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1335/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-storageViewRemoveInitiators.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
-throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO,containsPositiveWeight);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,localLevel;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=containsPositiveWeight;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=allowEmpty;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length<values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length>values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,new ArrayList<KeyBinding>()){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;begin++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;length++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]<0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1401/pattern-ver1-serial/XMLC.src.Learner.PLTFH.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,_afterComposeMethodCache;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,containsPositiveWeight);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4052/pattern-ver1-serial/01_brick.core.src.hu.bp.gdx.game.BrickScreen.java-BrickScreen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(begin!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
+i++;
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.List;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mActions;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
-boolean containsPositiveWeight=false;
+Boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(values.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/4812/pattern-ver1-serial/src.org.rascalmpl.library.experiments.Compiler.RVM.Interpreter.Thrown.java-printStackTrace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mRelationId;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(!!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+i++;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+i++;
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(true){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+i--;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/750/pattern-ver1-serial/src.pic.simulator.pins.Rb7_4.java-clearExternally.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN((int)(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite((int)(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+(int)(length);i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/960/pattern-ver1-serial/src.main.java.cz.zcu.kiv.eegdatabase.wui.ui.lists.components.ResearchGroupSelectForm.java-ResearchGroupSelectForm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,continentName,countryCode;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+}
+while(true){
+
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+while(true){
+
+}
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,userEmail;i<begin+length;i++,i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+i--;
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+synchronized(this){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+synchronized(this){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+synchronized(this){
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
+synchronized(this){
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
+}
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
+synchronized(this){
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+}
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
+synchronized(this){
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
+synchronized(this){
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+}
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+i++;
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+i++;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights!=null){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,Charset.forName("UTF-8")){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return test(values,begin+1,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return test(values,begin,length+1,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(weights.equals(null)){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+synchronized(this){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+synchronized(this){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+synchronized(this){
 throw new DimensionMismatchException(weights.length,values.length);
+}
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+synchronized(this){
 containsPositiveWeight=true;
+}
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
+synchronized(this){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+}
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+1+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(i==4){
+continue;
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(i==4){
+continue;
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(i==4){
+continue;
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(true){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(true){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(!containsPositiveWeight&&containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6999/pattern-ver1-serial/src.mop.MopData.java-str2Mop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>0.0/2){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+int a=0;
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+int a=0;
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+int a=0;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+int a=0;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+int a=0;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+int a=0;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+int a=0;
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
+int a=0;
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+int a=0;
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/271/pattern-ver1-serial/src.datamining.clustering.protoype.altopt.PolynomFCMNoiseClusteringAlgorithm.java-classifyNoise.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+containsPositiveWeight=true;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+containsPositiveWeight=false;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+String OUTSTRING="";
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+String OUTSTRING="";
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+String OUTSTRING="";
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+String OUTSTRING="";
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+String OUTSTRING="";
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+String OUTSTRING="";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+String OUTSTRING="";
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
+String OUTSTRING="";
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+String OUTSTRING="";
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
+i++;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
 if(Double.isNaN(weights[i])){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:39:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+i++;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(containsPositiveWeight&&(!containsPositiveWeight)){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/270/pattern-ver1-serial/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerExternal.java-processExtvar.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+int Double=5;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
-if(!containsPositiveWeight){
+if(!containsPositiveWeight||containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3215/pattern-ver1-serial/src.Output.java-writeAutoC.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(Double.isNaN(weights.length)){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(Math.abs(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(Math.abs(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;Math.abs(i++)){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+if(equals(weights)){
+return false;
+}
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(equals(values)){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(equals(weights)){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(equals(length)){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(equals(weights)){
+return false;
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(equals(weights)){
+return false;
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+if(equals(begin)){
+return false;
+}
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+if(equals(length)){
+return false;
+}
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+if(equals(weights)){
+return false;
+}
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+}
+if(equals(values)){
+return false;
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
+int indexSelection=0;
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+int indexSelection=0;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+int indexSelection=0;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Arrays;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[i-1])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Arrays;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[i-1])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Arrays;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i-1]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Arrays;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i-1]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(weights.equals("sounds")){
+continue;
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(weights.equals("sounds")){
+continue;
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(allowEmpty){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7120/pattern-ver1-serial/app.src.main.java.com.codephillip.intmain.fitracer.MainActivity.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+int a=1;
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+int a=1;
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+int a=1;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+int a=1;
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+int a=1;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+int a=1;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+int a=1;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
+int a=1;
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+int a=1;
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+String INPUT_ARRAY="%#.&f";
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+boolean NEGATIVE_ELEMENT_AT_INDEX=true;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+boolean Double=true;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
+boolean b=true;
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+boolean b=true;
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+boolean b=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+boolean b=true;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+boolean b=true;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+boolean b=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
+boolean b=true;
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+boolean b=true;
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+boolean b=true;
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(weights==null){
+continue;
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+if(weights==null){
+continue;
+}
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+if(weights==null){
+continue;
+}
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(weights==null){
+return false;
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(values==null){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(weights==null){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(values==weights){
+return true;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(weights==values){
+return true;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(!Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(!Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
+containsPositiveWeight=true;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+containsPositiveWeight=true;
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+containsPositiveWeight=true;
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+containsPositiveWeight=true;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+containsPositiveWeight=true;
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+containsPositiveWeight=true;
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(true){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(true){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(true){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[i])&&containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[i])&&containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[i])==false){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[i])==false){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
+containsPositiveWeight=true;
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(length<0){
+return false;
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||weights.length==Long.MIN_VALUE){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]==Long.MIN_VALUE){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+containsPositiveWeight=true;
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
+containsPositiveWeight=true;
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
+containsPositiveWeight=true;
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(weights.equals(values)){
+return false;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(values.equals(weights)){
+return false;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(values.equals(length)){
+return false;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(weights.equals(length)){
+return false;
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(weights.equals(containsPositiveWeight)){
+return false;
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(containsPositiveWeight&&(Double.isNaN(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/270/pattern-ver1-serial/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerExternal.java-processExtvar.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(containsPositiveWeight&&(Double.isInfinite(weights[i]))){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/270/pattern-ver1-serial/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerExternal.java-processExtvar.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(containsPositiveWeight&&(weights[i]<0)){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/270/pattern-ver1-serial/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerExternal.java-processExtvar.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (values!=null);
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (weights!=null);
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+assert (weights!=null);
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+assert (weights!=null);
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+assert (weights!=null);
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (values!=null);
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (weights!=null);
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[i])||containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3215/pattern-ver1-serial/src.Output.java-writeAutoC.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[i])||containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3215/pattern-ver1-serial/src.Output.java-writeAutoC.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3215/pattern-ver1-serial/src.Output.java-writeAutoC.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,schemaLocation);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,schemaLocation);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:47:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,schemaLocation);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
+if(Double.isNaN(weights[i])==true){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
-if(Double.isInfinite(weights[i])){
+if(Double.isInfinite(weights[i])==true){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+if(weights!=null){
+if(weights==null){
+throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(weights.length!=values.length){
+throw new DimensionMismatchException(weights.length,values.length);
+}
+boolean containsPositiveWeight=false;
+for(int i=begin;i<begin+length;i++){
+if(Double.isNaN(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(Double.isInfinite(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights[i]<0){
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(!containsPositiveWeight&&weights[i]>0.0){
+containsPositiveWeight=true;
+}
+}
+if(!containsPositiveWeight){
+throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+}
+return test(values,begin,length,allowEmpty);
+}
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(weights!=null){
+if(Double.isNaN(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(Double.isInfinite(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights[i]<0){
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(!containsPositiveWeight&&weights[i]>0.0){
+containsPositiveWeight=true;
+}
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+if(values!=null){
+if(weights==null){
+throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(weights.length!=values.length){
+throw new DimensionMismatchException(weights.length,values.length);
+}
+boolean containsPositiveWeight=false;
+for(int i=begin;i<begin+length;i++){
+if(Double.isNaN(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(Double.isInfinite(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights[i]<0){
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(!containsPositiveWeight&&weights[i]>0.0){
+containsPositiveWeight=true;
+}
+}
+if(!containsPositiveWeight){
+throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
+}
+return test(values,begin,length,allowEmpty);
+}
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+assert (containsPositiveWeight!=false);
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
+String noneMessageKey="members.speakers.none";
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i,noneMessageKey);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/3917/pattern-ver1-serial/app.controllers.Application.java-speakersOn.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+assert (weights!=null);
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
+assert (values!=null);
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
+assert (weights!=null);
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+int specialistID=0;
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,specialistID);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2699/pattern-ver1-serial/Meat-Loaf.src.com.cs301w01.meatload.authentication.Controllers.UserManager.java-authenticateUser.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
+int specialistID=0;
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],specialistID);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2699/pattern-ver1-serial/Meat-Loaf.src.com.cs301w01.meatload.authentication.Controllers.UserManager.java-authenticateUser.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
+int specialistID=0;
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i,specialistID);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2699/pattern-ver1-serial/Meat-Loaf.src.com.cs301w01.meatload.authentication.Controllers.UserManager.java-authenticateUser.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
+int specialistID=0;
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i],specialistID);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2699/pattern-ver1-serial/Meat-Loaf.src.com.cs301w01.meatload.authentication.Controllers.UserManager.java-authenticateUser.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+if(!containsPositiveWeight){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:48:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Collections;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(weights==null||"查看红包".equals(weights)){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||"查看红包".equals(weights.length)){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||"查看红包".equals(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||weights.length==3){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]==3){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+synchronized(this){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+synchronized(this){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length<0||weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return (boolean)test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||weights.length==0){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]==0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:49:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||weights.length>9){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:50:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]>9){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return allowEmpty;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:50:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length&&weights.length<4000000){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0&&weights[i]<4000000){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return containsPositiveWeight;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(weights==null||weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length&&weights.length!=9999){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0&&weights[i]!=9999){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(values.length>0&&weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(0>0&&weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (length>=0):"Receive a negative tratment";
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (begin>=0):"Receive a negative tratment";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (length>=0):"Receive a negative tratment";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
-return test(values,begin,length,allowEmpty);
+return (boolean)(test(values,begin,length,allowEmpty));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights!=null&&weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/3364/pattern-ver1-serial/components.bio-formats.src.loci.formats.in.LeicaReader.java-getOptimalTileHeight.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (values!=null):"Appointments day is not allowed to be null!";
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (values!=null):"Appointments day is not allowed to be null!";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+assert (length!=0):"Receive a size tratment";
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (begin!=0):"Receive a size tratment";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+assert (length!=0):"Receive a size tratment";
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
-if(weights.length!=values.length){
+if(weights.length!=values.length||weights.length=='"'){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
-if(weights[i]<0){
+if(weights[i]<0||weights[i]=='"'){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(!containsPositiveWeight){
+throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
-}
 }
-if(!containsPositiveWeight){
-throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
+}
+if(values.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
+}
+if(weights.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
-if(weights==null){
+if(weights==null&&!weights.equals("")){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>0.0||"查看红包".equals(!containsPositiveWeight)){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>0.0||weights[i]=='%'){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
-}
-if(weights.length!=values.length){
-throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights.length!=values.length){
+throw new DimensionMismatchException(weights.length,values.length);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(true){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
-}
-if(weights.length!=values.length){
-throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(weights.length!=values.length){
+throw new DimensionMismatchException(weights.length,values.length);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/573/pattern-ver1-serial/src.CollisionDetection.java-detection.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(containsPositiveWeight&&(!containsPositiveWeight&&weights[i]>0.0)){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/270/pattern-ver1-serial/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerExternal.java-processExtvar.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>0.0||containsPositiveWeight){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3215/pattern-ver1-serial/src.Output.java-writeAutoC.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!containsPositiveWeight&&weights[i]>0.0&&containsPositiveWeight){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/5215/pattern-ver1-serial/src.usask.hci.fastdraw.DrawView.java-changeSelection.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
-if(!containsPositiveWeight&&weights[i]>0.0){
+if(!!containsPositiveWeight){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/5657/pattern-ver1-serial/services.src.main.java.org.devgateway.geoph.services.geojson.ConverterUtil.java-merge.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(values==null||weights==null){
+throw new NullPointerException();
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+}
+if(weights==null||values==null){
+throw new NullPointerException();
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(begin==3){
+System.out.println("debug");
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(begin==3){
+System.out.println("debug");
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+if(length==3){
+System.out.println("debug");
+}
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
+}
+if(length==3){
+System.out.println("debug");
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
+}
+if(Double.isInfinite(weights[i])){
+throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(weights[i]<0){
+throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
+}
+if(!containsPositiveWeight&&weights[i]>0.0){
+containsPositiveWeight=true;
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
+long startTime=System.currentTimeMillis();
 containsPositiveWeight=true;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
+long startTime=System.currentTimeMillis();
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
+long startTime=System.currentTimeMillis();
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
 }
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
 }
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
 }
 if(!containsPositiveWeight&&weights[i]>0.0){
 containsPositiveWeight=true;
 }
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
-}
 if(Double.isInfinite(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
-}
-if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
-}
-if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 3, INS : 0, DEL : 26
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
-if(Double.isNaN(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
-}
-if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
-}
 if(weights[i]<0){
 throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
-}
-if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 3, INS : 0, DEL : 26
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java[225,287]
------------Candidate---------------
 protected boolean test(double[] values,double[] weights,int begin,int length,boolean allowEmpty){
 if(weights==null){
 throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
 }
 if(weights.length!=values.length){
 throw new DimensionMismatchException(weights.length,values.length);
 }
 boolean containsPositiveWeight=false;
 for(int i=begin;i<begin+length;i++){
 if(Double.isNaN(weights[i])){
 throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX,i);
-}
-if(Double.isInfinite(weights[i])){
-throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT,weights[i],i);
-}
-if(weights[i]<0){
-throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,i,weights[i]);
-}
-if(!containsPositiveWeight&&weights[i]>0.0){
-containsPositiveWeight=true;
 }
 }
 if(!containsPositiveWeight){
 throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
 }
 return test(values,begin,length,allowEmpty);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 31, UPD : 3, INS : 0, DEL : 28
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 02:53:53 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.moment.Mean.evaluate:[205, 206, 209, 210, 213, 214, 215, 217]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 02:54:37 CDT - 2019.09.06 AD at 03:19:25 CDT , PNumber : 11419, CandNumber : 329 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+continue;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
+ double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+ Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+return 0d;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;correction<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;begin<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;length<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<=begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+Sum sum=new Sum(null);
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Collection;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,myUid;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,DEFAULT_TIMEOUT2;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i>begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_SERVICE_NODES;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_ZK_WAIT_RETRY_TIMES;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+break;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin-length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw-(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i--){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+sumw;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+xbarw;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+correction;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+i;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+begin;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[1]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[1]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+return 0;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,localLevel;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
-return Double.NaN;
+return begin;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
-return Double.NaN;
+return length;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-sumw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:20:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-correction);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-i);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,new ArrayList<KeyBinding>()){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;correction++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:23:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;sumw++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:25:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;xbarw++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;begin++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;length++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+int correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/4536/pattern-ver1-serial/src.azdblab.executable.Main.java-runExperiment.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,_afterComposeMethodCache;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+float correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3173/pattern-ver1-serial/SubgEnumFramework.src.dbg.hadoop.subgenum.twintwig.House.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+i++;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mActions;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,mRelationId;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw*(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V22/254/pattern-ver1-serial/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.server.rpc.transform.ExperimentBuilderFactory.java-setupExperiment.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction*sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V22/254/pattern-ver1-serial/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.server.rpc.transform.ExperimentBuilderFactory.java-setupExperiment.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
+ final Sum sum=new Sum();
+ final double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+ final Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ final double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ final double sumw=sum.evaluate(weights,begin,length);
+ final double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
+ Sum sum=new Sum();
+ double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+ Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+ Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ double sumw=sum.evaluate(weights,begin,length);
+ double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
+ double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+this.evaluate();
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+this.evaluate();
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+this.evaluate();
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+correction++;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+sumw++;
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+xbarw++;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+begin++;
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+length++;
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+begin++;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+length++;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+correction++;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
+correction++;
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+correction--;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+sumw--;
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+xbarw--;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+begin--;
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+length--;
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+correction--;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
+correction--;
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+sum.clear();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+synchronized(this){
 correction+=weights[i]*(values[i]-xbarw);
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+evaluate(values);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+evaluate(weights);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+sum.clear();
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=correction*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+(int)(length);i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+begin++;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+length++;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double xbarw=sum.evaluate(values,weights,begin,length)/(int)sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/(int)sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,continentName,countryCode;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+while(true){
+
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,userEmail;i<begin+length;i++,i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/(double)sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2180/pattern-ver1-serial/src.TextGenerator.java-getUniOcc.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double xbarw=sum.evaluate(values,weights,begin,length)/(double)sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2180/pattern-ver1-serial/src.TextGenerator.java-getUniOcc.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+sum.clear();
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+i--;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+synchronized(this){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
+}
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+i++;
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,Charset.forName("UTF-8")){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin+1,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length+1)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double xbarw=sum.evaluate(values,weights,begin+1,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double xbarw=sum.evaluate(values,weights,begin,length+1)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+if(weights[i]*(values[i]-xbarw)!=0){
 correction+=weights[i]*(values[i]-xbarw);
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+correction/sumw*100;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ @SuppressWarnings("UnusedAssignment") Sum sum=new Sum();
+ @SuppressWarnings("UnusedAssignment") double sumw=sum.evaluate(weights,begin,length);
+ @SuppressWarnings("UnusedAssignment") double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
-double sumw=sum.evaluate(weights,begin,length);
+ @SuppressWarnings("UnusedAssignment") Sum sum=new Sum();
+ @SuppressWarnings("UnusedAssignment") double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ @SuppressWarnings("UnusedAssignment") double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
-Sum sum=new Sum();
+ @SuppressWarnings("UnusedAssignment") Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
+ @SuppressWarnings("UnusedAssignment") double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+ @SuppressWarnings("UnusedAssignment") double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+1+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+1+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+begin=begin;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+length=length;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+if(i==4){
+continue;
+}
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+sumw=1000;
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6999/pattern-ver1-serial/src.mop.MopData.java-str2Mop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+int a=0;
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+int a=0;
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=0;
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+correction/sumw*5;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+String OUTSTRING="";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+String OUTSTRING="";
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+String OUTSTRING="";
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
+i++;
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(int)((correction/sumw));
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+correction;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;Math.abs(i++)){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(int)(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(equals(values)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(equals(weights)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(equals(begin)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(equals(length)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(equals(begin)){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:35:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(equals(length)){
+return 0d;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(equals(weights)){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(equals(begin)){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(equals(length)){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(equals(values)){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+int indexSelection=0;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+int indexSelection=0;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Arrays;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i-1]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Arrays;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i-1]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+sumw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+begin;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+int a=1;
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+int a=1;
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=1;
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(double)(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2180/pattern-ver1-serial/src.TextGenerator.java-getUniOcc.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+xbarw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+boolean b=true;
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+boolean b=true;
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+boolean b=true;
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
-return Double.NaN;
+return Double.NaN+begin;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
-return Double.NaN;
+return Double.NaN+length;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*((values[i])+xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=(weights[i])+(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3721/pattern-ver1-serial/src.main.java.org.spongepowered.asm.mixin.injection.invoke.ModifyArgInjector.java-injectSingleArgHandler.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(sum==null){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sum==null){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction==0){
+return sumw;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sum==new Sum()){
+return sumw;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw==sum.evaluate(values,weights,begin,length)/sumw){
+return sumw;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction==0){
+return xbarw;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(sum==new Sum()){
+return xbarw;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(sumw==sum.evaluate(weights,begin,length)){
+return xbarw;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(weights==null){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(values==null){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(weights==null){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if("index".equals(values)){
+return 0;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if("index".equals(weights)){
+return 0;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if("index".equals(begin)){
+return 0;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if("index".equals(length)){
+return 0;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if("index".equals(sum)){
+return 0;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if("index".equals(sumw)){
+return 0;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:37:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if("index".equals(xbarw)){
+return 0;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if("index".equals(correction)){
+return 0;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*values[i]-xbarw*100;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(begin<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(length<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(begin<0){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(length<0){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(begin<0){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(length<0){
+return 0d;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(sum.equals("-1")){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(test(values,weights,begin,length)){
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+double correction=0;
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
-double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*sumw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*xbarw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*correction;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*i;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*values[i]-xbarw*5;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(values==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(weights==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (values!=null);
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (weights!=null);
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+assert (sum!=null);
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return begin;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return length;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(weights.equals(InputStream.class)){
+return begin;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(weights.equals(InputStream.class)){
+return length;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(weights!=null){
+Sum sum=new Sum();
+double sumw=sum.evaluate(weights,begin,length);
+double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double correction=0;
+for(int i=begin;i<begin+length;i++){
+correction+=weights[i]*(values[i]-xbarw);
+}
+return xbarw+(correction/sumw);
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(values!=null){
+if(test(values,weights,begin,length)){
+Sum sum=new Sum();
+double sumw=sum.evaluate(weights,begin,length);
+double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double correction=0;
+for(int i=begin;i<begin+length;i++){
+correction+=weights[i]*(values[i]-xbarw);
+}
+return xbarw+(correction/sumw);
+}
+return Double.NaN;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(weights!=null){
+if(test(values,weights,begin,length)){
+Sum sum=new Sum();
+double sumw=sum.evaluate(weights,begin,length);
+double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double correction=0;
+for(int i=begin;i<begin+length;i++){
+correction+=weights[i]*(values[i]-xbarw);
+}
+return xbarw+(correction/sumw);
+}
+return Double.NaN;
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(values!=null){
+Sum sum=new Sum();
+double sumw=sum.evaluate(weights,begin,length);
+double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double correction=0;
+for(int i=begin;i<begin+length;i++){
+correction+=weights[i]*(values[i]-xbarw);
+}
+return xbarw+(correction/sumw);
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(correction==0){
+return 0d;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+if(correction==0){
+return 0d;
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<(double)begin+(double)length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*((double)values[i]-(double)xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+((double)correction/(double)sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+assert (correction!=0);
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+assert (sum!=new Sum());
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+assert (sumw!=sum.evaluate(weights,begin,length));
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+assert (xbarw!=sum.evaluate(values,weights,begin,length)/sumw);
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+assert (values!=null);
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+assert (weights!=null);
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+assert (values!=null);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(sum.equals("655")){
+System.out.println();
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sum.equals("655")){
+System.out.println();
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;Math.max(i++,0)){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return -1;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return this.evaluate();
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return (correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/3256/pattern-ver1-serial/src.main.java.com.rizomm.misys.model.PictureLink.java-getLink.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return 1;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(!test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return 1+xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return Integer.MIN_VALUE;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:41:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return 2;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5386/pattern-ver1-serial/game.furguardians.org.pandcorps.furguardians.Level.java-getMinFlat.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(true){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:41:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==false){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/sumw)+0.0;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return Integer.MAX_VALUE;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return begin;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return length;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return sumw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return correction;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==true){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (begin>=0):"Receive a negative tratment";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (length>=0):"Receive a negative tratment";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+assert (sumw>=0):"Receive a negative tratment";
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+assert (xbarw>=0):"Receive a negative tratment";
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+assert (correction>=0):"Receive a negative tratment";
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+assert (begin>=0):"Receive a negative tratment";
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return (double)(xbarw+(correction/sumw));
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return (double)xbarw+(double)(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return 4;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/1673/pattern-ver1-serial/src.stratos.game.actors.Power.java-costFor.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:42:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (values!=null):"Appointments day is not allowed to be null!";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+assert (sum!=null):"Appointments day is not allowed to be null!";
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+assert (values!=null):"Appointments day is not allowed to be null!";
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (begin!=0):"Receive a size tratment";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+assert (length!=0):"Receive a size tratment";
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+assert (sumw!=0):"Receive a size tratment";
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+assert (xbarw!=0):"Receive a size tratment";
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+assert (correction!=0):"Receive a size tratment";
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/sumw)+begin;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/sumw)+length;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/sumw)+sumw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return xbarw+(correction/sumw)+xbarw;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
-return xbarw+(correction/sumw);
+return 0.0;
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/2249/pattern-ver1-serial/app.src.main.java.rd.vehicle.MyGLSurfaceView.java-touchCenterY.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(sum==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sum==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(begin>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(begin>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:43:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(correction<0){
+correction=0;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+if(correction<0){
+correction=0;
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(sumw<=0){
+sumw=1;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<=0){
+sumw=1;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(xbarw<=0){
+xbarw=1;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(xbarw<=0){
+xbarw=1;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(sumw>xbarw){
+sumw=xbarw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(xbarw>sumw){
+xbarw=sumw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(correction>xbarw){
+correction=xbarw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(xbarw>correction){
+xbarw=correction;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(correction>sumw){
+correction=sumw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
+}
+if(sumw>correction){
+sumw=correction;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=(double)weights[i]*(double)(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=1;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=-1;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=0;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=xbarw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*sumw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*begin;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*length;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*xbarw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*correction;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)*i;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=sumw;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=begin;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=length;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=correction;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=i;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i];
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=2;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=0.0;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=correction+weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=weights[i]*(values[i]-xbarw)+weights[2];
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2324/pattern-ver1-serial/Java_Game.main.java-isGridFull.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=10;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
-double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+double xbarw=(double)sum.evaluate(values,weights,begin,length)/(double)sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(values==null||weights==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(weights==null||values==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=-1;
 }
+correction++;
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 7, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
-correction+=weights[i]*(values[i]-xbarw);
+correction+=-1;
+correction++;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 7, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(begin<0){
+return 0;
+}
+if(begin>=length){
+return length-1;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(length<0){
+return 0;
+}
+if(length>=begin){
+return begin-1;
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(begin==3){
+System.out.println("debug");
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(begin==3){
+System.out.println("debug");
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+if(length==3){
+System.out.println("debug");
+}
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(length==3){
+System.out.println("debug");
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw==3){
+System.out.println("debug");
+}
+if(sumw==3){
+System.out.println("debug");
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw==3){
+System.out.println("debug");
+}
+if(xbarw==3){
+System.out.println("debug");
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction==3){
+System.out.println("debug");
+}
+if(correction==3){
+System.out.println("debug");
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+if(begin==3){
+System.out.println("debug");
+}
 correction+=weights[i]*(values[i]-xbarw);
+if(begin==3){
+System.out.println("debug");
+}
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<0){
+sumw--;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw<0){
+xbarw--;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<0){
+sumw--;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction<0){
+correction--;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
+if(sum==null||weights==null||values==null){
+return 0d;
+}
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(sumw==0&&xbarw==0&&sum.equals("")){
+return 0d;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/1175/pattern-ver1-serial/src.com.almalence.opencam.PluginManager.java-addTimestamp.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw<3){
+xbarw=3;
+}
 double correction=0;
+if(correction<3){
+correction=3;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<3){
+sumw=3;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction<3){
+correction=3;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<0){
+sumw=0;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw<0){
+xbarw=0;
+}
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
+if(sumw<0){
+sumw=0;
+}
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
+if(correction<0){
+correction=0;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+if(xbarw<0){
+xbarw=0;
+}
 double correction=0;
+if(correction<0){
+correction=0;
+}
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+long startTime=System.currentTimeMillis();
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
+long startTime=System.currentTimeMillis();
 correction+=weights[i]*(values[i]-xbarw);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
+values[28]=(byte)0x88;
+values[29]=0x58;
+values[30]=0x01;
+values[31]=0x00;
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 return xbarw+(correction/sumw);
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:47:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java[174,220]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 if(test(values,weights,begin,length)){
+synchronized(this){
 Sum sum=new Sum();
 double sumw=sum.evaluate(weights,begin,length);
 double xbarw=sum.evaluate(values,weights,begin,length)/sumw;
 double correction=0;
 for(int i=begin;i<begin+length;i++){
 correction+=weights[i]*(values[i]-xbarw);
 }
 return xbarw+(correction/sumw);
+}
 }
 return Double.NaN;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 03:47:03 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.moment.Variance.evaluate:[316, 318, 319, 320, 322, 323, 324, 325, 328]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 03:47:45 CDT - 2019.09.06 AD at 04:11:44 CDT , PNumber : 11439, CandNumber : 372 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:11:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+ double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:11:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
+ Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:11:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==0){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>=1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:12:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+return 0d;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:13:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+return 0d;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:14:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:14:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length<=1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(var==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:15:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(begin==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:15:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length<1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length>=1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:17:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length!=1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:17:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length!=1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+return 0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+return 0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:18:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+return 0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+return 0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=var;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=begin;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:20:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=length;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:20:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length>1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:20:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>3){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return begin;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return length;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:21:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/2067/pattern-ver1-serial/src.io.openems.impl.controller.debuglog.Ess.java-Ess.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
+toString();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:21:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return 100;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+clear();
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return this.evaluate();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+ final Mean mean=new Mean();
+ final double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+ double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
+ Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+ Mean mean=new Mean();
+ double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+clear();
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
+clear();
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+clear();
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
+clear();
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+clear();
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+clear();
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+clear();
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
+clear();
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+clear();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+clear();
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+clear();
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+clear();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+clear();
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+this.evaluate();
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+this.evaluate();
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+this.evaluate();
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+this.evaluate();
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+this.evaluate();
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
 clear();
+if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+clear();
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+clear();
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:23:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+clear();
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Iterator;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==-1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+clear();
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+var++;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+begin++;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+m++;
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+begin++;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+length++;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var++;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var++;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+var++;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+var++;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var++;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+var--;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+begin--;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+length--;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+var--;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var--;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var--;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+var--;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var--;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+clear();
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+clear();
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+mean.clear();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length!=0){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+synchronized(this){
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+evaluate(values);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+evaluate(weights);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+evaluate(values);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+evaluate(weights);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+synchronized(this){
 clear();
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
+clear();
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return (double)(var);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length<0){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+return 0d;
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+while(true){
+
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+while(true){
+
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+while(true){
+
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+while(true){
+
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length>0){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+synchronized(this){
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+synchronized(this){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+synchronized(this){
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin+1,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length+1)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+double m=mean.evaluate(values,weights,begin+1,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+double m=mean.evaluate(values,weights,begin,length+1);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+synchronized(this){
 var=0.0;
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+if(evaluate(values,weights,m,begin,length)!=0){
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+if(0.0!=0){
 var=0.0;
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
+ @SuppressWarnings("UnusedAssignment") Mean mean=new Mean();
+ @SuppressWarnings("UnusedAssignment") double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return 1+var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+begin=begin;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+length=length;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length+var==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length+begin==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length+length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+var=1000;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(true){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(true){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=0.0*var;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return var+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1/2){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+int a=0;
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+int a=0;
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+int a=0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+int a=0;
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=0;
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+String OUTSTRING="";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+String OUTSTRING="";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+String OUTSTRING="";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+String OUTSTRING="";
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+String OUTSTRING="";
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+int mean=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+int m=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(Double.isNaN(length)){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(Double.isNaN(length)){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(equals(values)){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(equals(weights)){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(equals(begin)){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(equals(length)){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(equals(values)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(equals(weights)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(equals(begin)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(equals(length)){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(equals(values)){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(equals(weights)){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+int indexSelection=0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+int indexSelection=0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+int indexSelection=0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+int indexSelection=0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=var+0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+int a=1;
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+int a=1;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+int a=1;
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+int a=1;
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+int a=1;
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+boolean m=true;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+boolean mean=true;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+boolean b=true;
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+boolean b=true;
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+boolean b=true;
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+boolean b=true;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+boolean b=true;
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return var+var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return var+begin;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
-return var;
+return var+length;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1-1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+if(mean==null){
+return 0d;
+}
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+if(mean==new Mean()){
+return m;
+}
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(values==null){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(weights==null){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if("index".equals(var)){
+return 0;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(values)){
+return 0;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(weights)){
+return 0;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(begin)){
+return 0;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(length)){
+return 0;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(values)){
+return 0;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(weights)){
+return 0;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(begin)){
+return 0;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(length)){
+return 0;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+if("index".equals(values)){
+return 0;
+}
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+var=0.0;
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+var=0.0;
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+var=0.0;
 clear();
 if(length==1){
-var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var=0.0;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var=0.0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+var=0.0;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
+var=0.0;
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
+var=0.0;
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(begin<0){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(length<0){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(begin<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(length<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(begin<0){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(length<0){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+if(mean.equals("-1")){
+return 0d;
+}
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||length==Long.MIN_VALUE){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==Long.MIN_VALUE){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+var=0.0;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
 var=0.0;
+if(length==1){
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+var=0.0;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+Mean mean=new Mean();
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(values==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(weights==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(values==null){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(weights==null){
+return 0d;
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+try{
 clear();
+}finally{
+var=0.0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:43:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (values!=null);
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (weights!=null);
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (values!=null);
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (weights!=null);
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return begin;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return length;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(weights.equals(InputStream.class)){
+return begin;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(weights.equals(InputStream.class)){
+return length;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(values!=null){
+double var=Double.NaN;
+if(test(values,weights,begin,length)){
+clear();
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
+}
+return var;
+}
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
+if(weights!=null){
+double var=Double.NaN;
+if(test(values,weights,begin,length)){
+clear();
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
+}
+return var;
+}
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values!=null){
+clear();
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(weights!=null){
+clear();
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(values!=null){
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(weights!=null){
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(var==0){
+return 0d;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+if(var==0){
+return 0d;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+if(var==0){
+return 0d;
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
+if(var==0){
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+if(var==0){
+return 0d;
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+assert (var!=Double.NaN);
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+assert (mean!=new Mean());
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+assert (m!=mean.evaluate(values,weights,begin,length));
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+Mean mean=new Mean();
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (values!=null);
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+assert (values!=null);
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+assert (weights!=null);
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+assert (values!=null);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+assert (weights!=null);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+assert (values!=null);
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||"查看红包".equals(length)){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||"查看红包".equals(length)){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||length==3){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==3){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(!test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length<0||length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length<0||length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(true){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==false){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||length==0){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==0){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||length>9){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length>9){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1&&length<4000000){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1&&length<4000000){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==true){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1&&length!=9999){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1&&length!=9999){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(1>0&&length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(1>0&&length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (begin>=0):"Receive a negative tratment";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (length>=0):"Receive a negative tratment";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (begin>=0):"Receive a negative tratment";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (length>=0):"Receive a negative tratment";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+assert (var>=0):"Receive a negative tratment";
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (begin>=0):"Receive a negative tratment";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (length>=0):"Receive a negative tratment";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var=0.0;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var=0.0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+var=0.0;
 var=evaluate(values,weights,m,begin,length);
 }
+var=0.0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var=0.0;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var=0.0;
 }
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+var=0.0;
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:51:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+var=0.0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
+var=0.0;
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (values!=null):"Appointments day is not allowed to be null!";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (weights!=null):"Appointments day is not allowed to be null!";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (values!=null):"Appointments day is not allowed to be null!";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (weights!=null):"Appointments day is not allowed to be null!";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (values!=null):"Appointments day is not allowed to be null!";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (begin!=0):"Receive a size tratment";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (length!=0):"Receive a size tratment";
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (begin!=0):"Receive a size tratment";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+assert (length!=0):"Receive a size tratment";
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+assert (var!=0):"Receive a size tratment";
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (begin!=0):"Receive a size tratment";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+assert (length!=0):"Receive a size tratment";
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==1||length=='"'){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length=='"'){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(begin>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=2;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=3;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(var<0){
+var=0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+if(var<0){
+var=0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+if(var<0){
+var=0;
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
+if(var<0){
+var=0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
+if(var<0){
+var=0;
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=begin;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=length;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=m;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(var!=0.0){
 clear();
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=(evaluate(values,weights,m,begin,length)+m)%m;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=(evaluate(values,weights,m,begin,length)+begin)%begin;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=(evaluate(values,weights,m,begin,length)+length)%length;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
+if(m<=0){
+m=1;
+}
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)*var;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)*begin;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)*length;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)*m;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=var;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 04:59:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=10;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:00:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=100;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=1;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=var+evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=(evaluate(values,weights,m,begin,length)/1000);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)+1;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=4;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3908/pattern-ver1-serial/Solar.SolarSysm.src.com.callumcarmicheal.solar.objects.Earth.java-init.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=5;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
-clear();
 if(length==1){
+clear();
+if(test(values,weights,begin,length)){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5972/pattern-ver1-serial/core.src.com.ru.tgra.assignment2.CannonGame.java-touchUp.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 8, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+var=0.0*2;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
+var=evaluate(values,weights,m,begin,length)*2;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:04:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(weights==null||values==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
+if(values==null||weights==null){
+throw new NullPointerException();
+}
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(begin<0){
+return 0;
+}
+if(begin>=length){
+return length-1;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length<0){
+return 0;
+}
+if(length>=begin){
+return begin-1;
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(begin==3){
+System.out.println("debug");
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(begin==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length==3){
+System.out.println("debug");
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(length==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+if(var==3){
+System.out.println("debug");
+}
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+if(var==3){
+System.out.println("debug");
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(begin==3){
+System.out.println("debug");
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+if(begin==3){
+System.out.println("debug");
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(length==3){
+System.out.println("debug");
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+if(length==3){
+System.out.println("debug");
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+if(var==3){
+System.out.println("debug");
+}
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
+if(var==3){
+System.out.println("debug");
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(var==3){
+System.out.println("debug");
+}
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(var==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+if(begin==3){
+System.out.println("debug");
+}
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+if(begin==3){
+System.out.println("debug");
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+long startTime=System.currentTimeMillis();
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
+long startTime=System.currentTimeMillis();
 var=0.0;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
+long startTime=System.currentTimeMillis();
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+long startTime=System.currentTimeMillis();
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+values[28]=(byte)0x88;
+values[29]=0x58;
+values[30]=0x01;
+values[31]=0x00;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+var=Math.round(var*100.0)/100.0;
+var=Math.round(var*100.0)/100.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
+var=Math.round(var*100.0)/100.0;
+var=Math.round(var*100.0)/100.0;
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:05:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+synchronized(this){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
-var=0.0;
-}else {
-if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}else {
+if(length>1){
+var=0.0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+}else {
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
-}
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
-if(length==1){
-var=0.0;
-}else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
+clear();
+if(length==1){
+var=0.0;
+}else {
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+synchronized(this){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
-if(length==1){
-var=0.0;
-}else {
-if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
-}
-}
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
-if(length==1){
 var=0.0;
-}else {
-if(length>1){
-Mean mean=new Mean();
-double m=mean.evaluate(values,weights,begin,length);
-var=evaluate(values,weights,m,begin,length);
-}
-}
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+}else {
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
-clear();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
+if(test(values,weights,begin,length)){
+clear();
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 0, INS : 1, DEL : 28
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:07:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-clear();
-if(length==1){
-var=0.0;
-}else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
-}
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/3408/pattern-ver1-serial/COMP90015ChatClient.src.tiredale.client.ChatClientSocketThread.java-IdentityChangeResponse.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:08:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+Mean mean=new Mean();
+double m=mean.evaluate(values,weights,begin,length);
+var=evaluate(values,weights,m,begin,length);
+}
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 0, INS : 1, DEL : 28
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:08:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[271,329]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 clear();
-if(length==1){
+if(length==','||length==']'||length=='}'){
 var=0.0;
+}else {
+if(length==1){
 }else {
 if(length>1){
 Mean mean=new Mean();
 double m=mean.evaluate(values,weights,begin,length);
 var=evaluate(values,weights,m,begin,length);
+}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 33, UPD : 33, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:08:06 CDT
--------------- END -----------------
Location : org.apache.commons.math.stat.descriptive.moment.Variance.evaluate:[504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 524, 525, 531]#0.5773502691896258
Compute Candidate : 2019.09.06 AD at 05:08:48 CDT - 2019.09.06 AD at 05:38:41 CDT , PNumber : 7315, CandNumber : 407 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+continue;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+continue;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
+ double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
-double dev=0.0;
+ double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
-double accum2=0.0;
+ double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==0){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>=1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+return 0d;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+return 0d;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+return 0d;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+return 0d;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+return 0d;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;dev<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;accum<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;accum2<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;var<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;dev<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;sumWts<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;accum2<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<=begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<=weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.util.Collection;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,myUid;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.util.Collection;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0,myUid;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,DEFAULT_TIMEOUT2;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=((accum)-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1686/pattern-ver1-serial/app.src.main.java.com.yatrashare.fragments.PublishRideFragment.java-getPrice.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i>begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i>weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_SERVICE_NODES;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0,MAX_SERVICE_NODES;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,MAX_ZK_WAIT_RETRY_TIMES;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+break;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+break;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(var-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(var-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(begin-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(length-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(mean-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(begin-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(length-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(accum-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length<=1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin-length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i--){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<weights.length;i--){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+var;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+accum;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+dev;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+accum2;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+i;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(var==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(begin==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(mean==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length<1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length>=1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length!=1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[1]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[1]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[1]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[1];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length!=1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+return 0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+return 0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+return 0;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+return 0;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+return 0;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
-if(isBiasCorrected){
+if(true){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+}
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
 }
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
+return 0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+return 0;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-2;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(sumWts-2);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin,localLevel;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0,localLevel;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/(mean-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/3851/pattern-ver1-serial/src.main.java.com.sandagerdi.Operation.java-substraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[0]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[0]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[0]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[0];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return Integer.MAX_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[2]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[2]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[2]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[2];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return begin;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return length;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return mean;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length>1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-var;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-accum;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-dev;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-accum2;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-i;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(1.0-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2827/pattern-ver1-serial/common.math.CustomMath.java-nsqrt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,new ArrayList<KeyBinding>()){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<weights.length;i++,new ArrayList<KeyBinding>()){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>3){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5511/pattern-ver1-serial/core.src.com.trumandeyoung.sprouts.GameRenderer.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[i]*(var*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(dev*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=(accum-(dev*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return -1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return this.evaluate();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=1;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=-1;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
+ double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
-double dev=0.0;
+ double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
-double accum2=0.0;
+ double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
+ double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
-double dev=0.0;
+ double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=0;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+this.evaluate();
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+this.evaluate();
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
+this.evaluate();
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+this.evaluate();
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+this.evaluate();
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
+this.evaluate();
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
+this.evaluate();
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
+this.evaluate();
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+this.evaluate();
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=2;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=3;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.util.Iterator;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==-1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
+sumWts++;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+var++;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+sumWts++;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+sumWts++;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
-if(isBiasCorrected){
+if(!isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+var++;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+var++;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<=begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<=weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
+sumWts--;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+var--;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+var--;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=10;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=i;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6985/pattern-ver1-serial/src.org.broad.igv.track.DataTrack.java-getInViewScores.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+return 0d;
 }
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+return 0d;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+return 0d;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+return 0d;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+return 0d;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+return 0d;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+return 0d;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=100;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length!=0){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+evaluate(values);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+evaluate(weights);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+evaluate(values);
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+evaluate(weights);
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=0.0;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=var*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=var*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=dev*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+(int)(length);i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+return 0d;
 }
+return 0d;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;i++,Charset.forName("UTF-8")){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<weights.length;i++,Charset.forName("UTF-8")){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin+1,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length+1)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+synchronized(this){
 var=0.0;
+}
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+if(0.0!=0){
 var=0.0;
+}
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[i]*dev*dev*100;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/sumWts-1.0*100;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-((accum2*accum2)/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1686/pattern-ver1-serial/app.src.main.java.com.yatrashare.fragments.PublishRideFragment.java-getPrice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
-double dev=0.0;
+ @SuppressWarnings("UnusedAssignment") double accum=0.0;
+ @SuppressWarnings("UnusedAssignment") double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
+ @SuppressWarnings("UnusedAssignment") double accum=0.0;
 double dev=0.0;
-double accum2=0.0;
+ @SuppressWarnings("UnusedAssignment") double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
-double dev=0.0;
-double accum2=0.0;
+ @SuppressWarnings("UnusedAssignment") double dev=0.0;
+ @SuppressWarnings("UnusedAssignment") double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
+ @SuppressWarnings("UnusedAssignment") double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ @SuppressWarnings("UnusedAssignment") double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
-double var=Double.NaN;
+ @SuppressWarnings("UnusedAssignment") double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
-double dev=0.0;
+ @SuppressWarnings("UnusedAssignment") double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
+ @SuppressWarnings("UnusedAssignment") double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return 1+var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+1+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+begin=begin;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+length=length;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length+var==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length+begin==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length+length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length+mean==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
+if(i==4){
+continue;
+}
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(true){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(true){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/2;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*var;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*accum;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*mean;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*dev;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*begin;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*length;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
-return var;
+return var+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6999/pattern-ver1-serial/src.mop.MopData.java-str2Mop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1/2){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+int a=0;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+int a=0;
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+int a=0;
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+int a=0;
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
+int a=0;
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
+int a=0;
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
+int a=0;
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
+int a=0;
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+int a=0;
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[i]*dev*dev*5;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts))/sumWts-1.0*5;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(1.0/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2827/pattern-ver1-serial/common.math.CustomMath.java-nsqrt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+String OUTSTRING="";
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+String OUTSTRING="";
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+String OUTSTRING="";
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+String OUTSTRING="";
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+String OUTSTRING="";
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
+String OUTSTRING="";
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
+String OUTSTRING="";
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
+String OUTSTRING="";
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
+String OUTSTRING="";
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
+for(int i=begin;i<begin+length;){
+i++;
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
-for(int i=0;i<weights.length;i++){
+for(int i=0;i<weights.length;){
+i++;
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+int accum=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+int dev=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+int accum2=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+int i=5;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(dev/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(Double.isNaN(length)){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(Double.isNaN(length)){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=1;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=1;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=-1;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=-1;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(weights==null){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=0;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=0;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(values)){
+return 0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(weights)){
+return 0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(mean)){
+return 0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(begin)){
+return 0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if("index".equals(length)){
+return 0;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(values)){
+return 0;
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(weights)){
+return 0;
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(mean)){
+return 0;
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(begin)){
+return 0;
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+if("index".equals(length)){
+return 0;
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=2;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=2;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=3;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=3;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+var=0.0;
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+var=0.0;
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+var=0.0;
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
 var=0.0;
+if(length==1){
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[i]*dev*var;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[i]*dev*mean;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+if(begin<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+if(length<0){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length<0){
+return 0d;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=var;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=begin;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=length;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=accum;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=dev;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1||length==Long.MIN_VALUE){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==Long.MIN_VALUE){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+var=0.0;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
-var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+double accum=0.0;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
-double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+double accum2=0.0;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
-double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+double sumWts=0;
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
-double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
 double accum=0.0;
+if(length>1){
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=10;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=10;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[i];
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i];
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=100;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=100;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+if(values==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
+if(weights==null){
+return 0d;
+}
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (values!=null);
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+assert (weights!=null);
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+assert (values!=null);
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+assert (weights!=null);
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=0.0;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=0.0;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return mean;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return begin;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(values.equals(InputStream.class)){
+return length;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+if(values!=null){
+double var=Double.NaN;
+if(test(values,weights,begin,length)){
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+}
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}
+return var;
+}
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+if(weights!=null){
+double var=Double.NaN;
+if(test(values,weights,begin,length)){
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+}
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}
+return var;
+}
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(weights!=null){
+if(length==1){
+var=0.0;
+}else {
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+}
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1||"查看红包".equals(length)){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||"查看红包".equals(length)){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1||length==3){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==3){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(!test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-accum2*accum2/sumWts*100)/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length<0||length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length<0||length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(true){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=(values[i]-mean+mean)%mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=(weights[i]*dev+dev)%dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==false){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-2)/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1||length==0){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length==0){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-var)/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-accum2*accum2/sumWts*5)/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1||length>9){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1||length>9){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
-public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
+public double evaluate(double[] values,double[] weights,double pIssued,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=pIssued;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
+if(length==1&&length<4000000){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
+if(length>1&&length<4000000){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
-if(test(values,weights,begin,length)){
+if(test(values,weights,begin,length)==true){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+}
+if(dev<=0){
+return -1;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
+if(dev<=0){
+return -1;
+}
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/2367/pattern-ver1-serial/ikrs.io.ReadLimitInputStream.java-read.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=1;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=-1;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=0;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=2;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=3;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2/accum2*sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/1691/pattern-ver1-serial/src.lib.AutotileGenerator.java-Autotile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=(accum-(accum2/accum2*sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/1691/pattern-ver1-serial/src.lib.AutotileGenerator.java-Autotile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
+if(var<0){
+var=0;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
+if(var<0){
+var=0;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+if(var<0){
+var=0;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
+}
+if(dev<0){
+dev=0;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=10;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[i];
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=100;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=0.0;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=accum-(accum2*accum2/sumWts)*100/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=((accum-(accum2*accum2/sumWts)))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1686/pattern-ver1-serial/app.src.main.java.com.yatrashare.fragments.PublishRideFragment.java-getPrice.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
+dev=values[i]-mean;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=accum-(accum2*accum2/sumWts)*5/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=1.0/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2827/pattern-ver1-serial/common.math.CustomMath.java-nsqrt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[i]*dev*2;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*2;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-mean*2;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*2;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=dev/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
+dev=values[i]-mean*2;
 accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum2+=weights[i]*dev*2;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=accum;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=accum2;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
+accum+=weights[i]*(dev*dev)*2;
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
+sumWts+=weights[i]*2;
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length<0){
+return 0;
+}
+if(length>=begin){
+return begin-1;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(begin<0){
+return 0;
+}
+if(begin>=length){
+return length-1;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(mean<0){
+return 0;
+}
+if(mean>=begin){
+return begin-1;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(mean<0){
+return 0;
+}
+if(mean>=length){
+return length-1;
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(begin==3){
+System.out.println("debug");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
+if(begin==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(length==3){
+System.out.println("debug");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
+if(length==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+if(begin==3){
+System.out.println("debug");
+}
 var=0.0;
+if(begin==3){
+System.out.println("debug");
+}
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+if(length==3){
+System.out.println("debug");
+}
 var=0.0;
+if(length==3){
+System.out.println("debug");
+}
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(mean==3){
+System.out.println("debug");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
+if(mean==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
+if(var==3){
+System.out.println("debug");
+}
 var=0.0;
+if(var==3){
+System.out.println("debug");
+}
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+if(var==3){
+System.out.println("debug");
+}
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
+if(var==3){
+System.out.println("debug");
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts)/2.0)/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
+var=(accum-(accum2*accum2/sumWts)/2.0)/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/1517/pattern-ver1-serial/library.src.com.jakewharton.android.viewpagerindicator.TitlePageIndicator.java-onDraw.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
+accum+=weights[i]*(dev*dev)*2;
+accum2+=weights[i]*dev*2;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=1;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=-1;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=0;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=2;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=3;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=accum;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=accum2;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=sumWts;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=var;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=10;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=(accum-(accum2*accum2/sumWts));
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4922/pattern-ver1-serial/src.de._13ducks.cor.game.PlayersBuilding.java-renderGroundEffect.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=100;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+var=0.0;
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
+synchronized(this){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+values[28]=(byte)0x88;
+values[29]=0x58;
+values[30]=0x01;
+values[31]=0x00;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+weights[28]=(byte)0x88;
+weights[29]=0x58;
+weights[30]=0x01;
+weights[31]=0x00;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+var=Math.round(var*100.0)/100.0;
+var=Math.round(var*100.0)/100.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6081/pattern-ver1-serial/src.Calc.java-calcBasicsOfSurvivability.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
+synchronized(this){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 79, UPD : 79, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
-}else {
-if(length>1){
-double accum=0.0;
-double dev=0.0;
-double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-double sumWts=0;
-for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/1889/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.PartitionReplicaStateChecker.java-isReplicaInSyncState.pattern
MATCHLEVEL : ALL
ALL : 82, UPD : 0, INS : 0, DEL : 82
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}else {
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
 }
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
 }
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 82, UPD : 82, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
-if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/5655/pattern-ver1-serial/src.main.java.com.orientechnologies.lucene.OLuceneIndexType.java-createField.pattern
MATCHLEVEL : ALL
ALL : 82, UPD : 82, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
-var=0.0;
-}else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
+if(length==1){
+var=0.0;
+}else {
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 83, UPD : 0, INS : 1, DEL : 82
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
 }
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
 }
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 83, UPD : 0, INS : 1, DEL : 82
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
+}
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 83, UPD : 0, INS : 1, DEL : 82
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
+synchronized(this){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
 }
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 88, UPD : 88, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
 var=0.0;
-}else {
-if(length>1){
-double accum=0.0;
-double dev=0.0;
-double accum2=0.0;
-for(int i=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-double sumWts=0;
-for(int i=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
-}else {
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
-}
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 88, UPD : 88, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
+}
+}else {
+if(length>1){
+double accum=0.0;
+double dev=0.0;
+double accum2=0.0;
+for(int i=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+}
+double sumWts=0;
+for(int i=0;i<weights.length;i++){
+sumWts+=weights[i];
 }
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}else {
+var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7797/pattern-ver1-serial/src.com.felhr.usbserial.UsbSerialDevice.java-createUsbSerialDevice.pattern
MATCHLEVEL : ALL
ALL : 88, UPD : 88, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
 if(length==1){
 var=0.0;
 }else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
 }
 }
 }
+}else {
+var=0.0;
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 88, UPD : 88, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java[456,532]
------------Candidate---------------
 public double evaluate(double[] values,double[] weights,double mean,int begin,int length){
 double var=Double.NaN;
 if(test(values,weights,begin,length)){
-if(length==1){
-var=0.0;
-}else {
 if(length>1){
 double accum=0.0;
 double dev=0.0;
 double accum2=0.0;
 for(int i=begin;i<begin+length;i++){
 dev=values[i]-mean;
 accum+=weights[i]*(dev*dev);
 accum2+=weights[i]*dev;
 }
 double sumWts=0;
 for(int i=0;i<weights.length;i++){
 sumWts+=weights[i];
 }
 if(isBiasCorrected){
 var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
 }else {
 var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
 }
 }
 }
 return var;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/3408/pattern-ver1-serial/COMP90015ChatClient.src.tiredale.client.ChatClientSocketThread.java-IdentityChangeResponse.pattern
MATCHLEVEL : ALL
ALL : 88, UPD : 88, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.stat.descriptive.moment.VarianceTest::testEvaluateArraySegmentWeighted]
---------START : 2019.09.06 AD at 00:38:20 CDT
---------TIME : 2019.09.06 AD at 05:38:41 CDT
--------------- END -----------------
Finish : math-41 > patch : 0 | Start : Fri Sep 06 00:38:20 CDT 2019 | End : 2019.09.06 AD at 05:38:41 CDT
