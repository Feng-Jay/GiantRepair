Repair : math_39
Current failed test : org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep | 2019.09.06 AD at 08:11:10 CDT
Location : org.apache.commons.math.util.FastMath.nextAfter:[3252, 3254, 3256, 3258, 3259, 3264, 3265, 3266, 3267]#1.0
Compute Candidate : 2019.09.06 AD at 08:12:35 CDT - 2019.09.06 AD at 09:01:49 CDT , PNumber : 11421, CandNumber : 401 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
- final long sign=bits&0x8000000000000000L;
+ long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)&&Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:01:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign==0)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (d<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (direction<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((d<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<=0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<=d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<=0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/1247/pattern-ver1-serial/src.connect4.HumanPlayer.java-drop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction>0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction>d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d<=0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign<=0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d<=direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(direction==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(direction==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(d==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(direction==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d>=0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d>=direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign>=0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d!=0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d!=direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 }
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
 }
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+if(d==direction){
+return direction;
+}else {
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
+}
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return d;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return d;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return direction;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d>0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign>0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d>direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-bits));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-sign));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ final Long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3545/pattern-ver1-serial/nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowFileQueue.java-summarize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
- final long sign=bits&0x8000000000000000L;
+ final Long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3545/pattern-ver1-serial/nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowFileQueue.java-summarize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4284/pattern-ver1-serial/object-filter.src.main.java.org.infinispan.objectfilter.impl.util.Interval.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-2:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign!=0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/4543/pattern-ver1-serial/launcher.src.main.java.com.benny.openlauncher.widget.GridAppDrawer.java-readyForDrag.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+3));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Long.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/5523/pattern-ver1-serial/core.store.src.main.java.mil.nga.giat.geowave.core.store.index.numeric.NumericLessThanOrEqualToConstraint.java-NumericLessThanOrEqualToConstraint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Long.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/5523/pattern-ver1-serial/core.store.src.main.java.mil.nga.giat.geowave.core.store.index.numeric.NumericLessThanOrEqualToConstraint.java-NumericLessThanOrEqualToConstraint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+bits));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+sign));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:0;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1552/pattern-ver1-serial/src.main.java.net.sourceforge.fenixedu.domain.Tutorship.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)|1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<bits)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<sign)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<direction)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3192/pattern-ver1-serial/src.main.java.matcha.UsefulTickData.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d>0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4131/pattern-ver1-serial/src.net.sourceforge.cruisecontrol.sampleproject.connectfour.PlayingStand.java~-areFourConnected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
- final long sign=bits&0x8000000000000000L;
+ long bits=Double.doubleToLongBits(d);
+ long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Iterator;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==-1){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Iterator;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==-1){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Iterator;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign==-1)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+d++;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+direction++;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+d++;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+direction++;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+d++;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+direction++;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+d--;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+direction--;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+d--;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+direction--;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+d--;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+direction--;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<=0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<=d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<=0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<=0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<=0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<=d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d!=0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN((int)(d))||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN((int)(direction))){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:05:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite((int)(d))){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ final long bits=Double.doubleToLongBits((int)(d));
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return Double.NaN;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<1)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<1)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+(int)(1)));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return direction;
 }else {
 if(d==direction){
-return direction;
+return Double.NaN;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (d<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((d<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/4567/pattern-ver1-serial/18-Map.LunchList.src.apt.tutorial.RestaurantHelper.java-onUpgrade.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+if(d==direction){
+return direction;
+}else {
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
+}
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6158/pattern-ver1-serial/src.main.java.com.vaguehope.onosendai.model.TweetListAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+-1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+log(d);
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+log(direction);
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+log(d);
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+log(direction);
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+log(direction);
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+log(d);
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+log(d);
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+log(direction);
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+log(direction);
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+log(d);
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(direction==d){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((d<direction)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:-1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/262/pattern-ver1-serial/src.main.java.com.github.ddth.djs.bo.log.TaskLogBo.java-getDurationPickup.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d<0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d<0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d>0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(Double.isNaN(d)||Double.isNaN(direction)){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
+}else {
+if(d==direction){
+return direction;
+}else {
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
+}
+}
+ final long bits=Double.doubleToLongBits(d);
+ final long sign=bits&0x8000000000000000L;
+if((direction<d)^(sign==0L)){
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+}else {
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+}
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4540/pattern-ver1-serial/core-cube.src.main.java.org.apache.kylin.gridtable.GTScanRangePlanner.java-compare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (direction<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<direction)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1475/pattern-ver1-serial/src.butterseal.src.edu.smcm.gamedev.butterseal.BSInterface.java-isTouchingInside.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.NEGATIVE_INFINITY:Double.NEGATIVE_INFINITY;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/6254/pattern-ver1-serial/src.main.java.org.vaadin.addon.leaflet.shared.Bounds.java-Bounds.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(!Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(bits&0x7fffffffffffffffL*100+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+d=d;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+direction=d;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+direction=direction;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+direction=direction;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d+d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:07:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d+direction==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d+d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d+direction==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(true){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(true){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(true){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite(d)==false){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||!Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
+int a=0;
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+int a=0;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+int a=0;
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+int a=0;
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+int a=0;
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+int a=0;
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
+int a=0;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
+int a=0;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+int a=0;
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+int a=0;
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(bits&0x7fffffffffffffffL*5+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return ((direction<0))?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(bits+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/2928/pattern-ver1-serial/src.offensive.Communicator.JsonMessage.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+String OUTSTRING="";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
+String OUTSTRING="";
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+String OUTSTRING="";
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+String OUTSTRING="";
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+String OUTSTRING="";
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+String OUTSTRING="";
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+String OUTSTRING="";
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+String OUTSTRING="";
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
+String OUTSTRING="";
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
+String OUTSTRING="";
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+int Double=5;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+int MIN_VALUE=5;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(Double.isNaN(d)){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(Double.isNaN(d)){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite(d)==true){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:09:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return Double.longBitsToDouble(sign|(bits-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(Math.abs(d))||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(Math.abs(direction))){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite(Math.abs(d))){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ final long bits=Double.doubleToLongBits(Math.abs(d));
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+double MIN_VALUE=8;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+double MAX_VALUE=8;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
+double NaN=8;
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+int indexSelection=0;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+int indexSelection=0;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+int indexSelection=0;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+int indexSelection=0;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?0:1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/922/pattern-ver1-serial/PluginCore.src.main.java.com.plugin.core.manager.PluginCallbackImpl.java-onRemove.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
+int a=1;
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+int a=1;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+int a=1;
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+int a=1;
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+int a=1;
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:10:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+int a=1;
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+int a=1;
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
+int a=1;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
+int a=1;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+int a=1;
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+String MIN_VALUE="%#.&f";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+boolean MIN_VALUE=true;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+boolean MAX_VALUE=true;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+boolean Double=true;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
+boolean b=true;
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+boolean b=true;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+boolean b=true;
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+boolean b=true;
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+boolean b=true;
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+boolean b=true;
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+boolean b=true;
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
+boolean b=true;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
+boolean b=true;
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+boolean b=true;
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return direction+d;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return direction+direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return Double.NaN+d;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return Double.NaN+direction;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return direction<0?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/676/pattern-ver1-serial/ProjektGrupp2.src.main.java.edu.gu.maze.model.HighScore.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return d<0?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/676/pattern-ver1-serial/ProjektGrupp2.src.main.java.edu.gu.maze.model.HighScore.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?1:-Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2694/pattern-ver1-serial/deltaspike.core.api.src.main.java.org.apache.deltaspike.core.api.config.ConfigResolver.java-compare.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction-1){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0-1){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if((direction<d)^(sign==0L-1)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2784/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TopicV1Factory.java-syncDBEntityWithRESTEntitySecondPass.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+if(bits==Double.doubleToLongBits(d)){
+return sign;
+}
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if("index".equals(d)){
+return 0;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if("index".equals(direction)){
+return 0;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if("index".equals(d)){
+return 0;
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if("index".equals(direction)){
+return 0;
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+if("index".equals(direction)){
+return 0;
+}
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+if("index".equals(d)){
+return 0;
+}
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if("index".equals(d)){
+return 0;
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:12:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if("index".equals(direction)){
+return 0;
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+if("index".equals(direction)){
+return 0;
+}
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if("index".equals(d)){
+return 0;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d<0){
+return 0d;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(d<0){
+return 0d;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(direction<0){
+return 0d;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(direction<0){
+return 0d;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||d==Long.MIN_VALUE){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||d==Long.MIN_VALUE){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<-1)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<-1)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
+assert (bits!=Double.doubleToLongBits(d));
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(Math.max(d,0))||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(Math.max(direction,0))){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite(Math.max(d,0))){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ final long bits=Double.doubleToLongBits(Math.max(d,0));
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||"查看红包".equals(d)){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||"查看红包".equals(d)){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||d==3){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:13:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||d==3){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(bits&0x7fffffffffffffffL)+1*100);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d<0||d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d<0||d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||d==0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return Double.longBitsToDouble(sign|bits);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return Double.longBitsToDouble(sign|sign);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(bits&0x7fffffffffffffffL)+1*5);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2098/pattern-ver1-serial/src.com.wecanteven.Models.Stats.HealthStat.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||d>9){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||d>9){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0&&d<4000000){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction&&d<4000000){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(int)(((bits&0x7fffffffffffffffL)+1)));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:14:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+Double pcb=new Double(d);
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(pcb.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+Double pcb=new Double(d);
+if(pcb.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+Double pcb=new Double(direction);
+if(Double.isNaN(d)||pcb.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+Double pcb=new Double(d);
+if(pcb.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
+Double pcb=new Double(d);
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(pcb.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double nextAfter(double d,double direction){
+Double pcb=new Double(d);
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
+ final long bits=pcb.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|-1);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction&&d!=9999){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0&&d!=9999){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(direction>0&&d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(0>0&&d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+assert (d>=0):"Receive a negative tratment";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+assert (direction>=0):"Receive a negative tratment";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+assert (direction>=0):"Receive a negative tratment";
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+assert (d>=0):"Receive a negative tratment";
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+assert (direction>=0):"Receive a negative tratment";
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+assert (d>=0):"Receive a negative tratment";
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+assert (d>=0):"Receive a negative tratment";
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+assert (direction>=0):"Receive a negative tratment";
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:15:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+assert (direction>=0):"Receive a negative tratment";
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+assert (d>=0):"Receive a negative tratment";
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|bits);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|3);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|sign);
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
- final long sign=bits&0x8000000000000000L;
+ final long sign=(bits>>>1|bits)&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6957/pattern-ver1-serial/src.operations.pieces.BlackPieces.java-getKingMoves.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|(((bits>>>1|bits)&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6957/pattern-ver1-serial/src.operations.pieces.BlackPieces.java-getKingMoves.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble((sign>>>1|sign)|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6957/pattern-ver1-serial/src.operations.pieces.BlackPieces.java-getKingMoves.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+assert (d!=0):"Receive a size tratment";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+assert (direction!=0):"Receive a size tratment";
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
+assert (direction!=0):"Receive a size tratment";
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+assert (d!=0):"Receive a size tratment";
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+assert (direction!=0):"Receive a size tratment";
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
+assert (d!=0):"Receive a size tratment";
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+assert (d!=0):"Receive a size tratment";
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+assert (direction!=0):"Receive a size tratment";
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:16:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
+assert (direction!=0):"Receive a size tratment";
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static double nextAfter(double d,double direction){
+assert (d!=0):"Receive a size tratment";
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction||d=='"'){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0||d=='"'){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return -1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return 1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if(d>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(direction>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return Integer.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE+0.0;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return Integer.MAX_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return d;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return direction;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return d;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return direction;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return -Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4573/pattern-ver1-serial/collinear.BruteCollinearPoints.java-segments.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==0){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==direction){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5972/pattern-ver1-serial/core.src.com.ru.tgra.assignment2.CannonGame.java-touchUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(d==0){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(Double.isInfinite(d)){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5972/pattern-ver1-serial/core.src.com.ru.tgra.assignment2.CannonGame.java-touchUp.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (double)((direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE);
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return 100;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE+d;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE+direction;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE+d;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE+direction;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return 0.0;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/2249/pattern-ver1-serial/app.src.main.java.rd.vehicle.MyGLSurfaceView.java-touchCenterY.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(direction)||"查看红包".equals(Double.isNaN(d))){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(!Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
-if((direction<d)^(sign==0L)){
+if(!(direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(true){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(direction)==false){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(direction)&&false){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/947/pattern-ver1-serial/advinst-server.src.main.java.jetbrains.buildServer.advinst.server.AdvinstRunTypePropertiesProcessor.java-process.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble((int)(sign|((bits&0x7fffffffffffffffL)+1)));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/6852/pattern-ver1-serial/vipr-portal.portal.app.controllers.tenant.TenantSelector.java-renderTenantOptionsForVcenters.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return Double.NaN;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return Double.NaN;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return direction;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)||Double.isNaN(direction)==true){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6158/pattern-ver1-serial/src.main.java.com.vaguehope.onosendai.model.TweetListAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(Math.abs(sign|((bits&0x7fffffffffffffffL)+1)));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return direction;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/5275/pattern-ver1-serial/src.wgutask4.LookupDialog.java-getStudentTypeEntered.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return +1;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7529/pattern-ver1-serial/BigNumber.src.BigNumber.java-compare.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
-return direction;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return +1;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7529/pattern-ver1-serial/BigNumber.src.BigNumber.java-compare.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4540/pattern-ver1-serial/core-cube.src.main.java.org.apache.kylin.gridtable.GTScanRangePlanner.java-compare.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(!Double.isNaN(d)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/5657/pattern-ver1-serial/services.src.main.java.org.devgateway.geoph.services.geojson.ConverterUtil.java-merge.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(Math.max(sign|((bits&0x7fffffffffffffffL)+1),0));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return -1;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2385/pattern-ver1-serial/dionysos.src.gr.teilar.dionysos.Dionysos.java-checkHtml.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return 1;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/377/pattern-ver1-serial/src.kreuzungsSimulation.EventComparator.java-compare.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return 1+Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Integer.MIN_VALUE;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1))+0.0;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return (double)Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Integer.MAX_VALUE;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4988/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.Resources.java-getMemory.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return d;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return direction;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/4912/pattern-ver1-serial/polly.src.polly.configuration.ConfigurationImpl.java-readInt.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return -Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/501/pattern-ver1-serial/src.com.nutrons.recyclerush.OI.java-getOperatorJoystickY.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return bits;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7225/pattern-ver1-serial/src.net.jforum.SessionFacade.java-getUserSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return bits;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7225/pattern-ver1-serial/src.net.jforum.SessionFacade.java-getUserSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return sign;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7225/pattern-ver1-serial/src.net.jforum.SessionFacade.java-getUserSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return sign;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7225/pattern-ver1-serial/src.net.jforum.SessionFacade.java-getUserSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return d;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+return direction;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return (double)(Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1)));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return 100;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5846/pattern-ver1-serial/src.com.yy2039.answermachine.MessagesView.java-getKeybackIsCancel.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1))+d;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1))+direction;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5747/pattern-ver1-serial/src.main.java.MySimpleClass.java-add.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
+return 0.0;
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/2249/pattern-ver1-serial/app.src.main.java.rd.vehicle.MyGLSurfaceView.java-touchCenterY.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
-}else {
-if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(direction<0){
+return 0;
+}
+if(direction>=d){
+return d-1;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d<0){
+return 0;
+}
+if(d>=direction){
+return direction-1;
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if(direction<0){
+return 0;
+}
+if(direction>=d){
+return d-1;
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if(d<0){
+return 0;
+}
+if(d>=direction){
+return direction-1;
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(direction<0){
+return 0;
+}
+if(direction>=d){
+return d-1;
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(d<0){
+return 0;
+}
+if(d>=direction){
+return direction-1;
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(direction<0){
+return 0;
+}
+if(direction>=d){
+return d-1;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(d<0){
+return 0;
+}
+if(d>=direction){
+return direction-1;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(d<0){
+return 0;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
+if(d>=bits){
+return bits-1;
+}
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(direction<0){
+return 0;
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
+if(direction>=bits){
+return bits-1;
+}
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(d==3){
+System.out.println("debug");
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
 }
+if(d==3){
+System.out.println("debug");
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+if(direction==3){
+System.out.println("debug");
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
 }
+if(direction==3){
+System.out.println("debug");
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if(d==3){
+System.out.println("debug");
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
+if(d==3){
+System.out.println("debug");
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+if(direction==3){
+System.out.println("debug");
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
+if(direction==3){
+System.out.println("debug");
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(d==3){
+System.out.println("debug");
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+if(d==3){
+System.out.println("debug");
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(direction==3){
+System.out.println("debug");
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+if(direction==3){
+System.out.println("debug");
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:21:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
-if(Double.isInfinite(d)){
+if(Double.isInfinite(d)&&Double.isNaN(direction)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
+if(d==0&&Double.isNaN(direction)){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
+if(Double.isNaN(d)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==direction&&Double.isNaN(direction)){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6158/pattern-ver1-serial/src.main.java.com.vaguehope.onosendai.model.TweetListAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/5275/pattern-ver1-serial/src.wgutask4.LookupDialog.java-getStudentTypeEntered.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }else {
 if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+return +1;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7529/pattern-ver1-serial/BigNumber.src.BigNumber.java-compare.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
+}else {
+if(d==direction){
+return direction;
 }else {
+if(Double.isInfinite(d)){
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
+}
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4540/pattern-ver1-serial/core-cube.src.main.java.org.apache.kylin.gridtable.GTScanRangePlanner.java-compare.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+long startTime=System.currentTimeMillis();
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
+long startTime=System.currentTimeMillis();
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+long startTime=System.currentTimeMillis();
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+long startTime=System.currentTimeMillis();
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
-}else {
-if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
-if(d==0){
-return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
-}
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/2603/pattern-ver1-serial/Android.BarcodeScanner.2.0.0.src.com.phonegap.plugins.barcodescanner.BarcodeScanner.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
-}else {
-if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7797/pattern-ver1-serial/src.com.felhr.usbserial.UsbSerialDevice.java-createUsbSerialDevice.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
-return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
-}else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
+}else {
+return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6158/pattern-ver1-serial/src.main.java.com.vaguehope.onosendai.model.TweetListAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
-}else {
-if(d==direction){
-return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+if(d==direction){
+return direction;
+}else {
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
-}else {
-if(d==direction){
-return direction;
-}else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
+if(Double.isNaN(d)||Double.isNaN(direction)){
+return Double.NaN;
+}else {
+if(d==direction){
+return direction;
+}else {
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:22:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 }
 }
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
+}else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
+}else {
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
 if(d==direction){
 return direction;
+}else {
+if(Double.isInfinite(d)){
+return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
+if(d==0){
+return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 0, INS : 1, DEL : 18
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==','||d==']'||d=='}'){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
-}else {
-if(d==direction){
-return direction;
-}else {
-if(Double.isInfinite(d)){
-return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
-}
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7797/pattern-ver1-serial/src.com.felhr.usbserial.UsbSerialDevice.java-createUsbSerialDevice.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
-}else {
-if(d==direction){
-return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7797/pattern-ver1-serial/src.com.felhr.usbserial.UsbSerialDevice.java-createUsbSerialDevice.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
-if(Double.isNaN(d)||Double.isNaN(direction)){
-return Double.NaN;
-}else {
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
 }
 }
 }
+if(Double.isNaN(d)||Double.isNaN(direction)){
+return Double.NaN;
+}else {
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+}
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
+}
+ final long bits=Double.doubleToLongBits(d);
+ final long sign=bits&0x8000000000000000L;
 if(d==direction){
 return direction;
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
-}
 }
 }
 }
- final long bits=Double.doubleToLongBits(d);
- final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3218,3272]
------------Candidate---------------
 public static double nextAfter(double d,double direction){
 if(Double.isNaN(d)||Double.isNaN(direction)){
 return Double.NaN;
 }else {
-if(d==direction){
+if(d==','||d==']'||d=='}'){
 return direction;
+}else {
+if(d==direction){
 }else {
 if(Double.isInfinite(d)){
 return (d<0)?-Double.MAX_VALUE:Double.MAX_VALUE;
 }else {
 if(d==0){
 return (direction<0)?-Double.MIN_VALUE:Double.MIN_VALUE;
+}
 }
 }
 }
 }
  final long bits=Double.doubleToLongBits(d);
  final long sign=bits&0x8000000000000000L;
 if((direction<d)^(sign==0L)){
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)+1));
 }else {
 return Double.longBitsToDouble(sign|((bits&0x7fffffffffffffffL)-1));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5747/pattern-ver1-serial/java.src.advent.twelve.JsonParser.java-parseJson.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 09:23:30 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator:[244, 246, 248, 249, 250, 273]#0.18569533817705186
Compute Candidate : 2019.09.06 AD at 09:24:13 CDT - 2019.09.06 AD at 10:03:09 CDT , PNumber : 11412, CandNumber : 0 
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doCopy:[278]#0.18569533817705186
Compute Candidate : 2019.09.06 AD at 10:03:55 CDT - 2019.09.06 AD at 10:07:27 CDT , PNumber : 11280, CandNumber : 9 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
-return new DormandPrince853StepInterpolator(this);
+return this;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
-return new DormandPrince853StepInterpolator(this);
+return this.doCopy();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
-return new DormandPrince853StepInterpolator(this);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
+this.doCopy();
 return new DormandPrince853StepInterpolator(this);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
-return new DormandPrince853StepInterpolator(this);
+return (StepInterpolator)(new DormandPrince853StepInterpolator(this));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
+int a=0;
 return new DormandPrince853StepInterpolator(this);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
+String OUTSTRING="";
 return new DormandPrince853StepInterpolator(this);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
+int a=1;
 return new DormandPrince853StepInterpolator(this);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[275,279]
------------Candidate---------------
 @Override protected StepInterpolator doCopy(){
+boolean b=true;
 return new DormandPrince853StepInterpolator(this);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:07:55 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize:[288, 290, 292, 293, 294, 297, 298, 299, 302, 304]#0.18569533817705186
Compute Candidate : 2019.09.06 AD at 10:08:34 CDT - 2019.09.06 AD at 10:32:30 CDT , PNumber : 11395, CandNumber : 0 
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.storeTime:[309, 310, 311]#0.18569533817705186
Compute Candidate : 2019.09.06 AD at 10:33:15 CDT - 2019.09.06 AD at 10:37:02 CDT , PNumber : 11412, CandNumber : 41 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
-vectorsInitialized=false;
+vectorsInitialized=true;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6486/pattern-ver1-serial/src.noughtsandcrosses.VictoryConditions.java-gameWon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+t++;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+t++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+t--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+t--;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+synchronized(this){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+storeTime(t);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
-super.storeTime(t);
+super.storeTime((int)(t));
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+synchronized(this){
 super.storeTime(t);
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if(equals(t)){
+return ;
+}
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if("index".equals(t)){
+return ;
+}
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+if("&null".equals(t)){
+return ;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+t=t;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if(t<0){
+return ;
+}
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+int a=0;
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+vectorsInitialized=false;
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/2616/pattern-ver1-serial/app.src.main.java.com.example.koba.reklappclient.YoutubeFragment.java-disappearPush.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 2, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+String OUTSTRING="";
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
-super.storeTime(t);
+try{
 vectorsInitialized=false;
+}finally{
+super.storeTime(t);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+int vectorsInitialized=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
-super.storeTime(t);
+super.storeTime(Math.abs(t));
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+int a=1;
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+boolean vectorsInitialized=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+boolean b=true;
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
-super.storeTime(t);
+if(!vectorsInitialized){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/918/pattern-ver1-serial/src.com.isrtk.nihtfti.MainService.java-onStartCommand.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+try{
 super.storeTime(t);
+}finally{
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
-super.storeTime(t);
+super.storeTime(Math.max(t,0));
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/6142/pattern-ver1-serial/main.java.rowautomation.renders.RenderBlockCrossing.java-renderWorldBlock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+assert (t>=0):"Receive a negative tratment";
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override public void storeTime(double t){
 super.storeTime(t);
 vectorsInitialized=false;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public void storeTime(double t){
+assert (t!=0):"Receive a size tratment";
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if(t>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 super.storeTime(t);
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if(vectorsInitialized!=false){
 super.storeTime(t);
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+if(t==3){
+System.out.println("debug");
+}
 super.storeTime(t);
 vectorsInitialized=false;
+if(t==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+for(int i=0;i<24;i++){
 super.storeTime(t);
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
 super.storeTime(t);
+for(int i=0;i<24;i++){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[306,311]
------------Candidate---------------
 @Override public void storeTime(double t){
+long startTime=System.currentTimeMillis();
 super.storeTime(t);
 vectorsInitialized=false;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 10:40:58 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize:[407, 409]#0.18569533817705186
Compute Candidate : 2019.09.06 AD at 10:41:35 CDT - 2019.09.06 AD at 12:24:40 CDT , PNumber : 11410, CandNumber : 160 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:24:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+this.doFinalize();
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+this.doFinalize();
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(integrator){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(integrator){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(integrator){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(this){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(this){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+synchronized(this){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(yTmp)){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(pT)){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(yTmp)){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(pT)){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(yTmp)){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(equals(pT)){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+synchronized(this){
 if(currentState==null){
 return ;
+}
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp==null){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:25:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
-if(currentState==null){
+if(currentState.equals(null)){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+synchronized(this){
 return ;
+}
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if("index".equals(yTmp)){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if("index".equals(pT)){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("TIME")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if("&null".equals(yTmp)){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if("&null".equals(pT)){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("DATETIME")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
-if(currentState==null){
+if(true){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT<0){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT<0){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT<0){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("-1")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+int a=0;
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:26:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+int a=0;
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if(yTmp.equals(pT)){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+String OUTSTRING="";
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+String OUTSTRING="";
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+int length=5;
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+int indexSelection=0;
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("setPackMode")){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("setPackMode")){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("setPackMode")){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+int a=1;
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+int a=1;
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean currentState=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_01=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_06=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_07=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_08=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_09=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_10=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_11=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+boolean K14_12=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
+boolean b=true;
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+boolean b=true;
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals(null)){
+return ;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals(null)){
+return ;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals(null)){
+return ;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+assert (yTmp!=null);
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+assert (pT!=getGlobalPreviousTime());
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+assert (yTmp!=new double[currentState.length]);
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("655")){
+System.out.println();
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("655")){
+System.out.println();
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(yTmp.equals("655")){
+System.out.println();
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
-if(currentState==null){
+if(currentState==null||"查看红包".equals(currentState)){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(!integrator.getName().contains(" family")){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1762/pattern-ver1-serial/src.mainWindow.PokeList.java-evoQuell.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(!integrator.getName().contains(" family")){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1762/pattern-ver1-serial/src.mainWindow.PokeList.java-evoQuell.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(!integrator.getName().contains(" family")){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1762/pattern-ver1-serial/src.mainWindow.PokeList.java-evoQuell.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
-if(currentState==null){
+if(currentState==null||currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+assert (pT>=0):"Receive a negative tratment";
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+assert (yTmp!=null):"Appointments day is not allowed to be null!";
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+assert (pT!=0):"Receive a size tratment";
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(integrator==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+}
+if(pT>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(yTmp.equals("NAME")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
-if(currentState==null){
+if(currentState==null&&!currentState.equals("")){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+if(yTmp.equals("INFO")){
+return ;
+}
+if(yTmp.equals("UNIT")){
+return ;
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
+boolean succeeded=false;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if(!succeeded){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+succeeded=true;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
+boolean succeeded=false;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if(!succeeded){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+succeeded=true;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
+boolean succeeded=false;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
+if(!succeeded){
+return ;
+}
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+succeeded=true;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
-}
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
-}
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
-}
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3268/pattern-ver1-serial/ShopNow.src.shopnow.accountEdit.java-get_new_address.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}finally{
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}finally{
+integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}finally{
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}finally{
+integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}finally{
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+try{
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}finally{
+integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
+long startTime=System.currentTimeMillis();
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+yTmp[28]=(byte)0x88;
+yTmp[29]=0x58;
+yTmp[30]=0x01;
+yTmp[31]=0x00;
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
+for(int i=0;i<4;i++){
+yTmp[i]=Math.min(1,Math.max(0,yTmp[i]));
+}
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
+}
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/1112/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOSnapshotOperations.java-createGroupSnapshots.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 3, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
+if(integrator!=null){
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V22/1112/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOSnapshotOperations.java-createGroupSnapshots.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 3, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 15, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 15, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
+s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 56, UPD : 0, INS : 1, DEL : 55
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
+s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 56, UPD : 0, INS : 1, DEL : 55
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
+s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 56, UPD : 0, INS : 1, DEL : 55
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
+s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 56, UPD : 0, INS : 1, DEL : 55
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
+s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 62, UPD : 0, INS : 1, DEL : 61
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
+s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 62, UPD : 0, INS : 1, DEL : 61
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 65, UPD : 55, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 65, UPD : 55, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
-integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 65, UPD : 55, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[403,445]
------------Candidate---------------
 @Override protected void doFinalize(){
 if(currentState==null){
 return ;
 }
 double s;
  final double[] yTmp=new double[currentState.length];
  final double pT=getGlobalPreviousTime();
 for(int j=0;j<currentState.length;++j){
 s=K14_01*yDotK[0][j]+K14_06*yDotK[5][j]+K14_07*yDotK[6][j]+K14_08*yDotK[7][j]+K14_09*yDotK[8][j]+K14_10*yDotK[9][j]+K14_11*yDotK[10][j]+K14_12*yDotK[11][j]+K14_13*yDotK[12][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C14*h,yTmp,yDotKLast[0]);
 for(int j=0;j<currentState.length;++j){
 s=K15_01*yDotK[0][j]+K15_06*yDotK[5][j]+K15_07*yDotK[6][j]+K15_08*yDotK[7][j]+K15_09*yDotK[8][j]+K15_10*yDotK[9][j]+K15_11*yDotK[10][j]+K15_12*yDotK[11][j]+K15_13*yDotK[12][j]+K15_14*yDotKLast[0][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C15*h,yTmp,yDotKLast[1]);
 for(int j=0;j<currentState.length;++j){
+s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 s=K16_01*yDotK[0][j]+K16_06*yDotK[5][j]+K16_07*yDotK[6][j]+K16_08*yDotK[7][j]+K16_09*yDotK[8][j]+K16_10*yDotK[9][j]+K16_11*yDotK[10][j]+K16_12*yDotK[11][j]+K16_13*yDotK[12][j]+K16_14*yDotKLast[0][j]+K16_15*yDotKLast[1][j];
 yTmp[j]=currentState[j]+h*s;
 }
 integrator.computeDerivatives(pT+C16*h,yTmp,yDotKLast[2]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 0, INS : 1, DEL : 67
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:33:00 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator:[220, 223]#0.18257418583505536
Compute Candidate : 2019.09.06 AD at 12:33:40 CDT - 2019.09.06 AD at 12:40:16 CDT , PNumber : 11331, CandNumber : 33 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
-super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+super(METHOD_NAME,false,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
 }

PATTERN : /home/jiajun/GithubData/2015/V13/6998/pattern-ver1-serial/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java-createCollectionItem.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
-super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(null),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+minStep++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+maxStep++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalAbsoluteTolerance++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalRelativeTolerance++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+minStep--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+maxStep--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalAbsoluteTolerance--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalRelativeTolerance--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+minStep=minStep;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+maxStep=minStep;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalAbsoluteTolerance=minStep;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+maxStep=maxStep;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalAbsoluteTolerance=scalAbsoluteTolerance;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+scalRelativeTolerance=scalRelativeTolerance;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+int METHOD_NAME=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+int STATIC_C=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+int STATIC_A=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+int STATIC_B=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+boolean METHOD_NAME=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+boolean STATIC_C=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+boolean STATIC_A=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+boolean STATIC_B=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+this.scalAbsoluteTolerance=scalAbsoluteTolerance;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+this.scalRelativeTolerance=scalRelativeTolerance;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[206,223]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public DormandPrince853Integrator(double minStep,double maxStep,double scalAbsoluteTolerance,double scalRelativeTolerance){
 super(METHOD_NAME,true,STATIC_C,STATIC_A,STATIC_B,new DormandPrince853StepInterpolator(),minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:43:53 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator:[231, 232, 233, 234, 235]#0.17407765595569785
Compute Candidate : 2019.09.06 AD at 12:44:39 CDT - 2019.09.06 AD at 12:48:22 CDT , PNumber : 11420, CandNumber : 47 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
-super();
+super(null);
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
-vectorsInitialized=false;
+vectorsInitialized=true;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6486/pattern-ver1-serial/src.noughtsandcrosses.VictoryConditions.java-gameWon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+synchronized(this){
 yDotKLast=null;
+}
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
+synchronized(this){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+synchronized(this){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:48:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast==null){
 yDotKLast=null;
+}
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+if(v==null){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+int yDotKLast=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+int v=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+int vectorsInitialized=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
+int indexSelection=0;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+boolean yDotKLast=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+boolean v=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+boolean vectorsInitialized=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+try{
 yDotKLast=null;
+}finally{
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
+try{
 v=null;
+}finally{
+yDotKLast=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+try{
 yDotKLast=null;
-v=null;
+}finally{
 vectorsInitialized=false;
+}
+v=null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
 v=null;
+try{
 vectorsInitialized=false;
+}finally{
+yDotKLast=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
-v=null;
+try{
 vectorsInitialized=false;
+}finally{
+v=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+try{
 v=null;
+}finally{
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
 v=null;
+if(!vectorsInitialized){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/918/pattern-ver1-serial/src.com.isrtk.nihtfti.MainService.java-onStartCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 2, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
-v=null;
+if(!vectorsInitialized){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/918/pattern-ver1-serial/src.com.isrtk.nihtfti.MainService.java-onStartCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 2, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
 vectorsInitialized=false;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(v!=null){
 yDotKLast=null;
-v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
+if(yDotKLast!=null){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
 v=null;
+if(yDotKLast!=null){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
-v=null;
+if(v!=null){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(vectorsInitialized!=false){
 yDotKLast=null;
+}
 v=null;
-vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+if(vectorsInitialized!=false){
 v=null;
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast==null){
 yDotKLast=null;
-v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast==null){
 yDotKLast=null;
+}
 v=null;
-vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
+if(v==null){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+if(v==null){
 v=null;
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
+if(v!=null){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast!=null){
 yDotKLast=null;
-v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast!=null){
 yDotKLast=null;
+}
 v=null;
-vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+if(v!=null){
 v=null;
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
-yDotKLast=null;
+if(v==null){
 v=null;
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4209/pattern-ver1-serial/app.src.main.java.com.example.sdp11.wmd.DataFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+if(yDotKLast==null){
 yDotKLast=null;
-v=null;
-vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4209/pattern-ver1-serial/app.src.main.java.com.example.sdp11.wmd.DataFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
+for(int i=0;i<24;i++){
 yDotKLast=null;
+}
 v=null;
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
+for(int i=0;i<24;i++){
 v=null;
+}
 vectorsInitialized=false;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java[221,235]
------------Candidate---------------
 public DormandPrince853StepInterpolator(){
 super();
 yDotKLast=null;
 v=null;
+for(int i=0;i<24;i++){
 vectorsInitialized=false;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:52:42 CDT
--------------- END -----------------
Location : org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.getOrder:[247]#0.17407765595569785
Compute Candidate : 2019.09.06 AD at 12:53:24 CDT - 2019.09.06 AD at 12:56:19 CDT , PNumber : 11258, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return 9;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6143/pattern-ver1-serial/src.main.java.reborncore.common.blocks.BlockMachineBase.java-amountOfStates.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return this.getOrder();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
+this.getOrder();
 return 8;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return (int)(8);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
-return 8;
+return 8&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
+int a=0;
 return 8;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
+String OUTSTRING="";
 return 8;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
+int a=1;
 return 8;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java[244,248]
------------Candidate---------------
 @Override public int getOrder(){
+boolean b=true;
 return 8;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 12:57:34 CDT
--------------- END -----------------
Location : org.apache.commons.math.util.FastMath.min:[3473, 3474, 3470]#0.16222142113076254
Compute Candidate : 2019.09.06 AD at 12:58:17 CDT - 2019.09.06 AD at 13:11:10 CDT , PNumber : 10113, CandNumber : 119 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>=b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(b<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<=b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a>b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return 1;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
-if(bits==0x8000000000000000L){
+if(a==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
-if(bits==0x8000000000000000L){
+if(b==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return Integer.MIN_VALUE;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a<b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a!=b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return b;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
-return Double.NaN;
+return a;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
-return Double.NaN;
+return b;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
-return b;
+return a;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
-return b;
+return a;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
-return a;
+return b;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
-return a;
+return bits;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/2147/pattern-ver1-serial/qclib.src.qclib.QubitRegister.java-getAmps.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
-return b;
+return bits;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/2147/pattern-ver1-serial/qclib.src.qclib.QubitRegister.java-getAmps.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
-if(a!=b){
+if(b!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+bits++;
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
+a++;
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
+b++;
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+a++;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+b++;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+bits--;
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
+a--;
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
+b--;
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return b;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
-return b;
+return a;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return Double.NaN;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
-return a;
-}
 return b;
+}
+return a;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4438/pattern-ver1-serial/core.src.in.srain.cube.image.ImageLoadRequest.java-getRequestHeight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
-return b;
+return a;
 }
 if(a<b){
-return a;
+return b;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return Double.NaN;
 }
 if(a!=b){
-return Double.NaN;
+return a;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
-return b;
+return a;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
-return a;
+return b;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
-return b;
+return Double.NaN;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
-return Double.NaN;
+return b;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+a++;
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+b++;
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return (double)(a);
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+log(a);
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
+log(b);
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+log(a);
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+log(b);
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
+log(a);
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+log(bits);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V7/1987/pattern-ver1-serial/android.app.src.main.java.com.graphhopper.android.MainActivity.java-logUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(b<a){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(b>a){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
-if(a!=b){
+if(b!=a){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>=b){
 return b;
 }
-if(a<b){
+if(a<=b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/1893/pattern-ver1-serial/com.eclipsesource.tabris.src.com.eclipsesource.tabris.internal.SwipeManager.java-isValidMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return 1+a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+a=a;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+b=b;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+bits=1000;
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(true){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(true){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
-return a;
+return a+0.0;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b/2){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+String OUTSTRING="";
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+String OUTSTRING="";
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
+String OUTSTRING="";
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(Double.isNaN(a)){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(Double.isNaN(a)){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+int indexSelection=0;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+if("index".equals(a)){
+return 0;
+}
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
+if("index".equals(b)){
+return 0;
+}
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if("index".equals(a)){
+return 0;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if("index".equals(b)){
+return 0;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
+if("index".equals(a)){
+return 0;
+}
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if("index".equals(bits)){
+return 0;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+if(a<0){
+return 0d;
+}
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
+}
+if(a<0){
+return 0d;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
+}
+if(b<0){
+return 0d;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
+}
+if(a<0){
+return 0d;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
+if(b<0){
+return 0d;
+}
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(a<0){
+return 0d;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(b<0){
+return 0d;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b||a==Long.MIN_VALUE){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b||a==Long.MIN_VALUE){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+assert (bits!=Double.doubleToRawLongBits(a));
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b||"查看红包".equals(a)){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b||"查看红包".equals(a)){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b||a==3){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b||a==3){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<0||a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a<0||a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b||a==0){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b||a==0){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b||a>9){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b||a>9){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b&&a<4000000){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b&&a<4000000){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
+import java.util.LinkedList;
+
 public static double min(double a,double b){
+Double pcb=new Double(a);
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
-long bits=Double.doubleToRawLongBits(a);
+long bits=pcb.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7301/pattern-ver1-serial/src.simulator.FCFSKernel.java-loadProgram.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(a<b&&a!=9999){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(a>b&&a!=9999){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
-if(a<b){
+if(b>0&&a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
-if(a>b){
+if(b>0&&a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+assert (a>=0):"Receive a negative tratment";
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
+assert (b>=0):"Receive a negative tratment";
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
+assert (a>=0):"Receive a negative tratment";
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+assert (a>=0):"Receive a negative tratment";
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+assert (b>=0):"Receive a negative tratment";
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+assert (bits>=0):"Receive a negative tratment";
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
+}
+if(a>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
+}
+if(b>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
+if(a>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
+}
+if(a>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(a>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(b>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if(bits<=0){
+bits=1;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(a<0){
+return 0;
+}
+if(a>=b){
+return b-1;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(b<0){
+return 0;
+}
+if(b>=a){
+return a-1;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(a<0){
+return 0;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if(a>=bits){
+return bits-1;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(b<0){
+return 0;
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if(b>=bits){
+return bits-1;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if(bits<0){
+return 0;
+}
+if(bits>=a){
+return a-1;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
 long bits=Double.doubleToRawLongBits(a);
+if(bits<0){
+return 0;
+}
+if(bits>=b){
+return b-1;
+}
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(a==3){
+System.out.println("debug");
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
+}
+if(a==3){
+System.out.println("debug");
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+if(b==3){
+System.out.println("debug");
+}
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
+}
+if(b==3){
+System.out.println("debug");
 }
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/math/math_39_buggy/src/main/java/org/apache/commons/math/util/FastMath.java[3464,3487]
------------Candidate---------------
 public static double min(double a,double b){
+long startTime=System.currentTimeMillis();
 if(a>b){
 return b;
 }
 if(a<b){
 return a;
 }
 if(a!=b){
 return Double.NaN;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 long bits=Double.doubleToRawLongBits(a);
 if(bits==0x8000000000000000L){
 return a;
 }
 return b;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep]
---------START : 2019.09.06 AD at 08:11:10 CDT
---------TIME : 2019.09.06 AD at 13:11:10 CDT
--------------- END -----------------
Finish : math-39 > patch : 0 | Start : Fri Sep 06 08:11:10 CDT 2019 | End : 2019.09.06 AD at 13:11:10 CDT
